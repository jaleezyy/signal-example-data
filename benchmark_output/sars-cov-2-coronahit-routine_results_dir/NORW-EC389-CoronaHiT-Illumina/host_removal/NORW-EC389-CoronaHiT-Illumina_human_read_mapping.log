[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 144804 sequences (20000135 bp)...
[M::process] read 144326 sequences (20000127 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 72329, 48, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (140, 203, 281)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 563)
[M::mem_pestat] mean and std.dev: (210.10, 86.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 704)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (275, 329, 458)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 824)
[M::mem_pestat] mean and std.dev: (325.05, 110.29)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1007)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 144804 reads in 11.400 CPU sec, 5.614 real sec
[M::process] read 145220 sequences (20000033 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 72071, 57, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (175, 248, 912)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2386)
[M::mem_pestat] mean and std.dev: (302.50, 245.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3123)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (144, 205, 285)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 567)
[M::mem_pestat] mean and std.dev: (212.65, 87.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 708)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (268, 368, 1094)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2746)
[M::mem_pestat] mean and std.dev: (646.25, 508.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3572)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (149, 208, 570)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1412)
[M::mem_pestat] mean and std.dev: (236.80, 163.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1833)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 144326 reads in 10.529 CPU sec, 5.042 real sec
[M::process] read 88390 sequences (12074692 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 72528, 37, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (122, 231, 453)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1115)
[M::mem_pestat] mean and std.dev: (222.08, 146.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1446)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (139, 202, 281)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 565)
[M::mem_pestat] mean and std.dev: (209.59, 87.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 707)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (293, 357, 981)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2357)
[M::mem_pestat] mean and std.dev: (553.94, 421.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3045)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 145220 reads in 10.534 CPU sec, 5.090 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (65, 43914, 102, 52)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (116, 186, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 545)
[M::mem_pestat] mean and std.dev: (187.26, 89.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 688)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (134, 195, 273)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 551)
[M::mem_pestat] mean and std.dev: (204.02, 87.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 690)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (222, 318, 1038)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2670)
[M::mem_pestat] mean and std.dev: (555.32, 553.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3486)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (138, 179, 261)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 507)
[M::mem_pestat] mean and std.dev: (200.72, 93.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 630)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 88390 reads in 6.722 CPU sec, 3.261 real sec
[main] Version: 0.7.17-r1188
[main] CMD: bwa mem -t 2 /workspace/lab/mcarthurlab/nasirja/covid-19-signal/data/composite_human_viral_reference.fna NORW-EC389-CoronaHiT-Illumina/raw_fastq/NORW-EC389-CoronaHiT-Illumina_R1.fastq.gz NORW-EC389-CoronaHiT-Illumina/raw_fastq/NORW-EC389-CoronaHiT-Illumina_R2.fastq.gz
[main] Real time: 25.803 sec; CPU: 44.253 sec
viral read count = 522701 (99.99%)
human read count = 39 (0.01%) 
unmapped read count = 0 (0.00%)
