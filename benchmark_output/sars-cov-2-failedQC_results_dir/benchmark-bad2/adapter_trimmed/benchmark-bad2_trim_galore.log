Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-failedQC_results_dir/benchmark-bad2/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> benchmark-bad2/host_removal/benchmark-bad2_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	0	AGATCGGAAGAGC	418	0.00
smallRNA	0	TGGAATTCTCGG	418	0.00
Nextera	0	CTGTCTCTTATA	418	0.00
Unable to auto-detect most prominent adapter from the first specified file (count Illumina: 0, count smallRNA: 0, count Nextera: 0)
Defaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-failedQC_results_dir/benchmark-bad2/adapter_trimmed/benchmark-bad2_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: benchmark-bad2/host_removal/benchmark-bad2_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to benchmark-bad2_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file benchmark-bad2/host_removal/benchmark-bad2_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC benchmark-bad2/host_removal/benchmark-bad2_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 0.035 s (84.777 µs/read; 0.71 M reads/minute).

=== Summary ===

Total reads processed:                     418
Reads with adapters:                       121 (28.9%)
Reads written (passing filters):           418 (100.0%)

Total basepairs processed:        23,576 bp
Quality-trimmed:                   2,996 bp (12.7%)
Total written (filtered):         20,427 bp (86.6%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 121 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 33.1%
  C: 27.3%
  G: 13.2%
  T: 26.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	90	104.5	0	90
2	30	26.1	0	30
3	1	6.5	0	1

RUN STATISTICS FOR INPUT FILE: benchmark-bad2/host_removal/benchmark-bad2_R1.fastq.gz
=============================================
418 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-failedQC_results_dir/benchmark-bad2/adapter_trimmed/benchmark-bad2_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: benchmark-bad2/host_removal/benchmark-bad2_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to benchmark-bad2_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file benchmark-bad2/host_removal/benchmark-bad2_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC benchmark-bad2/host_removal/benchmark-bad2_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 0.037 s (87.829 µs/read; 0.68 M reads/minute).

=== Summary ===

Total reads processed:                     418
Reads with adapters:                        96 (23.0%)
Reads written (passing filters):           418 (100.0%)

Total basepairs processed:        29,504 bp
Quality-trimmed:                   4,824 bp (16.4%)
Total written (filtered):         24,552 bp (83.2%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 96 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 30.2%
  C: 36.5%
  G: 11.5%
  T: 21.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	66	104.5	0	66
2	28	26.1	0	28
3	2	6.5	0	2

RUN STATISTICS FOR INPUT FILE: benchmark-bad2/host_removal/benchmark-bad2_R2.fastq.gz
=============================================
418 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files benchmark-bad2_R1_trimmed.fq.gz and benchmark-bad2_R2_trimmed.fq.gz
file_1: benchmark-bad2_R1_trimmed.fq.gz, file_2: benchmark-bad2_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: benchmark-bad2_R1_trimmed.fq.gz and benchmark-bad2_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to benchmark-bad2_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to benchmark-bad2_R2_val_2.fq.gz

Total number of sequences analysed: 418

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 29 (6.94%)


  >>> Now running FastQC on the validated data benchmark-bad2_R1_val_1.fq.gz<<<

Started analysis of benchmark-bad2_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data benchmark-bad2_R2_val_2.fq.gz<<<

Started analysis of benchmark-bad2_R2_val_2.fq.gz
Deleting both intermediate output files benchmark-bad2_R1_trimmed.fq.gz and benchmark-bad2_R2_trimmed.fq.gz

====================================================================================================

