Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00239/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> MA-MGH-00239/host_removal/MA-MGH-00239_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	47538	CTGTCTCTTATA	380367	12.50
Illumina	0	AGATCGGAAGAGC	380367	0.00
smallRNA	0	TGGAATTCTCGG	380367	0.00
Using Nextera adapter for trimming (count: 47538). Second best hit was Illumina (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00239/adapter_trimmed/MA-MGH-00239_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00239/host_removal/MA-MGH-00239_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to MA-MGH-00239_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00239/host_removal/MA-MGH-00239_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00239/host_removal/MA-MGH-00239_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 5.172 s (13.599 µs/read; 4.41 M reads/minute).

=== Summary ===

Total reads processed:                 380,367
Reads with adapters:                   157,422 (41.4%)
Reads written (passing filters):       380,367 (100.0%)

Total basepairs processed:    38,417,067 bp
Quality-trimmed:                 607,355 bp (1.6%)
Total written (filtered):     35,831,000 bp (93.3%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 157422 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 19.2%
  C: 31.1%
  G: 27.8%
  T: 21.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	72669	95091.8	0	72669
2	18842	23772.9	0	18842
3	6285	5943.2	0	6285
4	2551	1485.8	0	2551
5	1509	371.5	0	1509
6	1205	92.9	0	1205
7	1198	23.2	0	1198
8	1205	5.8	0	1205
9	1159	1.5	0	1156 3
10	1221	0.4	1	1162 59
11	1079	0.1	1	1052 27
12	1203	0.0	1	1158 45
13	1110	0.0	1	1077 33
14	1128	0.0	1	1095 33
15	1121	0.0	1	1100 21
16	1211	0.0	1	1159 52
17	1046	0.0	1	1029 17
18	1098	0.0	1	1078 20
19	1055	0.0	1	1039 16
20	1120	0.0	1	1095 25
21	1114	0.0	1	1086 28
22	1010	0.0	1	1003 7
23	1130	0.0	1	1100 30
24	1002	0.0	1	984 18
25	1072	0.0	1	1054 18
26	926	0.0	1	903 23
27	962	0.0	1	949 13
28	1009	0.0	1	990 19
29	1079	0.0	1	1056 23
30	957	0.0	1	950 7
31	1040	0.0	1	1014 26
32	865	0.0	1	849 16
33	909	0.0	1	896 13
34	959	0.0	1	943 16
35	865	0.0	1	838 27
36	806	0.0	1	792 14
37	824	0.0	1	810 14
38	779	0.0	1	770 9
39	901	0.0	1	887 14
40	840	0.0	1	823 17
41	878	0.0	1	860 18
42	816	0.0	1	806 10
43	838	0.0	1	809 29
44	665	0.0	1	648 17
45	1420	0.0	1	1404 16
46	221	0.0	1	213 8
47	653	0.0	1	639 14
48	676	0.0	1	659 17
49	791	0.0	1	783 8
50	704	0.0	1	687 17
51	889	0.0	1	871 18
52	807	0.0	1	795 12
53	726	0.0	1	715 11
54	745	0.0	1	730 15
55	671	0.0	1	658 13
56	601	0.0	1	594 7
57	685	0.0	1	679 6
58	726	0.0	1	717 9
59	590	0.0	1	584 6
60	634	0.0	1	630 4
61	491	0.0	1	484 7
62	702	0.0	1	688 14
63	635	0.0	1	628 7
64	525	0.0	1	517 8
65	402	0.0	1	399 3
66	351	0.0	1	347 4
67	271	0.0	1	269 2
68	310	0.0	1	309 1
69	286	0.0	1	282 4
70	367	0.0	1	364 3
71	14	0.0	1	12 2
72	30	0.0	1	29 1
73	89	0.0	1	86 3
74	57	0.0	1	52 5
75	13	0.0	1	13
76	4	0.0	1	3 1
77	14	0.0	1	3 11
78	3	0.0	1	2 1
79	3	0.0	1	2 1
80	3	0.0	1	2 1
81	3	0.0	1	1 2
82	9	0.0	1	2 7
83	6	0.0	1	2 4
84	7	0.0	1	4 3
85	10	0.0	1	1 9
86	1	0.0	1	0 1
87	1	0.0	1	0 1
88	3	0.0	1	2 1
90	2	0.0	1	1 1
91	2	0.0	1	0 2
93	1	0.0	1	0 1
95	7	0.0	1	0 7

RUN STATISTICS FOR INPUT FILE: MA-MGH-00239/host_removal/MA-MGH-00239_R1.fastq.gz
=============================================
380367 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00239/adapter_trimmed/MA-MGH-00239_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00239/host_removal/MA-MGH-00239_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to MA-MGH-00239_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00239/host_removal/MA-MGH-00239_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00239/host_removal/MA-MGH-00239_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 5.195 s (13.657 µs/read; 4.39 M reads/minute).

=== Summary ===

Total reads processed:                 380,367
Reads with adapters:                   158,899 (41.8%)
Reads written (passing filters):       380,367 (100.0%)

Total basepairs processed:    38,417,067 bp
Quality-trimmed:                 498,081 bp (1.3%)
Total written (filtered):     35,972,827 bp (93.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 158899 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 19.6%
  C: 30.7%
  G: 27.9%
  T: 21.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	73675	95091.8	0	73675
2	19400	23772.9	0	19400
3	6266	5943.2	0	6266
4	2702	1485.8	0	2702
5	1488	371.5	0	1488
6	1201	92.9	0	1201
7	1192	23.2	0	1192
8	1216	5.8	0	1216
9	1129	1.5	0	1129
10	1220	0.4	1	1169 51
11	1072	0.1	1	1053 19
12	1192	0.0	1	1155 37
13	1113	0.0	1	1093 20
14	1105	0.0	1	1081 24
15	1122	0.0	1	1102 20
16	1136	0.0	1	1108 28
17	1096	0.0	1	1074 22
18	1074	0.0	1	1055 19
19	1117	0.0	1	1090 27
20	1075	0.0	1	1064 11
21	1077	0.0	1	1059 18
22	1075	0.0	1	1047 28
23	1077	0.0	1	1055 22
24	1027	0.0	1	1004 23
25	1071	0.0	1	1047 24
26	910	0.0	1	890 20
27	982	0.0	1	957 25
28	1010	0.0	1	992 18
29	1006	0.0	1	992 14
30	1001	0.0	1	976 25
31	996	0.0	1	965 31
32	904	0.0	1	888 16
33	979	0.0	1	965 14
34	905	0.0	1	884 21
35	877	0.0	1	862 15
36	799	0.0	1	782 17
37	808	0.0	1	799 9
38	973	0.0	1	962 11
39	959	0.0	1	948 11
40	849	0.0	1	844 5
41	676	0.0	1	660 16
42	994	0.0	1	980 14
43	673	0.0	1	648 25
44	3148	0.0	1	3100 48
45	1050	0.0	1	1029 21
46	268	0.0	1	255 13
47	988	0.0	1	970 18
48	229	0.0	1	222 7
49	539	0.0	1	530 9
50	294	0.0	1	285 9
51	354	0.0	1	349 5
52	277	0.0	1	267 10
53	670	0.0	1	661 9
54	950	0.0	1	932 18
55	337	0.0	1	326 11
56	631	0.0	1	628 3
57	1301	0.0	1	1288 13
58	443	0.0	1	436 7
59	432	0.0	1	425 7
60	1023	0.0	1	1013 10
61	584	0.0	1	573 11
62	267	0.0	1	256 11
63	847	0.0	1	835 12
64	857	0.0	1	850 7
65	307	0.0	1	304 3
66	254	0.0	1	253 1
67	174	0.0	1	171 3
68	66	0.0	1	65 1
69	82	0.0	1	80 2
70	106	0.0	1	104 2
71	49	0.0	1	46 3
72	32	0.0	1	27 5
73	27	0.0	1	25 2
74	15	0.0	1	13 2
75	7	0.0	1	4 3
76	2	0.0	1	0 2
77	21	0.0	1	2 19
78	1	0.0	1	1
79	2	0.0	1	2
80	3	0.0	1	1 2
82	5	0.0	1	0 5
83	8	0.0	1	1 7
84	9	0.0	1	6 3
85	7	0.0	1	1 6
86	2	0.0	1	1 1
88	1	0.0	1	1
92	1	0.0	1	0 1
95	10	0.0	1	1 9

RUN STATISTICS FOR INPUT FILE: MA-MGH-00239/host_removal/MA-MGH-00239_R2.fastq.gz
=============================================
380367 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files MA-MGH-00239_R1_trimmed.fq.gz and MA-MGH-00239_R2_trimmed.fq.gz
file_1: MA-MGH-00239_R1_trimmed.fq.gz, file_2: MA-MGH-00239_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: MA-MGH-00239_R1_trimmed.fq.gz and MA-MGH-00239_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to MA-MGH-00239_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to MA-MGH-00239_R2_val_2.fq.gz

Total number of sequences analysed: 380367

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1826 (0.48%)


  >>> Now running FastQC on the validated data MA-MGH-00239_R1_val_1.fq.gz<<<

Started analysis of MA-MGH-00239_R1_val_1.fq.gz
Approx 5% complete for MA-MGH-00239_R1_val_1.fq.gz
Approx 10% complete for MA-MGH-00239_R1_val_1.fq.gz
Approx 15% complete for MA-MGH-00239_R1_val_1.fq.gz
Approx 20% complete for MA-MGH-00239_R1_val_1.fq.gz
Approx 25% complete for MA-MGH-00239_R1_val_1.fq.gz
Approx 30% complete for MA-MGH-00239_R1_val_1.fq.gz
Approx 35% complete for MA-MGH-00239_R1_val_1.fq.gz
Approx 40% complete for MA-MGH-00239_R1_val_1.fq.gz
Approx 45% complete for MA-MGH-00239_R1_val_1.fq.gz
Approx 50% complete for MA-MGH-00239_R1_val_1.fq.gz
Approx 55% complete for MA-MGH-00239_R1_val_1.fq.gz
Approx 60% complete for MA-MGH-00239_R1_val_1.fq.gz
Approx 65% complete for MA-MGH-00239_R1_val_1.fq.gz
Approx 70% complete for MA-MGH-00239_R1_val_1.fq.gz
Approx 75% complete for MA-MGH-00239_R1_val_1.fq.gz
Approx 80% complete for MA-MGH-00239_R1_val_1.fq.gz
Approx 85% complete for MA-MGH-00239_R1_val_1.fq.gz
Approx 90% complete for MA-MGH-00239_R1_val_1.fq.gz
Approx 95% complete for MA-MGH-00239_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data MA-MGH-00239_R2_val_2.fq.gz<<<

Started analysis of MA-MGH-00239_R2_val_2.fq.gz
Approx 5% complete for MA-MGH-00239_R2_val_2.fq.gz
Approx 10% complete for MA-MGH-00239_R2_val_2.fq.gz
Approx 15% complete for MA-MGH-00239_R2_val_2.fq.gz
Approx 20% complete for MA-MGH-00239_R2_val_2.fq.gz
Approx 25% complete for MA-MGH-00239_R2_val_2.fq.gz
Approx 30% complete for MA-MGH-00239_R2_val_2.fq.gz
Approx 35% complete for MA-MGH-00239_R2_val_2.fq.gz
Approx 40% complete for MA-MGH-00239_R2_val_2.fq.gz
Approx 45% complete for MA-MGH-00239_R2_val_2.fq.gz
Approx 50% complete for MA-MGH-00239_R2_val_2.fq.gz
Approx 55% complete for MA-MGH-00239_R2_val_2.fq.gz
Approx 60% complete for MA-MGH-00239_R2_val_2.fq.gz
Approx 65% complete for MA-MGH-00239_R2_val_2.fq.gz
Approx 70% complete for MA-MGH-00239_R2_val_2.fq.gz
Approx 75% complete for MA-MGH-00239_R2_val_2.fq.gz
Approx 80% complete for MA-MGH-00239_R2_val_2.fq.gz
Approx 85% complete for MA-MGH-00239_R2_val_2.fq.gz
Approx 90% complete for MA-MGH-00239_R2_val_2.fq.gz
Approx 95% complete for MA-MGH-00239_R2_val_2.fq.gz
Deleting both intermediate output files MA-MGH-00239_R1_trimmed.fq.gz and MA-MGH-00239_R2_trimmed.fq.gz

====================================================================================================

