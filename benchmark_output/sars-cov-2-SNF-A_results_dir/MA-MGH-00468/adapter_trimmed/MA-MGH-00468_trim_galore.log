Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00468/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> MA-MGH-00468/host_removal/MA-MGH-00468_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	57434	CTGTCTCTTATA	1000000	5.74
Illumina	0	AGATCGGAAGAGC	1000000	0.00
smallRNA	0	TGGAATTCTCGG	1000000	0.00
Using Nextera adapter for trimming (count: 57434). Second best hit was Illumina (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00468/adapter_trimmed/MA-MGH-00468_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00468/host_removal/MA-MGH-00468_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to MA-MGH-00468_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00468/host_removal/MA-MGH-00468_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00468/host_removal/MA-MGH-00468_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 11.452 s (11.062 µs/read; 5.42 M reads/minute).

=== Summary ===

Total reads processed:               1,035,331
Reads with adapters:                   376,236 (36.3%)
Reads written (passing filters):     1,035,331 (100.0%)

Total basepairs processed:   104,568,431 bp
Quality-trimmed:               2,192,024 bp (2.1%)
Total written (filtered):     99,357,840 bp (95.0%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 376236 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 20.6%
  C: 29.2%
  G: 26.9%
  T: 23.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	228425	258832.8	0	228425
2	58219	64708.2	0	58219
3	18090	16177.0	0	18090
4	4445	4044.3	0	4445
5	1677	1011.1	0	1677
6	941	252.8	0	941
7	964	63.2	0	964
8	715	15.8	0	715
9	756	3.9	0	755 1
10	754	1.0	1	719 35
11	714	0.2	1	704 10
12	822	0.1	1	805 17
13	752	0.1	1	742 10
14	725	0.1	1	708 17
15	754	0.1	1	745 9
16	835	0.1	1	817 18
17	719	0.1	1	710 9
18	766	0.1	1	751 15
19	766	0.1	1	758 8
20	830	0.1	1	819 11
21	793	0.1	1	784 9
22	780	0.1	1	773 7
23	854	0.1	1	832 22
24	816	0.1	1	805 11
25	840	0.1	1	828 12
26	764	0.1	1	741 23
27	823	0.1	1	806 17
28	820	0.1	1	810 10
29	868	0.1	1	855 13
30	834	0.1	1	824 10
31	886	0.1	1	872 14
32	780	0.1	1	768 12
33	885	0.1	1	871 14
34	910	0.1	1	893 17
35	847	0.1	1	835 12
36	864	0.1	1	851 13
37	866	0.1	1	858 8
38	856	0.1	1	841 15
39	863	0.1	1	850 13
40	921	0.1	1	901 20
41	1080	0.1	1	1065 15
42	1048	0.1	1	1034 14
43	963	0.1	1	943 20
44	965	0.1	1	949 16
45	1994	0.1	1	1963 31
46	343	0.1	1	334 9
47	1047	0.1	1	1033 14
48	10387	0.1	1	10317 70
49	1091	0.1	1	1062 29
50	175	0.1	1	169 6
51	2812	0.1	1	2788 24
52	1001	0.1	1	981 20
53	230	0.1	1	220 10
54	2009	0.1	1	1987 22
55	2573	0.1	1	2554 19
56	416	0.1	1	413 3
57	312	0.1	1	306 6
58	140	0.1	1	137 3
59	1168	0.1	1	1156 12
60	81	0.1	1	79 2
61	138	0.1	1	137 1
62	1736	0.1	1	1721 15
63	238	0.1	1	234 4
64	113	0.1	1	111 2
65	843	0.1	1	838 5
66	817	0.1	1	810 7
67	58	0.1	1	57 1
68	570	0.1	1	562 8
69	834	0.1	1	830 4
70	1130	0.1	1	1122 8
71	53	0.1	1	52 1
72	8	0.1	1	8
73	55	0.1	1	54 1
74	112	0.1	1	110 2
75	39	0.1	1	39
76	18	0.1	1	18
77	11	0.1	1	9 2
78	15	0.1	1	15
79	13	0.1	1	13
80	9	0.1	1	9
81	13	0.1	1	13
82	5	0.1	1	5
83	6	0.1	1	6
84	7	0.1	1	6 1
85	4	0.1	1	4
86	6	0.1	1	6
87	2	0.1	1	2
88	4	0.1	1	3 1
89	1	0.1	1	1
91	3	0.1	1	3
98	1	0.1	1	0 1

RUN STATISTICS FOR INPUT FILE: MA-MGH-00468/host_removal/MA-MGH-00468_R1.fastq.gz
=============================================
1035331 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00468/adapter_trimmed/MA-MGH-00468_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00468/host_removal/MA-MGH-00468_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to MA-MGH-00468_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00468/host_removal/MA-MGH-00468_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00468/host_removal/MA-MGH-00468_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 12.878 s (12.439 µs/read; 4.82 M reads/minute).

=== Summary ===

Total reads processed:               1,035,331
Reads with adapters:                   375,382 (36.3%)
Reads written (passing filters):     1,035,331 (100.0%)

Total basepairs processed:   104,568,431 bp
Quality-trimmed:               1,721,441 bp (1.6%)
Total written (filtered):     99,707,591 bp (95.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 375382 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 21.3%
  C: 29.1%
  G: 26.8%
  T: 22.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	229295	258832.8	0	229295
2	57414	64708.2	0	57414
3	17446	16177.0	0	17446
4	4196	4044.3	0	4196
5	1660	1011.1	0	1660
6	948	252.8	0	948
7	910	63.2	0	910
8	718	15.8	0	718
9	749	3.9	0	748 1
10	758	1.0	1	722 36
11	716	0.2	1	703 13
12	811	0.1	1	790 21
13	757	0.1	1	745 12
14	726	0.1	1	711 15
15	769	0.1	1	753 16
16	758	0.1	1	741 17
17	764	0.1	1	752 12
18	760	0.1	1	743 17
19	805	0.1	1	786 19
20	820	0.1	1	807 13
21	789	0.1	1	771 18
22	805	0.1	1	789 16
23	823	0.1	1	808 15
24	856	0.1	1	831 25
25	843	0.1	1	830 13
26	748	0.1	1	729 19
27	823	0.1	1	808 15
28	819	0.1	1	809 10
29	877	0.1	1	860 17
30	829	0.1	1	818 11
31	861	0.1	1	849 12
32	818	0.1	1	809 9
33	882	0.1	1	865 17
34	858	0.1	1	844 14
35	896	0.1	1	876 20
36	850	0.1	1	836 14
37	1012	0.1	1	985 27
38	744	0.1	1	723 21
39	863	0.1	1	846 17
40	1262	0.1	1	1245 17
41	710	0.1	1	692 18
42	1056	0.1	1	1038 18
43	856	0.1	1	844 12
44	970	0.1	1	955 15
45	984	0.1	1	969 15
46	945	0.1	1	932 13
47	2200	0.1	1	2177 23
48	402	0.1	1	390 12
49	1064	0.1	1	1049 15
50	768	0.1	1	761 7
51	862	0.1	1	851 11
52	924	0.1	1	908 16
53	1103	0.1	1	1084 19
54	1966	0.1	1	1935 31
55	473	0.1	1	462 11
56	1300	0.1	1	1282 18
57	4614	0.1	1	4574 40
58	771	0.1	1	751 20
59	534	0.1	1	527 7
60	3393	0.1	1	3374 19
61	673	0.1	1	661 12
62	548	0.1	1	537 11
63	4013	0.1	1	3982 31
64	1161	0.1	1	1147 14
65	360	0.1	1	355 5
66	528	0.1	1	520 8
67	600	0.1	1	594 6
68	407	0.1	1	405 2
69	604	0.1	1	598 6
70	735	0.1	1	731 4
71	401	0.1	1	399 2
72	140	0.1	1	138 2
73	131	0.1	1	128 3
74	37	0.1	1	34 3
75	9	0.1	1	7 2
76	7	0.1	1	7
77	7	0.1	1	7
78	15	0.1	1	14 1
79	14	0.1	1	14
80	7	0.1	1	6 1
81	13	0.1	1	13
82	6	0.1	1	5 1
83	5	0.1	1	4 1
84	7	0.1	1	7
85	3	0.1	1	3
86	6	0.1	1	5 1
87	5	0.1	1	4 1
88	2	0.1	1	2
89	1	0.1	1	1
91	3	0.1	1	3
93	1	0.1	1	0 1

RUN STATISTICS FOR INPUT FILE: MA-MGH-00468/host_removal/MA-MGH-00468_R2.fastq.gz
=============================================
1035331 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files MA-MGH-00468_R1_trimmed.fq.gz and MA-MGH-00468_R2_trimmed.fq.gz
file_1: MA-MGH-00468_R1_trimmed.fq.gz, file_2: MA-MGH-00468_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: MA-MGH-00468_R1_trimmed.fq.gz and MA-MGH-00468_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to MA-MGH-00468_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to MA-MGH-00468_R2_val_2.fq.gz

Total number of sequences analysed: 1035331

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 5541 (0.54%)


  >>> Now running FastQC on the validated data MA-MGH-00468_R1_val_1.fq.gz<<<

Started analysis of MA-MGH-00468_R1_val_1.fq.gz
Approx 5% complete for MA-MGH-00468_R1_val_1.fq.gz
Approx 10% complete for MA-MGH-00468_R1_val_1.fq.gz
Approx 15% complete for MA-MGH-00468_R1_val_1.fq.gz
Approx 20% complete for MA-MGH-00468_R1_val_1.fq.gz
Approx 25% complete for MA-MGH-00468_R1_val_1.fq.gz
Approx 30% complete for MA-MGH-00468_R1_val_1.fq.gz
Approx 35% complete for MA-MGH-00468_R1_val_1.fq.gz
Approx 40% complete for MA-MGH-00468_R1_val_1.fq.gz
Approx 45% complete for MA-MGH-00468_R1_val_1.fq.gz
Approx 50% complete for MA-MGH-00468_R1_val_1.fq.gz
Approx 55% complete for MA-MGH-00468_R1_val_1.fq.gz
Approx 60% complete for MA-MGH-00468_R1_val_1.fq.gz
Approx 65% complete for MA-MGH-00468_R1_val_1.fq.gz
Approx 70% complete for MA-MGH-00468_R1_val_1.fq.gz
Approx 75% complete for MA-MGH-00468_R1_val_1.fq.gz
Approx 80% complete for MA-MGH-00468_R1_val_1.fq.gz
Approx 85% complete for MA-MGH-00468_R1_val_1.fq.gz
Approx 90% complete for MA-MGH-00468_R1_val_1.fq.gz
Approx 95% complete for MA-MGH-00468_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data MA-MGH-00468_R2_val_2.fq.gz<<<

Started analysis of MA-MGH-00468_R2_val_2.fq.gz
Approx 5% complete for MA-MGH-00468_R2_val_2.fq.gz
Approx 10% complete for MA-MGH-00468_R2_val_2.fq.gz
Approx 15% complete for MA-MGH-00468_R2_val_2.fq.gz
Approx 20% complete for MA-MGH-00468_R2_val_2.fq.gz
Approx 25% complete for MA-MGH-00468_R2_val_2.fq.gz
Approx 30% complete for MA-MGH-00468_R2_val_2.fq.gz
Approx 35% complete for MA-MGH-00468_R2_val_2.fq.gz
Approx 40% complete for MA-MGH-00468_R2_val_2.fq.gz
Approx 45% complete for MA-MGH-00468_R2_val_2.fq.gz
Approx 50% complete for MA-MGH-00468_R2_val_2.fq.gz
Approx 55% complete for MA-MGH-00468_R2_val_2.fq.gz
Approx 60% complete for MA-MGH-00468_R2_val_2.fq.gz
Approx 65% complete for MA-MGH-00468_R2_val_2.fq.gz
Approx 70% complete for MA-MGH-00468_R2_val_2.fq.gz
Approx 75% complete for MA-MGH-00468_R2_val_2.fq.gz
Approx 80% complete for MA-MGH-00468_R2_val_2.fq.gz
Approx 85% complete for MA-MGH-00468_R2_val_2.fq.gz
Approx 90% complete for MA-MGH-00468_R2_val_2.fq.gz
Approx 95% complete for MA-MGH-00468_R2_val_2.fq.gz
Deleting both intermediate output files MA-MGH-00468_R1_trimmed.fq.gz and MA-MGH-00468_R2_trimmed.fq.gz

====================================================================================================

