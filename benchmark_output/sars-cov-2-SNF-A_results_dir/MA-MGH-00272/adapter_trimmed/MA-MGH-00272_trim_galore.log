Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00272/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> MA-MGH-00272/host_removal/MA-MGH-00272_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	50284	CTGTCTCTTATA	678784	7.41
smallRNA	0	TGGAATTCTCGG	678784	0.00
Illumina	0	AGATCGGAAGAGC	678784	0.00
Using Nextera adapter for trimming (count: 50284). Second best hit was smallRNA (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00272/adapter_trimmed/MA-MGH-00272_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00272/host_removal/MA-MGH-00272_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to MA-MGH-00272_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00272/host_removal/MA-MGH-00272_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00272/host_removal/MA-MGH-00272_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 6.532 s (9.623 µs/read; 6.23 M reads/minute).

=== Summary ===

Total reads processed:                 678,784
Reads with adapters:                   246,993 (36.4%)
Reads written (passing filters):       678,784 (100.0%)

Total basepairs processed:    68,557,184 bp
Quality-trimmed:               1,328,201 bp (1.9%)
Total written (filtered):     64,946,926 bp (94.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 246993 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 18.5%
  C: 29.4%
  G: 30.0%
  T: 22.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	138108	169696.0	0	138108
2	33954	42424.0	0	33954
3	10785	10606.0	0	10785
4	3361	2651.5	0	3361
5	1850	662.9	0	1850
6	1220	165.7	0	1220
7	1261	41.4	0	1261
8	1229	10.4	0	1229
9	1165	2.6	0	1164 1
10	1279	0.6	1	1216 63
11	1144	0.2	1	1114 30
12	1217	0.0	1	1159 58
13	1162	0.0	1	1122 40
14	1150	0.0	1	1106 44
15	1128	0.0	1	1102 26
16	1252	0.0	1	1194 58
17	1056	0.0	1	1030 26
18	1132	0.0	1	1100 32
19	1001	0.0	1	978 23
20	1142	0.0	1	1101 41
21	1154	0.0	1	1109 45
22	984	0.0	1	968 16
23	1115	0.0	1	1080 35
24	961	0.0	1	936 25
25	1007	0.0	1	983 24
26	955	0.0	1	925 30
27	1010	0.0	1	989 21
28	990	0.0	1	960 30
29	1012	0.0	1	985 27
30	1005	0.0	1	977 28
31	1093	0.0	1	1046 47
32	814	0.0	1	797 17
33	922	0.0	1	901 21
34	952	0.0	1	925 27
35	920	0.0	1	903 17
36	916	0.0	1	896 20
37	828	0.0	1	793 35
38	821	0.0	1	803 18
39	874	0.0	1	838 36
40	831	0.0	1	811 20
41	828	0.0	1	797 31
42	847	0.0	1	832 15
43	825	0.0	1	801 24
44	818	0.0	1	792 26
45	1424	0.0	1	1398 26
46	222	0.0	1	213 9
47	665	0.0	1	652 13
48	772	0.0	1	755 17
49	927	0.0	1	913 14
50	655	0.0	1	640 15
51	940	0.0	1	922 18
52	779	0.0	1	766 13
53	735	0.0	1	715 20
54	836	0.0	1	814 22
55	734	0.0	1	724 10
56	676	0.0	1	658 18
57	731	0.0	1	716 15
58	721	0.0	1	714 7
59	715	0.0	1	705 10
60	665	0.0	1	659 6
61	507	0.0	1	497 10
62	1036	0.0	1	1017 19
63	861	0.0	1	845 16
64	681	0.0	1	674 7
65	553	0.0	1	550 3
66	587	0.0	1	584 3
67	359	0.0	1	357 2
68	504	0.0	1	498 6
69	527	0.0	1	522 5
70	604	0.0	1	599 5
71	26	0.0	1	25 1
72	47	0.0	1	45 2
73	188	0.0	1	183 5
74	133	0.0	1	131 2
75	23	0.0	1	22 1
76	3	0.0	1	3
77	14	0.0	1	7 7
78	8	0.0	1	4 4
79	3	0.0	1	2 1
80	3	0.0	1	1 2
81	9	0.0	1	7 2
82	5	0.0	1	0 5
83	11	0.0	1	0 11
84	3	0.0	1	1 2
85	7	0.0	1	0 7
88	2	0.0	1	1 1
89	1	0.0	1	1
90	1	0.0	1	0 1
91	2	0.0	1	1 1
92	1	0.0	1	0 1
95	9	0.0	1	0 9

RUN STATISTICS FOR INPUT FILE: MA-MGH-00272/host_removal/MA-MGH-00272_R1.fastq.gz
=============================================
678784 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00272/adapter_trimmed/MA-MGH-00272_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00272/host_removal/MA-MGH-00272_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to MA-MGH-00272_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00272/host_removal/MA-MGH-00272_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00272/host_removal/MA-MGH-00272_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 7.749 s (11.415 µs/read; 5.26 M reads/minute).

=== Summary ===

Total reads processed:                 678,784
Reads with adapters:                   250,155 (36.9%)
Reads written (passing filters):       678,784 (100.0%)

Total basepairs processed:    68,557,184 bp
Quality-trimmed:               1,226,904 bp (1.8%)
Total written (filtered):     65,094,924 bp (94.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 250155 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 18.9%
  C: 29.6%
  G: 29.7%
  T: 21.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	141053	169696.0	0	141053
2	34983	42424.0	0	34983
3	10662	10606.0	0	10662
4	3459	2651.5	0	3459
5	1851	662.9	0	1851
6	1170	165.7	0	1170
7	1224	41.4	0	1224
8	1214	10.4	0	1214
9	1147	2.6	0	1147
10	1278	0.6	1	1187 91
11	1116	0.2	1	1079 37
12	1178	0.0	1	1124 54
13	1140	0.0	1	1097 43
14	1116	0.0	1	1065 51
15	1117	0.0	1	1075 42
16	1182	0.0	1	1106 76
17	1079	0.0	1	1039 40
18	1107	0.0	1	1067 40
19	1066	0.0	1	1007 59
20	1055	0.0	1	1023 32
21	1102	0.0	1	1043 59
22	1079	0.0	1	1029 50
23	996	0.0	1	960 36
24	998	0.0	1	951 47
25	999	0.0	1	956 43
26	902	0.0	1	873 29
27	1000	0.0	1	970 30
28	991	0.0	1	959 32
29	931	0.0	1	911 20
30	1025	0.0	1	979 46
31	989	0.0	1	947 42
32	914	0.0	1	881 33
33	1072	0.0	1	1033 39
34	878	0.0	1	835 43
35	838	0.0	1	816 22
36	917	0.0	1	896 21
37	821	0.0	1	784 37
38	1012	0.0	1	977 35
39	775	0.0	1	742 33
40	776	0.0	1	750 26
41	789	0.0	1	771 18
42	1038	0.0	1	1001 37
43	708	0.0	1	679 29
44	1404	0.0	1	1368 36
45	1253	0.0	1	1219 34
46	948	0.0	1	914 34
47	1118	0.0	1	1094 24
48	326	0.0	1	312 14
49	1116	0.0	1	1093 23
50	231	0.0	1	212 19
51	456	0.0	1	443 13
52	364	0.0	1	354 10
53	713	0.0	1	697 16
54	1148	0.0	1	1129 19
55	321	0.0	1	301 20
56	705	0.0	1	680 25
57	2558	0.0	1	2519 39
58	428	0.0	1	423 5
59	260	0.0	1	251 9
60	1370	0.0	1	1347 23
61	310	0.0	1	297 13
62	330	0.0	1	317 13
63	1469	0.0	1	1446 23
64	876	0.0	1	863 13
65	167	0.0	1	164 3
66	276	0.0	1	267 9
67	134	0.0	1	128 6
68	150	0.0	1	146 4
69	171	0.0	1	168 3
70	279	0.0	1	273 6
71	146	0.0	1	144 2
72	105	0.0	1	99 6
73	138	0.0	1	133 5
74	46	0.0	1	46
75	5	0.0	1	5
76	3	0.0	1	2 1
77	20	0.0	1	5 15
78	6	0.0	1	4 2
79	4	0.0	1	4
80	1	0.0	1	1
81	3	0.0	1	2 1
82	6	0.0	1	0 6
83	10	0.0	1	1 9
84	6	0.0	1	1 5
85	8	0.0	1	0 8
88	1	0.0	1	1
90	2	0.0	1	0 2
91	1	0.0	1	1
92	3	0.0	1	0 3
95	7	0.0	1	0 7
96	1	0.0	1	0 1
99	1	0.0	1	0 1
100	2	0.0	1	0 2
101	2	0.0	1	0 2

RUN STATISTICS FOR INPUT FILE: MA-MGH-00272/host_removal/MA-MGH-00272_R2.fastq.gz
=============================================
678784 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files MA-MGH-00272_R1_trimmed.fq.gz and MA-MGH-00272_R2_trimmed.fq.gz
file_1: MA-MGH-00272_R1_trimmed.fq.gz, file_2: MA-MGH-00272_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: MA-MGH-00272_R1_trimmed.fq.gz and MA-MGH-00272_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to MA-MGH-00272_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to MA-MGH-00272_R2_val_2.fq.gz

Total number of sequences analysed: 678784

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 4711 (0.69%)


  >>> Now running FastQC on the validated data MA-MGH-00272_R1_val_1.fq.gz<<<

Started analysis of MA-MGH-00272_R1_val_1.fq.gz
Approx 5% complete for MA-MGH-00272_R1_val_1.fq.gz
Approx 10% complete for MA-MGH-00272_R1_val_1.fq.gz
Approx 15% complete for MA-MGH-00272_R1_val_1.fq.gz
Approx 20% complete for MA-MGH-00272_R1_val_1.fq.gz
Approx 25% complete for MA-MGH-00272_R1_val_1.fq.gz
Approx 30% complete for MA-MGH-00272_R1_val_1.fq.gz
Approx 35% complete for MA-MGH-00272_R1_val_1.fq.gz
Approx 40% complete for MA-MGH-00272_R1_val_1.fq.gz
Approx 45% complete for MA-MGH-00272_R1_val_1.fq.gz
Approx 50% complete for MA-MGH-00272_R1_val_1.fq.gz
Approx 55% complete for MA-MGH-00272_R1_val_1.fq.gz
Approx 60% complete for MA-MGH-00272_R1_val_1.fq.gz
Approx 65% complete for MA-MGH-00272_R1_val_1.fq.gz
Approx 70% complete for MA-MGH-00272_R1_val_1.fq.gz
Approx 75% complete for MA-MGH-00272_R1_val_1.fq.gz
Approx 80% complete for MA-MGH-00272_R1_val_1.fq.gz
Approx 85% complete for MA-MGH-00272_R1_val_1.fq.gz
Approx 90% complete for MA-MGH-00272_R1_val_1.fq.gz
Approx 95% complete for MA-MGH-00272_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data MA-MGH-00272_R2_val_2.fq.gz<<<

Started analysis of MA-MGH-00272_R2_val_2.fq.gz
Approx 5% complete for MA-MGH-00272_R2_val_2.fq.gz
Approx 10% complete for MA-MGH-00272_R2_val_2.fq.gz
Approx 15% complete for MA-MGH-00272_R2_val_2.fq.gz
Approx 20% complete for MA-MGH-00272_R2_val_2.fq.gz
Approx 25% complete for MA-MGH-00272_R2_val_2.fq.gz
Approx 30% complete for MA-MGH-00272_R2_val_2.fq.gz
Approx 35% complete for MA-MGH-00272_R2_val_2.fq.gz
Approx 40% complete for MA-MGH-00272_R2_val_2.fq.gz
Approx 45% complete for MA-MGH-00272_R2_val_2.fq.gz
Approx 50% complete for MA-MGH-00272_R2_val_2.fq.gz
Approx 55% complete for MA-MGH-00272_R2_val_2.fq.gz
Approx 60% complete for MA-MGH-00272_R2_val_2.fq.gz
Approx 65% complete for MA-MGH-00272_R2_val_2.fq.gz
Approx 70% complete for MA-MGH-00272_R2_val_2.fq.gz
Approx 75% complete for MA-MGH-00272_R2_val_2.fq.gz
Approx 80% complete for MA-MGH-00272_R2_val_2.fq.gz
Approx 85% complete for MA-MGH-00272_R2_val_2.fq.gz
Approx 90% complete for MA-MGH-00272_R2_val_2.fq.gz
Approx 95% complete for MA-MGH-00272_R2_val_2.fq.gz
Deleting both intermediate output files MA-MGH-00272_R1_trimmed.fq.gz and MA-MGH-00272_R2_trimmed.fq.gz

====================================================================================================

