Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00254/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> MA-MGH-00254/host_removal/MA-MGH-00254_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	6200	CTGTCTCTTATA	72880	8.51
Illumina	0	AGATCGGAAGAGC	72880	0.00
smallRNA	0	TGGAATTCTCGG	72880	0.00
Using Nextera adapter for trimming (count: 6200). Second best hit was Illumina (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00254/adapter_trimmed/MA-MGH-00254_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00254/host_removal/MA-MGH-00254_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to MA-MGH-00254_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00254/host_removal/MA-MGH-00254_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00254/host_removal/MA-MGH-00254_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 1.143 s (15.684 µs/read; 3.83 M reads/minute).

=== Summary ===

Total reads processed:                  72,880
Reads with adapters:                    29,065 (39.9%)
Reads written (passing filters):        72,880 (100.0%)

Total basepairs processed:     7,360,880 bp
Quality-trimmed:                  71,098 bp (1.0%)
Total written (filtered):      7,031,326 bp (95.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 29065 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 19.5%
  C: 28.8%
  G: 29.1%
  T: 22.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	15194	18220.0	0	15194
2	3799	4555.0	0	3799
3	1376	1138.8	0	1376
4	465	284.7	0	465
5	293	71.2	0	293
6	223	17.8	0	223
7	240	4.4	0	240
8	220	1.1	0	220
9	195	0.3	0	194 1
10	211	0.1	1	200 11
11	200	0.0	1	192 8
12	233	0.0	1	215 18
13	197	0.0	1	179 18
14	195	0.0	1	183 12
15	169	0.0	1	161 8
16	194	0.0	1	181 13
17	178	0.0	1	166 12
18	185	0.0	1	172 13
19	195	0.0	1	187 8
20	203	0.0	1	194 9
21	191	0.0	1	172 19
22	173	0.0	1	161 12
23	183	0.0	1	172 11
24	159	0.0	1	148 11
25	152	0.0	1	141 11
26	142	0.0	1	132 10
27	163	0.0	1	152 11
28	177	0.0	1	165 12
29	154	0.0	1	144 10
30	156	0.0	1	147 9
31	147	0.0	1	137 10
32	144	0.0	1	125 19
33	135	0.0	1	129 6
34	144	0.0	1	130 14
35	131	0.0	1	120 11
36	101	0.0	1	96 5
37	127	0.0	1	120 7
38	129	0.0	1	120 9
39	101	0.0	1	92 9
40	124	0.0	1	117 7
41	117	0.0	1	111 6
42	96	0.0	1	87 9
43	115	0.0	1	109 6
44	104	0.0	1	95 9
45	150	0.0	1	139 11
46	39	0.0	1	38 1
47	44	0.0	1	39 5
48	97	0.0	1	88 9
49	74	0.0	1	68 6
50	50	0.0	1	48 2
51	93	0.0	1	91 2
52	86	0.0	1	80 6
53	96	0.0	1	89 7
54	62	0.0	1	56 6
55	85	0.0	1	80 5
56	69	0.0	1	65 4
57	72	0.0	1	68 4
58	75	0.0	1	70 5
59	57	0.0	1	53 4
60	50	0.0	1	46 4
61	30	0.0	1	28 2
62	92	0.0	1	87 5
63	45	0.0	1	42 3
64	39	0.0	1	36 3
65	21	0.0	1	20 1
66	31	0.0	1	28 3
67	13	0.0	1	12 1
68	19	0.0	1	18 1
69	16	0.0	1	16
70	15	0.0	1	14 1
71	2	0.0	1	2
72	3	0.0	1	3
73	5	0.0	1	5
74	3	0.0	1	3
75	1	0.0	1	1
83	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: MA-MGH-00254/host_removal/MA-MGH-00254_R1.fastq.gz
=============================================
72880 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00254/adapter_trimmed/MA-MGH-00254_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00254/host_removal/MA-MGH-00254_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to MA-MGH-00254_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00254/host_removal/MA-MGH-00254_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00254/host_removal/MA-MGH-00254_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 1.030 s (14.132 µs/read; 4.25 M reads/minute).

=== Summary ===

Total reads processed:                  72,880
Reads with adapters:                    29,208 (40.1%)
Reads written (passing filters):        72,880 (100.0%)

Total basepairs processed:     7,360,880 bp
Quality-trimmed:                  48,294 bp (0.7%)
Total written (filtered):      7,052,445 bp (95.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 29208 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 20.1%
  C: 28.7%
  G: 29.1%
  T: 22.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	15220	18220.0	0	15220
2	3858	4555.0	0	3858
3	1259	1138.8	0	1259
4	476	284.7	0	476
5	283	71.2	0	283
6	250	17.8	0	250
7	239	4.4	0	239
8	241	1.1	0	241
9	209	0.3	0	209
10	229	0.1	1	226 3
11	202	0.0	1	199 3
12	234	0.0	1	233 1
13	203	0.0	1	203
14	202	0.0	1	200 2
15	175	0.0	1	172 3
16	176	0.0	1	174 2
17	193	0.0	1	191 2
18	189	0.0	1	188 1
19	209	0.0	1	208 1
20	202	0.0	1	202
21	187	0.0	1	184 3
22	173	0.0	1	172 1
23	183	0.0	1	182 1
24	174	0.0	1	174
25	155	0.0	1	154 1
26	146	0.0	1	145 1
27	161	0.0	1	161
28	181	0.0	1	178 3
29	150	0.0	1	149 1
30	158	0.0	1	157 1
31	150	0.0	1	150
32	142	0.0	1	142
33	142	0.0	1	141 1
34	142	0.0	1	142
35	120	0.0	1	118 2
36	106	0.0	1	106
37	144	0.0	1	143 1
38	107	0.0	1	105 2
39	126	0.0	1	125 1
40	217	0.0	1	213 4
41	43	0.0	1	42 1
42	188	0.0	1	187 1
43	40	0.0	1	40
44	246	0.0	1	246
45	116	0.0	1	115 1
46	40	0.0	1	40
47	119	0.0	1	119
48	38	0.0	1	38
49	41	0.0	1	41
50	44	0.0	1	44
51	55	0.0	1	54 1
52	32	0.0	1	32
53	79	0.0	1	78 1
54	89	0.0	1	88 1
55	27	0.0	1	27
56	66	0.0	1	65 1
57	133	0.0	1	132 1
58	57	0.0	1	57
59	44	0.0	1	43 1
60	92	0.0	1	91 1
61	48	0.0	1	48
62	40	0.0	1	40
63	71	0.0	1	71
64	49	0.0	1	49
65	26	0.0	1	26
66	19	0.0	1	19
67	14	0.0	1	14
68	8	0.0	1	8
69	14	0.0	1	14
70	6	0.0	1	6
71	7	0.0	1	7
73	1	0.0	1	1
85	2	0.0	1	0 2
95	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: MA-MGH-00254/host_removal/MA-MGH-00254_R2.fastq.gz
=============================================
72880 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files MA-MGH-00254_R1_trimmed.fq.gz and MA-MGH-00254_R2_trimmed.fq.gz
file_1: MA-MGH-00254_R1_trimmed.fq.gz, file_2: MA-MGH-00254_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: MA-MGH-00254_R1_trimmed.fq.gz and MA-MGH-00254_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to MA-MGH-00254_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to MA-MGH-00254_R2_val_2.fq.gz

Total number of sequences analysed: 72880

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 196 (0.27%)


  >>> Now running FastQC on the validated data MA-MGH-00254_R1_val_1.fq.gz<<<

Started analysis of MA-MGH-00254_R1_val_1.fq.gz
Approx 5% complete for MA-MGH-00254_R1_val_1.fq.gz
Approx 10% complete for MA-MGH-00254_R1_val_1.fq.gz
Approx 15% complete for MA-MGH-00254_R1_val_1.fq.gz
Approx 20% complete for MA-MGH-00254_R1_val_1.fq.gz
Approx 25% complete for MA-MGH-00254_R1_val_1.fq.gz
Approx 30% complete for MA-MGH-00254_R1_val_1.fq.gz
Approx 35% complete for MA-MGH-00254_R1_val_1.fq.gz
Approx 40% complete for MA-MGH-00254_R1_val_1.fq.gz
Approx 45% complete for MA-MGH-00254_R1_val_1.fq.gz
Approx 50% complete for MA-MGH-00254_R1_val_1.fq.gz
Approx 55% complete for MA-MGH-00254_R1_val_1.fq.gz
Approx 60% complete for MA-MGH-00254_R1_val_1.fq.gz
Approx 65% complete for MA-MGH-00254_R1_val_1.fq.gz
Approx 70% complete for MA-MGH-00254_R1_val_1.fq.gz
Approx 75% complete for MA-MGH-00254_R1_val_1.fq.gz
Approx 80% complete for MA-MGH-00254_R1_val_1.fq.gz
Approx 85% complete for MA-MGH-00254_R1_val_1.fq.gz
Approx 90% complete for MA-MGH-00254_R1_val_1.fq.gz
Approx 95% complete for MA-MGH-00254_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data MA-MGH-00254_R2_val_2.fq.gz<<<

Started analysis of MA-MGH-00254_R2_val_2.fq.gz
Approx 5% complete for MA-MGH-00254_R2_val_2.fq.gz
Approx 10% complete for MA-MGH-00254_R2_val_2.fq.gz
Approx 15% complete for MA-MGH-00254_R2_val_2.fq.gz
Approx 20% complete for MA-MGH-00254_R2_val_2.fq.gz
Approx 25% complete for MA-MGH-00254_R2_val_2.fq.gz
Approx 30% complete for MA-MGH-00254_R2_val_2.fq.gz
Approx 35% complete for MA-MGH-00254_R2_val_2.fq.gz
Approx 40% complete for MA-MGH-00254_R2_val_2.fq.gz
Approx 45% complete for MA-MGH-00254_R2_val_2.fq.gz
Approx 50% complete for MA-MGH-00254_R2_val_2.fq.gz
Approx 55% complete for MA-MGH-00254_R2_val_2.fq.gz
Approx 60% complete for MA-MGH-00254_R2_val_2.fq.gz
Approx 65% complete for MA-MGH-00254_R2_val_2.fq.gz
Approx 70% complete for MA-MGH-00254_R2_val_2.fq.gz
Approx 75% complete for MA-MGH-00254_R2_val_2.fq.gz
Approx 80% complete for MA-MGH-00254_R2_val_2.fq.gz
Approx 85% complete for MA-MGH-00254_R2_val_2.fq.gz
Approx 90% complete for MA-MGH-00254_R2_val_2.fq.gz
Approx 95% complete for MA-MGH-00254_R2_val_2.fq.gz
Deleting both intermediate output files MA-MGH-00254_R1_trimmed.fq.gz and MA-MGH-00254_R2_trimmed.fq.gz

====================================================================================================

