Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00267/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> MA-MGH-00267/host_removal/MA-MGH-00267_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	19303	CTGTCTCTTATA	198095	9.74
Illumina	0	AGATCGGAAGAGC	198095	0.00
smallRNA	0	TGGAATTCTCGG	198095	0.00
Using Nextera adapter for trimming (count: 19303). Second best hit was Illumina (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00267/adapter_trimmed/MA-MGH-00267_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00267/host_removal/MA-MGH-00267_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to MA-MGH-00267_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00267/host_removal/MA-MGH-00267_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00267/host_removal/MA-MGH-00267_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 2.742 s (13.842 µs/read; 4.33 M reads/minute).

=== Summary ===

Total reads processed:                 198,095
Reads with adapters:                    73,934 (37.3%)
Reads written (passing filters):       198,095 (100.0%)

Total basepairs processed:    20,007,595 bp
Quality-trimmed:                 222,506 bp (1.1%)
Total written (filtered):     18,965,480 bp (94.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 73934 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 22.7%
  C: 26.7%
  G: 26.5%
  T: 24.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	35141	49523.8	0	35141
2	10633	12380.9	0	10633
3	3114	3095.2	0	3114
4	1371	773.8	0	1371
5	639	193.5	0	639
6	509	48.4	0	509
7	497	12.1	0	497
8	491	3.0	0	491
9	496	0.8	0	493 3
10	529	0.2	1	500 29
11	491	0.0	1	483 8
12	499	0.0	1	471 28
13	469	0.0	1	457 12
14	526	0.0	1	489 37
15	480	0.0	1	466 14
16	530	0.0	1	511 19
17	428	0.0	1	415 13
18	475	0.0	1	462 13
19	442	0.0	1	430 12
20	518	0.0	1	504 14
21	484	0.0	1	473 11
22	433	0.0	1	428 5
23	479	0.0	1	464 15
24	402	0.0	1	392 10
25	425	0.0	1	414 11
26	423	0.0	1	417 6
27	421	0.0	1	415 6
28	403	0.0	1	398 5
29	456	0.0	1	436 20
30	426	0.0	1	421 5
31	462	0.0	1	441 21
32	383	0.0	1	365 18
33	406	0.0	1	395 11
34	394	0.0	1	385 9
35	372	0.0	1	364 8
36	303	0.0	1	297 6
37	337	0.0	1	332 5
38	369	0.0	1	359 10
39	349	0.0	1	342 7
40	339	0.0	1	332 7
41	332	0.0	1	323 9
42	315	0.0	1	312 3
43	362	0.0	1	355 7
44	328	0.0	1	301 27
45	556	0.0	1	536 20
46	87	0.0	1	75 12
47	252	0.0	1	251 1
48	354	0.0	1	346 8
49	323	0.0	1	318 5
50	183	0.0	1	176 7
51	433	0.0	1	423 10
52	229	0.0	1	226 3
53	240	0.0	1	234 6
54	307	0.0	1	302 5
55	520	0.0	1	505 15
56	223	0.0	1	212 11
57	236	0.0	1	231 5
58	166	0.0	1	165 1
59	385	0.0	1	379 6
60	76	0.0	1	66 10
61	63	0.0	1	62 1
62	344	0.0	1	321 23
63	186	0.0	1	184 2
64	102	0.0	1	101 1
65	144	0.0	1	143 1
66	156	0.0	1	155 1
67	57	0.0	1	52 5
68	113	0.0	1	113
69	111	0.0	1	110 1
70	145	0.0	1	141 4
71	6	0.0	1	4 2
72	10	0.0	1	7 3
73	17	0.0	1	17
74	21	0.0	1	20 1
75	8	0.0	1	2 6
76	1	0.0	1	1
77	41	0.0	1	1 40
79	1	0.0	1	0 1
80	3	0.0	1	2 1
81	2	0.0	1	1 1
82	28	0.0	1	2 26
83	37	0.0	1	0 37
84	15	0.0	1	2 13
85	23	0.0	1	0 23
87	1	0.0	1	0 1
89	5	0.0	1	1 4
90	4	0.0	1	0 4
91	1	0.0	1	0 1
93	1	0.0	1	0 1
94	1	0.0	1	1
95	27	0.0	1	0 27
98	1	0.0	1	0 1
99	5	0.0	1	0 5
100	3	0.0	1	0 3

RUN STATISTICS FOR INPUT FILE: MA-MGH-00267/host_removal/MA-MGH-00267_R1.fastq.gz
=============================================
198095 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00267/adapter_trimmed/MA-MGH-00267_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00267/host_removal/MA-MGH-00267_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to MA-MGH-00267_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00267/host_removal/MA-MGH-00267_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00267/host_removal/MA-MGH-00267_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 2.864 s (14.456 µs/read; 4.15 M reads/minute).

=== Summary ===

Total reads processed:                 198,095
Reads with adapters:                    74,646 (37.7%)
Reads written (passing filters):       198,095 (100.0%)

Total basepairs processed:    20,007,595 bp
Quality-trimmed:                 170,709 bp (0.9%)
Total written (filtered):     19,024,611 bp (95.1%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 74646 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 22.4%
  C: 26.9%
  G: 26.7%
  T: 24.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	35840	49523.8	0	35840
2	10722	12380.9	0	10722
3	3142	3095.2	0	3142
4	1324	773.8	0	1324
5	674	193.5	0	674
6	495	48.4	0	495
7	486	12.1	0	486
8	497	3.0	0	497
9	498	0.8	0	495 3
10	531	0.2	1	497 34
11	486	0.0	1	478 8
12	495	0.0	1	464 31
13	474	0.0	1	459 15
14	507	0.0	1	486 21
15	490	0.0	1	476 14
16	518	0.0	1	495 23
17	449	0.0	1	430 19
18	449	0.0	1	434 15
19	475	0.0	1	454 21
20	488	0.0	1	474 14
21	476	0.0	1	467 9
22	454	0.0	1	441 13
23	456	0.0	1	450 6
24	420	0.0	1	405 15
25	427	0.0	1	419 8
26	412	0.0	1	404 8
27	426	0.0	1	416 10
28	408	0.0	1	398 10
29	420	0.0	1	407 13
30	446	0.0	1	436 10
31	426	0.0	1	404 22
32	419	0.0	1	394 25
33	411	0.0	1	400 11
34	364	0.0	1	359 5
35	376	0.0	1	365 11
36	327	0.0	1	315 12
37	342	0.0	1	336 6
38	358	0.0	1	348 10
39	365	0.0	1	357 8
40	316	0.0	1	307 9
41	347	0.0	1	341 6
42	357	0.0	1	352 5
43	314	0.0	1	308 6
44	676	0.0	1	657 19
45	456	0.0	1	428 28
46	333	0.0	1	318 15
47	446	0.0	1	441 5
48	89	0.0	1	82 7
49	349	0.0	1	342 7
50	80	0.0	1	73 7
51	147	0.0	1	141 6
52	117	0.0	1	113 4
53	261	0.0	1	255 6
54	391	0.0	1	379 12
55	131	0.0	1	113 18
56	258	0.0	1	245 13
57	764	0.0	1	748 16
58	157	0.0	1	150 7
59	87	0.0	1	86 1
60	439	0.0	1	430 9
61	84	0.0	1	80 4
62	91	0.0	1	75 16
63	376	0.0	1	372 4
64	254	0.0	1	253 1
65	42	0.0	1	40 2
66	70	0.0	1	68 2
67	28	0.0	1	24 4
68	31	0.0	1	29 2
69	35	0.0	1	34 1
70	61	0.0	1	59 2
71	34	0.0	1	34
72	22	0.0	1	15 7
73	16	0.0	1	16
74	5	0.0	1	5
75	3	0.0	1	0 3
76	2	0.0	1	0 2
77	37	0.0	1	1 36
79	2	0.0	1	0 2
80	4	0.0	1	2 2
81	1	0.0	1	0 1
82	19	0.0	1	0 19
83	36	0.0	1	0 36
84	18	0.0	1	2 16
85	26	0.0	1	0 26
86	1	0.0	1	0 1
87	3	0.0	1	0 3
90	3	0.0	1	0 3
92	6	0.0	1	1 5
93	7	0.0	1	0 7
94	1	0.0	1	1
95	27	0.0	1	0 27
97	2	0.0	1	0 2
98	2	0.0	1	1 1
99	4	0.0	1	0 4
100	4	0.0	1	0 4
101	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: MA-MGH-00267/host_removal/MA-MGH-00267_R2.fastq.gz
=============================================
198095 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files MA-MGH-00267_R1_trimmed.fq.gz and MA-MGH-00267_R2_trimmed.fq.gz
file_1: MA-MGH-00267_R1_trimmed.fq.gz, file_2: MA-MGH-00267_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: MA-MGH-00267_R1_trimmed.fq.gz and MA-MGH-00267_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to MA-MGH-00267_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to MA-MGH-00267_R2_val_2.fq.gz

Total number of sequences analysed: 198095

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 795 (0.40%)


  >>> Now running FastQC on the validated data MA-MGH-00267_R1_val_1.fq.gz<<<

Started analysis of MA-MGH-00267_R1_val_1.fq.gz
Approx 5% complete for MA-MGH-00267_R1_val_1.fq.gz
Approx 10% complete for MA-MGH-00267_R1_val_1.fq.gz
Approx 15% complete for MA-MGH-00267_R1_val_1.fq.gz
Approx 20% complete for MA-MGH-00267_R1_val_1.fq.gz
Approx 25% complete for MA-MGH-00267_R1_val_1.fq.gz
Approx 30% complete for MA-MGH-00267_R1_val_1.fq.gz
Approx 35% complete for MA-MGH-00267_R1_val_1.fq.gz
Approx 40% complete for MA-MGH-00267_R1_val_1.fq.gz
Approx 45% complete for MA-MGH-00267_R1_val_1.fq.gz
Approx 50% complete for MA-MGH-00267_R1_val_1.fq.gz
Approx 55% complete for MA-MGH-00267_R1_val_1.fq.gz
Approx 60% complete for MA-MGH-00267_R1_val_1.fq.gz
Approx 65% complete for MA-MGH-00267_R1_val_1.fq.gz
Approx 70% complete for MA-MGH-00267_R1_val_1.fq.gz
Approx 75% complete for MA-MGH-00267_R1_val_1.fq.gz
Approx 80% complete for MA-MGH-00267_R1_val_1.fq.gz
Approx 85% complete for MA-MGH-00267_R1_val_1.fq.gz
Approx 90% complete for MA-MGH-00267_R1_val_1.fq.gz
Approx 95% complete for MA-MGH-00267_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data MA-MGH-00267_R2_val_2.fq.gz<<<

Started analysis of MA-MGH-00267_R2_val_2.fq.gz
Approx 5% complete for MA-MGH-00267_R2_val_2.fq.gz
Approx 10% complete for MA-MGH-00267_R2_val_2.fq.gz
Approx 15% complete for MA-MGH-00267_R2_val_2.fq.gz
Approx 20% complete for MA-MGH-00267_R2_val_2.fq.gz
Approx 25% complete for MA-MGH-00267_R2_val_2.fq.gz
Approx 30% complete for MA-MGH-00267_R2_val_2.fq.gz
Approx 35% complete for MA-MGH-00267_R2_val_2.fq.gz
Approx 40% complete for MA-MGH-00267_R2_val_2.fq.gz
Approx 45% complete for MA-MGH-00267_R2_val_2.fq.gz
Approx 50% complete for MA-MGH-00267_R2_val_2.fq.gz
Approx 55% complete for MA-MGH-00267_R2_val_2.fq.gz
Approx 60% complete for MA-MGH-00267_R2_val_2.fq.gz
Approx 65% complete for MA-MGH-00267_R2_val_2.fq.gz
Approx 70% complete for MA-MGH-00267_R2_val_2.fq.gz
Approx 75% complete for MA-MGH-00267_R2_val_2.fq.gz
Approx 80% complete for MA-MGH-00267_R2_val_2.fq.gz
Approx 85% complete for MA-MGH-00267_R2_val_2.fq.gz
Approx 90% complete for MA-MGH-00267_R2_val_2.fq.gz
Approx 95% complete for MA-MGH-00267_R2_val_2.fq.gz
Deleting both intermediate output files MA-MGH-00267_R1_trimmed.fq.gz and MA-MGH-00267_R2_trimmed.fq.gz

====================================================================================================

