Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00251/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> MA-MGH-00251/host_removal/MA-MGH-00251_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	31715	CTGTCTCTTATA	734571	4.32
smallRNA	0	TGGAATTCTCGG	734571	0.00
Illumina	0	AGATCGGAAGAGC	734571	0.00
Using Nextera adapter for trimming (count: 31715). Second best hit was smallRNA (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00251/adapter_trimmed/MA-MGH-00251_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00251/host_removal/MA-MGH-00251_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to MA-MGH-00251_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00251/host_removal/MA-MGH-00251_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00251/host_removal/MA-MGH-00251_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 10.105 s (13.756 µs/read; 4.36 M reads/minute).

=== Summary ===

Total reads processed:                 734,571
Reads with adapters:                   250,585 (34.1%)
Reads written (passing filters):       734,571 (100.0%)

Total basepairs processed:    74,191,671 bp
Quality-trimmed:               1,384,240 bp (1.9%)
Total written (filtered):     71,195,585 bp (96.0%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 250585 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 20.4%
  C: 27.1%
  G: 28.9%
  T: 23.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	153403	183642.8	0	153403
2	38663	45910.7	0	38663
3	12775	11477.7	0	12775
4	3426	2869.4	0	3426
5	1549	717.4	0	1549
6	835	179.3	0	835
7	982	44.8	0	982
8	918	11.2	0	918
9	827	2.8	0	825 2
10	884	0.7	1	776 108
11	831	0.2	1	735 96
12	894	0.0	1	782 112
13	871	0.0	1	777 94
14	822	0.0	1	724 98
15	861	0.0	1	761 100
16	828	0.0	1	740 88
17	793	0.0	1	698 95
18	812	0.0	1	714 98
19	722	0.0	1	633 89
20	843	0.0	1	752 91
21	787	0.0	1	709 78
22	805	0.0	1	691 114
23	710	0.0	1	641 69
24	695	0.0	1	620 75
25	724	0.0	1	648 76
26	642	0.0	1	568 74
27	725	0.0	1	638 87
28	670	0.0	1	589 81
29	758	0.0	1	673 85
30	686	0.0	1	598 88
31	722	0.0	1	637 85
32	552	0.0	1	480 72
33	632	0.0	1	559 73
34	717	0.0	1	635 82
35	612	0.0	1	552 60
36	557	0.0	1	494 63
37	626	0.0	1	550 76
38	441	0.0	1	402 39
39	675	0.0	1	599 76
40	552	0.0	1	492 60
41	636	0.0	1	547 89
42	682	0.0	1	598 84
43	712	0.0	1	620 92
44	780	0.0	1	697 83
45	1133	0.0	1	1029 104
46	316	0.0	1	268 48
47	318	0.0	1	282 36
48	1665	0.0	1	1511 154
49	734	0.0	1	655 79
50	319	0.0	1	285 34
51	1112	0.0	1	1020 92
52	819	0.0	1	735 84
53	230	0.0	1	207 23
54	567	0.0	1	528 39
55	1032	0.0	1	963 69
56	468	0.0	1	429 39
57	198	0.0	1	183 15
58	276	0.0	1	249 27
59	514	0.0	1	477 37
60	67	0.0	1	56 11
61	163	0.0	1	139 24
62	677	0.0	1	618 59
63	129	0.0	1	118 11
64	153	0.0	1	143 10
65	186	0.0	1	175 11
66	306	0.0	1	278 28
67	72	0.0	1	68 4
68	130	0.0	1	121 9
69	116	0.0	1	107 9
70	112	0.0	1	106 6
71	22	0.0	1	21 1
72	28	0.0	1	25 3
73	38	0.0	1	31 7
74	35	0.0	1	32 3
75	5	0.0	1	3 2
76	2	0.0	1	2
77	1	0.0	1	0 1
78	1	0.0	1	1
83	1	0.0	1	0 1
87	1	0.0	1	0 1
90	1	0.0	1	0 1
92	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: MA-MGH-00251/host_removal/MA-MGH-00251_R1.fastq.gz
=============================================
734571 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00251/adapter_trimmed/MA-MGH-00251_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00251/host_removal/MA-MGH-00251_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to MA-MGH-00251_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00251/host_removal/MA-MGH-00251_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00251/host_removal/MA-MGH-00251_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 8.520 s (11.599 µs/read; 5.17 M reads/minute).

=== Summary ===

Total reads processed:                 734,571
Reads with adapters:                   255,936 (34.8%)
Reads written (passing filters):       734,571 (100.0%)

Total basepairs processed:    74,191,671 bp
Quality-trimmed:                 987,838 bp (1.3%)
Total written (filtered):     71,528,660 bp (96.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 255936 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 20.6%
  C: 27.8%
  G: 28.7%
  T: 22.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	156053	183642.8	0	156053
2	40102	45910.7	0	40102
3	12273	11477.7	0	12273
4	3567	2869.4	0	3567
5	1694	717.4	0	1694
6	977	179.3	0	977
7	963	44.8	0	963
8	998	11.2	0	998
9	939	2.8	0	936 3
10	972	0.7	1	941 31
11	900	0.2	1	890 10
12	920	0.0	1	912 8
13	885	0.0	1	874 11
14	884	0.0	1	875 9
15	851	0.0	1	842 9
16	866	0.0	1	859 7
17	807	0.0	1	799 8
18	835	0.0	1	826 9
19	817	0.0	1	802 15
20	884	0.0	1	877 7
21	771	0.0	1	759 12
22	815	0.0	1	807 8
23	766	0.0	1	757 9
24	755	0.0	1	746 9
25	749	0.0	1	748 1
26	647	0.0	1	643 4
27	746	0.0	1	736 10
28	705	0.0	1	701 4
29	719	0.0	1	711 8
30	739	0.0	1	734 5
31	693	0.0	1	687 6
32	643	0.0	1	638 5
33	644	0.0	1	638 6
34	712	0.0	1	708 4
35	620	0.0	1	610 10
36	593	0.0	1	589 4
37	542	0.0	1	538 4
38	547	0.0	1	545 2
39	654	0.0	1	650 4
40	527	0.0	1	523 4
41	570	0.0	1	566 4
42	647	0.0	1	642 5
43	573	0.0	1	568 5
44	1601	0.0	1	1592 9
45	873	0.0	1	861 12
46	287	0.0	1	284 3
47	1023	0.0	1	1019 4
48	352	0.0	1	348 4
49	362	0.0	1	361 1
50	321	0.0	1	319 2
51	303	0.0	1	300 3
52	270	0.0	1	269 1
53	543	0.0	1	537 6
54	798	0.0	1	798
55	260	0.0	1	256 4
56	558	0.0	1	553 5
57	1145	0.0	1	1138 7
58	443	0.0	1	441 2
59	406	0.0	1	402 4
60	792	0.0	1	788 4
61	442	0.0	1	440 2
62	292	0.0	1	286 6
63	757	0.0	1	755 2
64	563	0.0	1	559 4
65	267	0.0	1	263 4
66	237	0.0	1	236 1
67	160	0.0	1	159 1
68	75	0.0	1	73 2
69	73	0.0	1	73
70	83	0.0	1	81 2
71	43	0.0	1	43
72	17	0.0	1	17
73	14	0.0	1	14
74	7	0.0	1	7
75	1	0.0	1	1
83	3	0.0	1	1 2
87	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: MA-MGH-00251/host_removal/MA-MGH-00251_R2.fastq.gz
=============================================
734571 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files MA-MGH-00251_R1_trimmed.fq.gz and MA-MGH-00251_R2_trimmed.fq.gz
file_1: MA-MGH-00251_R1_trimmed.fq.gz, file_2: MA-MGH-00251_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: MA-MGH-00251_R1_trimmed.fq.gz and MA-MGH-00251_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to MA-MGH-00251_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to MA-MGH-00251_R2_val_2.fq.gz

Total number of sequences analysed: 734571

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 4083 (0.56%)


  >>> Now running FastQC on the validated data MA-MGH-00251_R1_val_1.fq.gz<<<

Started analysis of MA-MGH-00251_R1_val_1.fq.gz
Approx 5% complete for MA-MGH-00251_R1_val_1.fq.gz
Approx 10% complete for MA-MGH-00251_R1_val_1.fq.gz
Approx 15% complete for MA-MGH-00251_R1_val_1.fq.gz
Approx 20% complete for MA-MGH-00251_R1_val_1.fq.gz
Approx 25% complete for MA-MGH-00251_R1_val_1.fq.gz
Approx 30% complete for MA-MGH-00251_R1_val_1.fq.gz
Approx 35% complete for MA-MGH-00251_R1_val_1.fq.gz
Approx 40% complete for MA-MGH-00251_R1_val_1.fq.gz
Approx 45% complete for MA-MGH-00251_R1_val_1.fq.gz
Approx 50% complete for MA-MGH-00251_R1_val_1.fq.gz
Approx 55% complete for MA-MGH-00251_R1_val_1.fq.gz
Approx 60% complete for MA-MGH-00251_R1_val_1.fq.gz
Approx 65% complete for MA-MGH-00251_R1_val_1.fq.gz
Approx 70% complete for MA-MGH-00251_R1_val_1.fq.gz
Approx 75% complete for MA-MGH-00251_R1_val_1.fq.gz
Approx 80% complete for MA-MGH-00251_R1_val_1.fq.gz
Approx 85% complete for MA-MGH-00251_R1_val_1.fq.gz
Approx 90% complete for MA-MGH-00251_R1_val_1.fq.gz
Approx 95% complete for MA-MGH-00251_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data MA-MGH-00251_R2_val_2.fq.gz<<<

Started analysis of MA-MGH-00251_R2_val_2.fq.gz
Approx 5% complete for MA-MGH-00251_R2_val_2.fq.gz
Approx 10% complete for MA-MGH-00251_R2_val_2.fq.gz
Approx 15% complete for MA-MGH-00251_R2_val_2.fq.gz
Approx 20% complete for MA-MGH-00251_R2_val_2.fq.gz
Approx 25% complete for MA-MGH-00251_R2_val_2.fq.gz
Approx 30% complete for MA-MGH-00251_R2_val_2.fq.gz
Approx 35% complete for MA-MGH-00251_R2_val_2.fq.gz
Approx 40% complete for MA-MGH-00251_R2_val_2.fq.gz
Approx 45% complete for MA-MGH-00251_R2_val_2.fq.gz
Approx 50% complete for MA-MGH-00251_R2_val_2.fq.gz
Approx 55% complete for MA-MGH-00251_R2_val_2.fq.gz
Approx 60% complete for MA-MGH-00251_R2_val_2.fq.gz
Approx 65% complete for MA-MGH-00251_R2_val_2.fq.gz
Approx 70% complete for MA-MGH-00251_R2_val_2.fq.gz
Approx 75% complete for MA-MGH-00251_R2_val_2.fq.gz
Approx 80% complete for MA-MGH-00251_R2_val_2.fq.gz
Approx 85% complete for MA-MGH-00251_R2_val_2.fq.gz
Approx 90% complete for MA-MGH-00251_R2_val_2.fq.gz
Approx 95% complete for MA-MGH-00251_R2_val_2.fq.gz
Deleting both intermediate output files MA-MGH-00251_R1_trimmed.fq.gz and MA-MGH-00251_R2_trimmed.fq.gz

====================================================================================================

