Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00270/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> MA-MGH-00270/host_removal/MA-MGH-00270_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	3399	CTGTCTCTTATA	30259	11.23
Illumina	0	AGATCGGAAGAGC	30259	0.00
smallRNA	0	TGGAATTCTCGG	30259	0.00
Using Nextera adapter for trimming (count: 3399). Second best hit was Illumina (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00270/adapter_trimmed/MA-MGH-00270_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00270/host_removal/MA-MGH-00270_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to MA-MGH-00270_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00270/host_removal/MA-MGH-00270_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00270/host_removal/MA-MGH-00270_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 0.565 s (18.688 µs/read; 3.21 M reads/minute).

=== Summary ===

Total reads processed:                  30,259
Reads with adapters:                    12,239 (40.4%)
Reads written (passing filters):        30,259 (100.0%)

Total basepairs processed:     3,056,159 bp
Quality-trimmed:                  20,511 bp (0.7%)
Total written (filtered):      2,896,596 bp (94.8%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 12239 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 21.7%
  C: 27.6%
  G: 25.2%
  T: 25.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	5787	7564.8	0	5787
2	1642	1891.2	0	1642
3	463	472.8	0	463
4	204	118.2	0	204
5	139	29.5	0	139
6	80	7.4	0	80
7	92	1.8	0	92
8	84	0.5	0	84
9	89	0.1	0	89
10	95	0.0	1	93 2
11	103	0.0	1	101 2
12	108	0.0	1	107 1
13	98	0.0	1	96 2
14	81	0.0	1	79 2
15	80	0.0	1	77 3
16	81	0.0	1	80 1
17	91	0.0	1	90 1
18	69	0.0	1	68 1
19	106	0.0	1	104 2
20	74	0.0	1	74
21	86	0.0	1	85 1
22	62	0.0	1	61 1
23	99	0.0	1	98 1
24	74	0.0	1	74
25	83	0.0	1	81 2
26	72	0.0	1	69 3
27	69	0.0	1	69
28	73	0.0	1	72 1
29	65	0.0	1	64 1
30	64	0.0	1	63 1
31	78	0.0	1	74 4
32	63	0.0	1	62 1
33	60	0.0	1	59 1
34	78	0.0	1	76 2
35	59	0.0	1	57 2
36	60	0.0	1	57 3
37	56	0.0	1	54 2
38	49	0.0	1	49
39	65	0.0	1	65
40	56	0.0	1	55 1
41	66	0.0	1	64 2
42	70	0.0	1	70
43	53	0.0	1	51 2
44	59	0.0	1	58 1
45	101	0.0	1	99 2
46	15	0.0	1	15
47	56	0.0	1	55 1
48	43	0.0	1	43
49	48	0.0	1	47 1
50	44	0.0	1	44
51	58	0.0	1	57 1
52	45	0.0	1	45
53	52	0.0	1	49 3
54	62	0.0	1	62
55	51	0.0	1	51
56	32	0.0	1	32
57	61	0.0	1	61
58	39	0.0	1	39
59	45	0.0	1	44 1
60	31	0.0	1	29 2
61	24	0.0	1	24
62	46	0.0	1	45 1
63	26	0.0	1	25 1
64	27	0.0	1	26 1
65	37	0.0	1	37
66	16	0.0	1	16
67	23	0.0	1	23
68	27	0.0	1	27
69	17	0.0	1	16 1
70	14	0.0	1	14
72	1	0.0	1	1
73	5	0.0	1	5
74	2	0.0	1	2
75	1	0.0	1	1
81	1	0.0	1	1
83	1	0.0	1	0 1
89	1	0.0	1	0 1
94	1	0.0	1	0 1
99	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: MA-MGH-00270/host_removal/MA-MGH-00270_R1.fastq.gz
=============================================
30259 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00270/adapter_trimmed/MA-MGH-00270_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00270/host_removal/MA-MGH-00270_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to MA-MGH-00270_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00270/host_removal/MA-MGH-00270_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00270/host_removal/MA-MGH-00270_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 0.571 s (18.862 µs/read; 3.18 M reads/minute).

=== Summary ===

Total reads processed:                  30,259
Reads with adapters:                    12,211 (40.4%)
Reads written (passing filters):        30,259 (100.0%)

Total basepairs processed:     3,056,159 bp
Quality-trimmed:                  19,669 bp (0.6%)
Total written (filtered):      2,900,403 bp (94.9%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 12211 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 22.2%
  C: 27.5%
  G: 24.8%
  T: 25.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	5697	7564.8	0	5697
2	1721	1891.2	0	1721
3	509	472.8	0	509
4	186	118.2	0	186
5	131	29.5	0	131
6	78	7.4	0	78
7	96	1.8	0	96
8	80	0.5	0	80
9	88	0.1	0	87 1
10	91	0.0	1	88 3
11	104	0.0	1	102 2
12	109	0.0	1	107 2
13	95	0.0	1	89 6
14	77	0.0	1	77
15	80	0.0	1	79 1
16	83	0.0	1	76 7
17	89	0.0	1	88 1
18	68	0.0	1	67 1
19	100	0.0	1	99 1
20	73	0.0	1	73
21	86	0.0	1	83 3
22	64	0.0	1	62 2
23	97	0.0	1	94 3
24	76	0.0	1	74 2
25	80	0.0	1	78 2
26	69	0.0	1	69
27	75	0.0	1	72 3
28	73	0.0	1	73
29	60	0.0	1	60
30	69	0.0	1	67 2
31	75	0.0	1	74 1
32	66	0.0	1	65 1
33	65	0.0	1	63 2
34	75	0.0	1	74 1
35	56	0.0	1	54 2
36	60	0.0	1	60
37	52	0.0	1	48 4
38	52	0.0	1	52
39	61	0.0	1	59 2
40	60	0.0	1	58 2
41	69	0.0	1	65 4
42	118	0.0	1	117 1
43	30	0.0	1	30
44	130	0.0	1	129 1
45	72	0.0	1	71 1
46	34	0.0	1	33 1
47	94	0.0	1	92 2
48	34	0.0	1	34
49	33	0.0	1	32 1
50	33	0.0	1	32 1
51	30	0.0	1	28 2
52	29	0.0	1	28 1
53	52	0.0	1	51 1
54	64	0.0	1	62 2
55	32	0.0	1	32
56	39	0.0	1	39
57	72	0.0	1	71 1
58	37	0.0	1	36 1
59	30	0.0	1	30
60	50	0.0	1	49 1
61	25	0.0	1	25
62	23	0.0	1	23
63	41	0.0	1	41
64	27	0.0	1	27
65	25	0.0	1	25
66	16	0.0	1	16
67	14	0.0	1	14
68	10	0.0	1	10
69	10	0.0	1	10
70	3	0.0	1	3
71	2	0.0	1	2
72	2	0.0	1	2
73	2	0.0	1	2
77	1	0.0	1	0 1
82	1	0.0	1	0 1
95	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: MA-MGH-00270/host_removal/MA-MGH-00270_R2.fastq.gz
=============================================
30259 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files MA-MGH-00270_R1_trimmed.fq.gz and MA-MGH-00270_R2_trimmed.fq.gz
file_1: MA-MGH-00270_R1_trimmed.fq.gz, file_2: MA-MGH-00270_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: MA-MGH-00270_R1_trimmed.fq.gz and MA-MGH-00270_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to MA-MGH-00270_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to MA-MGH-00270_R2_val_2.fq.gz

Total number of sequences analysed: 30259

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 56 (0.19%)


  >>> Now running FastQC on the validated data MA-MGH-00270_R1_val_1.fq.gz<<<

Started analysis of MA-MGH-00270_R1_val_1.fq.gz
Approx 5% complete for MA-MGH-00270_R1_val_1.fq.gz
Approx 10% complete for MA-MGH-00270_R1_val_1.fq.gz
Approx 15% complete for MA-MGH-00270_R1_val_1.fq.gz
Approx 20% complete for MA-MGH-00270_R1_val_1.fq.gz
Approx 25% complete for MA-MGH-00270_R1_val_1.fq.gz
Approx 30% complete for MA-MGH-00270_R1_val_1.fq.gz
Approx 35% complete for MA-MGH-00270_R1_val_1.fq.gz
Approx 40% complete for MA-MGH-00270_R1_val_1.fq.gz
Approx 45% complete for MA-MGH-00270_R1_val_1.fq.gz
Approx 50% complete for MA-MGH-00270_R1_val_1.fq.gz
Approx 55% complete for MA-MGH-00270_R1_val_1.fq.gz
Approx 60% complete for MA-MGH-00270_R1_val_1.fq.gz
Approx 65% complete for MA-MGH-00270_R1_val_1.fq.gz
Approx 70% complete for MA-MGH-00270_R1_val_1.fq.gz
Approx 75% complete for MA-MGH-00270_R1_val_1.fq.gz
Approx 80% complete for MA-MGH-00270_R1_val_1.fq.gz
Approx 85% complete for MA-MGH-00270_R1_val_1.fq.gz
Approx 90% complete for MA-MGH-00270_R1_val_1.fq.gz
Approx 95% complete for MA-MGH-00270_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data MA-MGH-00270_R2_val_2.fq.gz<<<

Started analysis of MA-MGH-00270_R2_val_2.fq.gz
Approx 5% complete for MA-MGH-00270_R2_val_2.fq.gz
Approx 10% complete for MA-MGH-00270_R2_val_2.fq.gz
Approx 15% complete for MA-MGH-00270_R2_val_2.fq.gz
Approx 20% complete for MA-MGH-00270_R2_val_2.fq.gz
Approx 25% complete for MA-MGH-00270_R2_val_2.fq.gz
Approx 30% complete for MA-MGH-00270_R2_val_2.fq.gz
Approx 35% complete for MA-MGH-00270_R2_val_2.fq.gz
Approx 40% complete for MA-MGH-00270_R2_val_2.fq.gz
Approx 45% complete for MA-MGH-00270_R2_val_2.fq.gz
Approx 50% complete for MA-MGH-00270_R2_val_2.fq.gz
Approx 55% complete for MA-MGH-00270_R2_val_2.fq.gz
Approx 60% complete for MA-MGH-00270_R2_val_2.fq.gz
Approx 65% complete for MA-MGH-00270_R2_val_2.fq.gz
Approx 70% complete for MA-MGH-00270_R2_val_2.fq.gz
Approx 75% complete for MA-MGH-00270_R2_val_2.fq.gz
Approx 80% complete for MA-MGH-00270_R2_val_2.fq.gz
Approx 85% complete for MA-MGH-00270_R2_val_2.fq.gz
Approx 90% complete for MA-MGH-00270_R2_val_2.fq.gz
Approx 95% complete for MA-MGH-00270_R2_val_2.fq.gz
Deleting both intermediate output files MA-MGH-00270_R1_trimmed.fq.gz and MA-MGH-00270_R2_trimmed.fq.gz

====================================================================================================

