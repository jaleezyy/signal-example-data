Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00294/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> MA-MGH-00294/host_removal/MA-MGH-00294_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	74302	CTGTCTCTTATA	944055	7.87
smallRNA	0	TGGAATTCTCGG	944055	0.00
Illumina	0	AGATCGGAAGAGC	944055	0.00
Using Nextera adapter for trimming (count: 74302). Second best hit was smallRNA (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00294/adapter_trimmed/MA-MGH-00294_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00294/host_removal/MA-MGH-00294_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to MA-MGH-00294_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00294/host_removal/MA-MGH-00294_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00294/host_removal/MA-MGH-00294_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 14.239 s (15.082 µs/read; 3.98 M reads/minute).

=== Summary ===

Total reads processed:                 944,055
Reads with adapters:                   328,409 (34.8%)
Reads written (passing filters):       944,055 (100.0%)

Total basepairs processed:    95,349,555 bp
Quality-trimmed:               1,275,230 bp (1.3%)
Total written (filtered):     90,680,586 bp (95.1%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 328409 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 25.0%
  C: 24.8%
  G: 25.0%
  T: 25.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	166321	236013.8	0	166321
2	51109	59003.4	0	51109
3	14919	14750.9	0	14919
4	5909	3687.7	0	5909
5	2502	921.9	0	2502
6	1682	230.5	0	1682
7	1660	57.6	0	1660
8	1551	14.4	0	1551
9	1560	3.6	0	1551 9
10	1742	0.9	1	1572 170
11	1572	0.2	1	1481 91
12	1588	0.1	1	1485 103
13	1521	0.1	1	1436 85
14	1631	0.1	1	1526 105
15	1640	0.1	1	1556 84
16	1930	0.1	1	1808 122
17	1255	0.1	1	1175 80
18	1575	0.1	1	1476 99
19	1488	0.1	1	1421 67
20	1661	0.1	1	1546 115
21	1621	0.1	1	1520 101
22	1477	0.1	1	1408 69
23	1566	0.1	1	1468 98
24	1422	0.1	1	1347 75
25	1549	0.1	1	1461 88
26	1458	0.1	1	1366 92
27	1513	0.1	1	1421 92
28	1501	0.1	1	1426 75
29	1616	0.1	1	1527 89
30	1466	0.1	1	1386 80
31	1694	0.1	1	1600 94
32	1281	0.1	1	1225 56
33	1395	0.1	1	1324 71
34	1447	0.1	1	1372 75
35	1350	0.1	1	1296 54
36	1351	0.1	1	1288 63
37	1431	0.1	1	1368 63
38	1348	0.1	1	1294 54
39	1465	0.1	1	1386 79
40	1317	0.1	1	1252 65
41	1270	0.1	1	1227 43
42	1479	0.1	1	1415 64
43	1518	0.1	1	1422 96
44	1203	0.1	1	1152 51
45	2354	0.1	1	2283 71
46	525	0.1	1	501 24
47	815	0.1	1	781 34
48	1490	0.1	1	1428 62
49	1271	0.1	1	1220 51
50	1054	0.1	1	1007 47
51	1433	0.1	1	1375 58
52	1433	0.1	1	1385 48
53	1292	0.1	1	1240 52
54	1296	0.1	1	1245 51
55	1551	0.1	1	1499 52
56	1080	0.1	1	1043 37
57	1384	0.1	1	1329 55
58	1377	0.1	1	1335 42
59	1215	0.1	1	1185 30
60	980	0.1	1	962 18
61	779	0.1	1	752 27
62	1634	0.1	1	1594 40
63	1135	0.1	1	1105 30
64	973	0.1	1	954 19
65	671	0.1	1	654 17
66	794	0.1	1	769 25
67	459	0.1	1	451 8
68	596	0.1	1	576 20
69	472	0.1	1	459 13
70	457	0.1	1	446 11
71	56	0.1	1	51 5
72	47	0.1	1	47
73	105	0.1	1	103 2
74	82	0.1	1	79 3
75	16	0.1	1	16
76	4	0.1	1	4
77	3	0.1	1	2 1
78	6	0.1	1	3 3
79	2	0.1	1	2
80	4	0.1	1	4
81	1	0.1	1	1
82	3	0.1	1	3
83	1	0.1	1	0 1
84	2	0.1	1	1 1
92	2	0.1	1	2
98	1	0.1	1	0 1

RUN STATISTICS FOR INPUT FILE: MA-MGH-00294/host_removal/MA-MGH-00294_R1.fastq.gz
=============================================
944055 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00294/adapter_trimmed/MA-MGH-00294_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00294/host_removal/MA-MGH-00294_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to MA-MGH-00294_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00294/host_removal/MA-MGH-00294_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00294/host_removal/MA-MGH-00294_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 13.151 s (13.931 µs/read; 4.31 M reads/minute).

=== Summary ===

Total reads processed:                 944,055
Reads with adapters:                   334,310 (35.4%)
Reads written (passing filters):       944,055 (100.0%)

Total basepairs processed:    95,349,555 bp
Quality-trimmed:                 864,587 bp (0.9%)
Total written (filtered):     91,091,165 bp (95.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 334310 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 25.0%
  C: 25.0%
  G: 24.9%
  T: 25.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	169360	236013.8	0	169360
2	51874	59003.4	0	51874
3	14736	14750.9	0	14736
4	6129	3687.7	0	6129
5	2594	921.9	0	2594
6	1782	230.5	0	1782
7	1782	57.6	0	1782
8	1662	14.4	0	1662
9	1683	3.6	0	1674 9
10	1783	0.9	1	1689 94
11	1638	0.2	1	1615 23
12	1598	0.1	1	1561 37
13	1574	0.1	1	1550 24
14	1661	0.1	1	1644 17
15	1678	0.1	1	1648 30
16	1729	0.1	1	1693 36
17	1549	0.1	1	1521 28
18	1597	0.1	1	1568 29
19	1623	0.1	1	1595 28
20	1637	0.1	1	1619 18
21	1574	0.1	1	1548 26
22	1608	0.1	1	1581 27
23	1561	0.1	1	1533 28
24	1526	0.1	1	1505 21
25	1592	0.1	1	1566 26
26	1441	0.1	1	1427 14
27	1527	0.1	1	1494 33
28	1631	0.1	1	1598 33
29	1535	0.1	1	1526 9
30	1544	0.1	1	1524 20
31	1572	0.1	1	1549 23
32	1469	0.1	1	1461 8
33	1454	0.1	1	1440 14
34	1433	0.1	1	1412 21
35	1398	0.1	1	1376 22
36	1500	0.1	1	1481 19
37	1303	0.1	1	1285 18
38	1455	0.1	1	1434 21
39	1303	0.1	1	1289 14
40	1402	0.1	1	1385 17
41	1420	0.1	1	1402 18
42	3321	0.1	1	3288 33
43	608	0.1	1	597 11
44	5105	0.1	1	5078 27
45	1924	0.1	1	1901 23
46	890	0.1	1	878 12
47	840	0.1	1	835 5
48	328	0.1	1	321 7
49	1403	0.1	1	1393 10
50	202	0.1	1	197 5
51	471	0.1	1	465 6
52	328	0.1	1	318 10
53	1227	0.1	1	1222 5
54	2068	0.1	1	2048 20
55	493	0.1	1	481 12
56	1211	0.1	1	1204 7
57	2984	0.1	1	2965 19
58	761	0.1	1	754 7
59	633	0.1	1	624 9
60	2667	0.1	1	2647 20
61	767	0.1	1	757 10
62	304	0.1	1	299 5
63	1721	0.1	1	1714 7
64	1738	0.1	1	1725 13
65	300	0.1	1	297 3
66	265	0.1	1	262 3
67	133	0.1	1	130 3
68	98	0.1	1	95 3
69	105	0.1	1	104 1
70	210	0.1	1	208 2
71	89	0.1	1	89
72	52	0.1	1	52
73	68	0.1	1	67 1
74	28	0.1	1	27 1
75	10	0.1	1	9 1
76	1	0.1	1	1
77	1	0.1	1	1
78	2	0.1	1	2
79	2	0.1	1	2
80	10	0.1	1	6 4
81	7	0.1	1	2 5
82	3	0.1	1	1 2
83	1	0.1	1	0 1
84	1	0.1	1	1
85	1	0.1	1	1
86	1	0.1	1	0 1
89	3	0.1	1	0 3
91	3	0.1	1	1 2
92	3	0.1	1	2 1
93	1	0.1	1	0 1
98	1	0.1	1	1

RUN STATISTICS FOR INPUT FILE: MA-MGH-00294/host_removal/MA-MGH-00294_R2.fastq.gz
=============================================
944055 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files MA-MGH-00294_R1_trimmed.fq.gz and MA-MGH-00294_R2_trimmed.fq.gz
file_1: MA-MGH-00294_R1_trimmed.fq.gz, file_2: MA-MGH-00294_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: MA-MGH-00294_R1_trimmed.fq.gz and MA-MGH-00294_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to MA-MGH-00294_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to MA-MGH-00294_R2_val_2.fq.gz

Total number of sequences analysed: 944055

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 2513 (0.27%)


  >>> Now running FastQC on the validated data MA-MGH-00294_R1_val_1.fq.gz<<<

Started analysis of MA-MGH-00294_R1_val_1.fq.gz
Approx 5% complete for MA-MGH-00294_R1_val_1.fq.gz
Approx 10% complete for MA-MGH-00294_R1_val_1.fq.gz
Approx 15% complete for MA-MGH-00294_R1_val_1.fq.gz
Approx 20% complete for MA-MGH-00294_R1_val_1.fq.gz
Approx 25% complete for MA-MGH-00294_R1_val_1.fq.gz
Approx 30% complete for MA-MGH-00294_R1_val_1.fq.gz
Approx 35% complete for MA-MGH-00294_R1_val_1.fq.gz
Approx 40% complete for MA-MGH-00294_R1_val_1.fq.gz
Approx 45% complete for MA-MGH-00294_R1_val_1.fq.gz
Approx 50% complete for MA-MGH-00294_R1_val_1.fq.gz
Approx 55% complete for MA-MGH-00294_R1_val_1.fq.gz
Approx 60% complete for MA-MGH-00294_R1_val_1.fq.gz
Approx 65% complete for MA-MGH-00294_R1_val_1.fq.gz
Approx 70% complete for MA-MGH-00294_R1_val_1.fq.gz
Approx 75% complete for MA-MGH-00294_R1_val_1.fq.gz
Approx 80% complete for MA-MGH-00294_R1_val_1.fq.gz
Approx 85% complete for MA-MGH-00294_R1_val_1.fq.gz
Approx 90% complete for MA-MGH-00294_R1_val_1.fq.gz
Approx 95% complete for MA-MGH-00294_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data MA-MGH-00294_R2_val_2.fq.gz<<<

Started analysis of MA-MGH-00294_R2_val_2.fq.gz
Approx 5% complete for MA-MGH-00294_R2_val_2.fq.gz
Approx 10% complete for MA-MGH-00294_R2_val_2.fq.gz
Approx 15% complete for MA-MGH-00294_R2_val_2.fq.gz
Approx 20% complete for MA-MGH-00294_R2_val_2.fq.gz
Approx 25% complete for MA-MGH-00294_R2_val_2.fq.gz
Approx 30% complete for MA-MGH-00294_R2_val_2.fq.gz
Approx 35% complete for MA-MGH-00294_R2_val_2.fq.gz
Approx 40% complete for MA-MGH-00294_R2_val_2.fq.gz
Approx 45% complete for MA-MGH-00294_R2_val_2.fq.gz
Approx 50% complete for MA-MGH-00294_R2_val_2.fq.gz
Approx 55% complete for MA-MGH-00294_R2_val_2.fq.gz
Approx 60% complete for MA-MGH-00294_R2_val_2.fq.gz
Approx 65% complete for MA-MGH-00294_R2_val_2.fq.gz
Approx 70% complete for MA-MGH-00294_R2_val_2.fq.gz
Approx 75% complete for MA-MGH-00294_R2_val_2.fq.gz
Approx 80% complete for MA-MGH-00294_R2_val_2.fq.gz
Approx 85% complete for MA-MGH-00294_R2_val_2.fq.gz
Approx 90% complete for MA-MGH-00294_R2_val_2.fq.gz
Approx 95% complete for MA-MGH-00294_R2_val_2.fq.gz
Deleting both intermediate output files MA-MGH-00294_R1_trimmed.fq.gz and MA-MGH-00294_R2_trimmed.fq.gz

====================================================================================================

