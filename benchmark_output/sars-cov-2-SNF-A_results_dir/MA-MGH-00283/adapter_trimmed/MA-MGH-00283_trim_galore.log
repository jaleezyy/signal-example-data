Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00283/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> MA-MGH-00283/host_removal/MA-MGH-00283_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	32359	CTGTCTCTTATA	324785	9.96
smallRNA	0	TGGAATTCTCGG	324785	0.00
Illumina	0	AGATCGGAAGAGC	324785	0.00
Using Nextera adapter for trimming (count: 32359). Second best hit was smallRNA (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00283/adapter_trimmed/MA-MGH-00283_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00283/host_removal/MA-MGH-00283_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to MA-MGH-00283_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00283/host_removal/MA-MGH-00283_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00283/host_removal/MA-MGH-00283_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 2.935 s (9.036 µs/read; 6.64 M reads/minute).

=== Summary ===

Total reads processed:                 324,785
Reads with adapters:                   128,568 (39.6%)
Reads written (passing filters):       324,785 (100.0%)

Total basepairs processed:    32,803,285 bp
Quality-trimmed:                 602,271 bp (1.8%)
Total written (filtered):     30,887,554 bp (94.2%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 128568 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 17.7%
  C: 29.9%
  G: 30.2%
  T: 22.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	65031	81196.2	0	65031
2	16405	20299.1	0	16405
3	5679	5074.8	0	5679
4	1934	1268.7	0	1934
5	1210	317.2	0	1210
6	882	79.3	0	882
7	905	19.8	0	905
8	855	5.0	0	855
9	875	1.2	0	874 1
10	962	0.3	1	917 45
11	812	0.1	1	797 15
12	894	0.0	1	862 32
13	804	0.0	1	789 15
14	806	0.0	1	775 31
15	858	0.0	1	839 19
16	896	0.0	1	859 37
17	807	0.0	1	785 22
18	771	0.0	1	745 26
19	696	0.0	1	681 15
20	793	0.0	1	779 14
21	738	0.0	1	716 22
22	759	0.0	1	742 17
23	785	0.0	1	772 13
24	654	0.0	1	640 14
25	683	0.0	1	667 16
26	652	0.0	1	640 12
27	699	0.0	1	689 10
28	694	0.0	1	683 11
29	682	0.0	1	672 10
30	622	0.0	1	610 12
31	729	0.0	1	711 18
32	545	0.0	1	537 8
33	665	0.0	1	654 11
34	623	0.0	1	612 11
35	525	0.0	1	515 10
36	568	0.0	1	553 15
37	581	0.0	1	567 14
38	612	0.0	1	602 10
39	502	0.0	1	498 4
40	553	0.0	1	542 11
41	541	0.0	1	532 9
42	572	0.0	1	556 16
43	567	0.0	1	539 28
44	538	0.0	1	531 7
45	1066	0.0	1	1045 21
46	152	0.0	1	143 9
47	461	0.0	1	450 11
48	4443	0.0	1	4420 23
49	472	0.0	1	466 6
50	74	0.0	1	69 5
51	984	0.0	1	973 11
52	366	0.0	1	359 7
53	44	0.0	1	41 3
54	394	0.0	1	388 6
55	444	0.0	1	438 6
56	89	0.0	1	86 3
57	20	0.0	1	19 1
58	26	0.0	1	23 3
59	161	0.0	1	159 2
60	10	0.0	1	8 2
61	34	0.0	1	33 1
62	433	0.0	1	430 3
63	33	0.0	1	33
64	34	0.0	1	33 1
65	125	0.0	1	121 4
66	145	0.0	1	144 1
67	15	0.0	1	15
68	110	0.0	1	108 2
69	123	0.0	1	120 3
70	259	0.0	1	258 1
71	18	0.0	1	18
72	9	0.0	1	9
73	22	0.0	1	22
74	21	0.0	1	21
75	6	0.0	1	5 1
76	1	0.0	1	1
77	1	0.0	1	1
78	1	0.0	1	0 1
83	3	0.0	1	1 2
84	1	0.0	1	1
85	1	0.0	1	0 1
92	1	0.0	1	0 1
93	1	0.0	1	0 1
98	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: MA-MGH-00283/host_removal/MA-MGH-00283_R1.fastq.gz
=============================================
324785 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00283/adapter_trimmed/MA-MGH-00283_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00283/host_removal/MA-MGH-00283_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to MA-MGH-00283_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00283/host_removal/MA-MGH-00283_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00283/host_removal/MA-MGH-00283_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 3.472 s (10.690 µs/read; 5.61 M reads/minute).

=== Summary ===

Total reads processed:                 324,785
Reads with adapters:                   130,512 (40.2%)
Reads written (passing filters):       324,785 (100.0%)

Total basepairs processed:    32,803,285 bp
Quality-trimmed:                 465,218 bp (1.4%)
Total written (filtered):     30,980,893 bp (94.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 130512 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 17.6%
  C: 30.0%
  G: 30.2%
  T: 22.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	66839	81196.2	0	66839
2	16987	20299.1	0	16987
3	5708	5074.8	0	5708
4	1908	1268.7	0	1908
5	1234	317.2	0	1234
6	875	79.3	0	875
7	898	19.8	0	898
8	837	5.0	0	837
9	849	1.2	0	848 1
10	974	0.3	1	931 43
11	805	0.1	1	781 24
12	866	0.0	1	829 37
13	790	0.0	1	770 20
14	774	0.0	1	742 32
15	853	0.0	1	824 29
16	835	0.0	1	789 46
17	816	0.0	1	782 34
18	771	0.0	1	746 25
19	723	0.0	1	687 36
20	755	0.0	1	734 21
21	692	0.0	1	666 26
22	806	0.0	1	779 27
23	736	0.0	1	715 21
24	658	0.0	1	645 13
25	677	0.0	1	659 18
26	629	0.0	1	611 18
27	706	0.0	1	686 20
28	693	0.0	1	675 18
29	645	0.0	1	624 21
30	630	0.0	1	610 20
31	672	0.0	1	647 25
32	643	0.0	1	629 14
33	623	0.0	1	606 17
34	600	0.0	1	573 27
35	535	0.0	1	519 16
36	553	0.0	1	537 16
37	586	0.0	1	573 13
38	573	0.0	1	556 17
39	541	0.0	1	529 12
40	569	0.0	1	553 16
41	513	0.0	1	495 18
42	555	0.0	1	544 11
43	462	0.0	1	456 6
44	507	0.0	1	498 9
45	450	0.0	1	439 11
46	526	0.0	1	510 16
47	742	0.0	1	733 9
48	252	0.0	1	243 9
49	442	0.0	1	429 13
50	352	0.0	1	344 8
51	385	0.0	1	375 10
52	418	0.0	1	417 1
53	428	0.0	1	423 5
54	620	0.0	1	603 17
55	243	0.0	1	230 13
56	447	0.0	1	435 12
57	747	0.0	1	733 14
58	377	0.0	1	366 11
59	285	0.0	1	276 9
60	863	0.0	1	848 15
61	287	0.0	1	279 8
62	245	0.0	1	237 8
63	968	0.0	1	959 9
64	285	0.0	1	278 7
65	150	0.0	1	150
66	160	0.0	1	158 2
67	165	0.0	1	163 2
68	146	0.0	1	143 3
69	111	0.0	1	111
70	170	0.0	1	165 5
71	160	0.0	1	158 2
72	85	0.0	1	83 2
73	68	0.0	1	68
74	18	0.0	1	18
75	2	0.0	1	2
77	1	0.0	1	0 1
80	1	0.0	1	0 1
82	1	0.0	1	1
84	2	0.0	1	2
85	1	0.0	1	0 1
86	1	0.0	1	0 1
87	1	0.0	1	0 1
88	1	0.0	1	0 1
90	1	0.0	1	1
91	1	0.0	1	0 1
92	1	0.0	1	1
95	2	0.0	1	0 2

RUN STATISTICS FOR INPUT FILE: MA-MGH-00283/host_removal/MA-MGH-00283_R2.fastq.gz
=============================================
324785 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files MA-MGH-00283_R1_trimmed.fq.gz and MA-MGH-00283_R2_trimmed.fq.gz
file_1: MA-MGH-00283_R1_trimmed.fq.gz, file_2: MA-MGH-00283_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: MA-MGH-00283_R1_trimmed.fq.gz and MA-MGH-00283_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to MA-MGH-00283_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to MA-MGH-00283_R2_val_2.fq.gz

Total number of sequences analysed: 324785

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1831 (0.56%)


  >>> Now running FastQC on the validated data MA-MGH-00283_R1_val_1.fq.gz<<<

Started analysis of MA-MGH-00283_R1_val_1.fq.gz
Approx 5% complete for MA-MGH-00283_R1_val_1.fq.gz
Approx 10% complete for MA-MGH-00283_R1_val_1.fq.gz
Approx 15% complete for MA-MGH-00283_R1_val_1.fq.gz
Approx 20% complete for MA-MGH-00283_R1_val_1.fq.gz
Approx 25% complete for MA-MGH-00283_R1_val_1.fq.gz
Approx 30% complete for MA-MGH-00283_R1_val_1.fq.gz
Approx 35% complete for MA-MGH-00283_R1_val_1.fq.gz
Approx 40% complete for MA-MGH-00283_R1_val_1.fq.gz
Approx 45% complete for MA-MGH-00283_R1_val_1.fq.gz
Approx 50% complete for MA-MGH-00283_R1_val_1.fq.gz
Approx 55% complete for MA-MGH-00283_R1_val_1.fq.gz
Approx 60% complete for MA-MGH-00283_R1_val_1.fq.gz
Approx 65% complete for MA-MGH-00283_R1_val_1.fq.gz
Approx 70% complete for MA-MGH-00283_R1_val_1.fq.gz
Approx 75% complete for MA-MGH-00283_R1_val_1.fq.gz
Approx 80% complete for MA-MGH-00283_R1_val_1.fq.gz
Approx 85% complete for MA-MGH-00283_R1_val_1.fq.gz
Approx 90% complete for MA-MGH-00283_R1_val_1.fq.gz
Approx 95% complete for MA-MGH-00283_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data MA-MGH-00283_R2_val_2.fq.gz<<<

Started analysis of MA-MGH-00283_R2_val_2.fq.gz
Approx 5% complete for MA-MGH-00283_R2_val_2.fq.gz
Approx 10% complete for MA-MGH-00283_R2_val_2.fq.gz
Approx 15% complete for MA-MGH-00283_R2_val_2.fq.gz
Approx 20% complete for MA-MGH-00283_R2_val_2.fq.gz
Approx 25% complete for MA-MGH-00283_R2_val_2.fq.gz
Approx 30% complete for MA-MGH-00283_R2_val_2.fq.gz
Approx 35% complete for MA-MGH-00283_R2_val_2.fq.gz
Approx 40% complete for MA-MGH-00283_R2_val_2.fq.gz
Approx 45% complete for MA-MGH-00283_R2_val_2.fq.gz
Approx 50% complete for MA-MGH-00283_R2_val_2.fq.gz
Approx 55% complete for MA-MGH-00283_R2_val_2.fq.gz
Approx 60% complete for MA-MGH-00283_R2_val_2.fq.gz
Approx 65% complete for MA-MGH-00283_R2_val_2.fq.gz
Approx 70% complete for MA-MGH-00283_R2_val_2.fq.gz
Approx 75% complete for MA-MGH-00283_R2_val_2.fq.gz
Approx 80% complete for MA-MGH-00283_R2_val_2.fq.gz
Approx 85% complete for MA-MGH-00283_R2_val_2.fq.gz
Approx 90% complete for MA-MGH-00283_R2_val_2.fq.gz
Approx 95% complete for MA-MGH-00283_R2_val_2.fq.gz
Deleting both intermediate output files MA-MGH-00283_R1_trimmed.fq.gz and MA-MGH-00283_R2_trimmed.fq.gz

====================================================================================================

