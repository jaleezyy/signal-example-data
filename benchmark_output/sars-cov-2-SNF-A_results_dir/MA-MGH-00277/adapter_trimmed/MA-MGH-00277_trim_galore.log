Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00277/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> MA-MGH-00277/host_removal/MA-MGH-00277_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	32250	CTGTCTCTTATA	275386	11.71
Illumina	0	AGATCGGAAGAGC	275386	0.00
smallRNA	0	TGGAATTCTCGG	275386	0.00
Using Nextera adapter for trimming (count: 32250). Second best hit was Illumina (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00277/adapter_trimmed/MA-MGH-00277_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00277/host_removal/MA-MGH-00277_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to MA-MGH-00277_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00277/host_removal/MA-MGH-00277_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00277/host_removal/MA-MGH-00277_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 3.237 s (11.755 µs/read; 5.10 M reads/minute).

=== Summary ===

Total reads processed:                 275,386
Reads with adapters:                   110,300 (40.1%)
Reads written (passing filters):       275,386 (100.0%)

Total basepairs processed:    27,813,986 bp
Quality-trimmed:                 479,812 bp (1.7%)
Total written (filtered):     25,995,297 bp (93.5%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 110300 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 18.4%
  C: 30.5%
  G: 28.0%
  T: 23.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	50663	68846.5	0	50663
2	14054	17211.6	0	14054
3	4871	4302.9	0	4871
4	1739	1075.7	0	1739
5	1053	268.9	0	1053
6	845	67.2	0	845
7	943	16.8	0	943
8	853	4.2	0	853
9	772	1.1	0	771 1
10	895	0.3	1	864 31
11	758	0.1	1	741 17
12	851	0.0	1	829 22
13	771	0.0	1	757 14
14	803	0.0	1	784 19
15	781	0.0	1	765 16
16	840	0.0	1	808 32
17	738	0.0	1	726 12
18	765	0.0	1	747 18
19	694	0.0	1	680 14
20	767	0.0	1	750 17
21	741	0.0	1	718 23
22	712	0.0	1	701 11
23	759	0.0	1	734 25
24	674	0.0	1	666 8
25	688	0.0	1	674 14
26	640	0.0	1	631 9
27	706	0.0	1	693 13
28	694	0.0	1	676 18
29	712	0.0	1	695 17
30	662	0.0	1	652 10
31	660	0.0	1	651 9
32	622	0.0	1	613 9
33	622	0.0	1	610 12
34	607	0.0	1	594 13
35	618	0.0	1	599 19
36	586	0.0	1	567 19
37	532	0.0	1	528 4
38	572	0.0	1	565 7
39	597	0.0	1	579 18
40	543	0.0	1	536 7
41	558	0.0	1	545 13
42	525	0.0	1	515 10
43	552	0.0	1	544 8
44	499	0.0	1	490 9
45	931	0.0	1	916 15
46	181	0.0	1	176 5
47	451	0.0	1	443 8
48	452	0.0	1	450 2
49	549	0.0	1	541 8
50	493	0.0	1	481 12
51	593	0.0	1	585 8
52	533	0.0	1	525 8
53	487	0.0	1	483 4
54	481	0.0	1	475 6
55	455	0.0	1	451 4
56	440	0.0	1	437 3
57	414	0.0	1	408 6
58	456	0.0	1	452 4
59	410	0.0	1	404 6
60	413	0.0	1	412 1
61	354	0.0	1	352 2
62	464	0.0	1	460 4
63	410	0.0	1	409 1
64	341	0.0	1	340 1
65	260	0.0	1	257 3
66	237	0.0	1	232 5
67	161	0.0	1	159 2
68	232	0.0	1	230 2
69	223	0.0	1	219 4
70	206	0.0	1	200 6
71	9	0.0	1	8 1
72	18	0.0	1	18
73	57	0.0	1	56 1
74	33	0.0	1	33
75	8	0.0	1	7 1
76	4	0.0	1	4
77	1	0.0	1	1
80	1	0.0	1	1
84	1	0.0	1	1
87	1	0.0	1	0 1
92	1	0.0	1	0 1
93	1	0.0	1	0 1
97	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: MA-MGH-00277/host_removal/MA-MGH-00277_R1.fastq.gz
=============================================
275386 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-SNF-A_results_dir/MA-MGH-00277/adapter_trimmed/MA-MGH-00277_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: MA-MGH-00277/host_removal/MA-MGH-00277_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to MA-MGH-00277_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file MA-MGH-00277/host_removal/MA-MGH-00277_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA MA-MGH-00277/host_removal/MA-MGH-00277_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 3.585 s (13.017 µs/read; 4.61 M reads/minute).

=== Summary ===

Total reads processed:                 275,386
Reads with adapters:                   111,993 (40.7%)
Reads written (passing filters):       275,386 (100.0%)

Total basepairs processed:    27,813,986 bp
Quality-trimmed:                 362,335 bp (1.3%)
Total written (filtered):     26,142,403 bp (94.0%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 111993 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 18.9%
  C: 30.6%
  G: 27.6%
  T: 23.0%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	52323	68846.5	0	52323
2	14559	17211.6	0	14559
3	4754	4302.9	0	4754
4	1676	1075.7	0	1676
5	1083	268.9	0	1083
6	818	67.2	0	818
7	953	16.8	0	953
8	863	4.2	0	863
9	759	1.1	0	755 4
10	881	0.3	1	842 39
11	763	0.1	1	747 16
12	825	0.0	1	793 32
13	768	0.0	1	752 16
14	783	0.0	1	763 20
15	782	0.0	1	754 28
16	797	0.0	1	768 29
17	739	0.0	1	717 22
18	761	0.0	1	738 23
19	733	0.0	1	704 29
20	725	0.0	1	713 12
21	717	0.0	1	698 19
22	744	0.0	1	717 27
23	695	0.0	1	686 9
24	701	0.0	1	684 17
25	684	0.0	1	667 17
26	624	0.0	1	613 11
27	705	0.0	1	686 19
28	694	0.0	1	677 17
29	666	0.0	1	656 10
30	685	0.0	1	670 15
31	637	0.0	1	622 15
32	623	0.0	1	616 7
33	625	0.0	1	614 11
34	590	0.0	1	581 9
35	609	0.0	1	591 18
36	566	0.0	1	542 24
37	554	0.0	1	544 10
38	578	0.0	1	567 11
39	585	0.0	1	576 9
40	563	0.0	1	548 15
41	571	0.0	1	558 13
42	589	0.0	1	574 15
43	535	0.0	1	517 18
44	2351	0.0	1	2330 21
45	626	0.0	1	612 14
46	350	0.0	1	333 17
47	457	0.0	1	448 9
48	144	0.0	1	141 3
49	538	0.0	1	527 11
50	130	0.0	1	124 6
51	210	0.0	1	203 7
52	144	0.0	1	138 6
53	451	0.0	1	448 3
54	678	0.0	1	677 1
55	205	0.0	1	202 3
56	444	0.0	1	436 8
57	979	0.0	1	965 14
58	282	0.0	1	274 8
59	221	0.0	1	219 2
60	850	0.0	1	844 6
61	262	0.0	1	259 3
62	108	0.0	1	106 2
63	576	0.0	1	568 8
64	574	0.0	1	569 5
65	97	0.0	1	96 1
66	103	0.0	1	102 1
67	49	0.0	1	48 1
68	44	0.0	1	43 1
69	44	0.0	1	42 2
70	63	0.0	1	63
71	42	0.0	1	42
72	24	0.0	1	22 2
73	30	0.0	1	29 1
74	16	0.0	1	15 1
75	3	0.0	1	3
77	1	0.0	1	0 1
80	1	0.0	1	1
83	1	0.0	1	0 1
84	1	0.0	1	1
85	3	0.0	1	3
86	1	0.0	1	0 1
89	1	0.0	1	1
93	1	0.0	1	0 1
95	1	0.0	1	0 1
99	1	0.0	1	0 1
101	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: MA-MGH-00277/host_removal/MA-MGH-00277_R2.fastq.gz
=============================================
275386 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files MA-MGH-00277_R1_trimmed.fq.gz and MA-MGH-00277_R2_trimmed.fq.gz
file_1: MA-MGH-00277_R1_trimmed.fq.gz, file_2: MA-MGH-00277_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: MA-MGH-00277_R1_trimmed.fq.gz and MA-MGH-00277_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to MA-MGH-00277_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to MA-MGH-00277_R2_val_2.fq.gz

Total number of sequences analysed: 275386

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1021 (0.37%)


  >>> Now running FastQC on the validated data MA-MGH-00277_R1_val_1.fq.gz<<<

Started analysis of MA-MGH-00277_R1_val_1.fq.gz
Approx 5% complete for MA-MGH-00277_R1_val_1.fq.gz
Approx 10% complete for MA-MGH-00277_R1_val_1.fq.gz
Approx 15% complete for MA-MGH-00277_R1_val_1.fq.gz
Approx 20% complete for MA-MGH-00277_R1_val_1.fq.gz
Approx 25% complete for MA-MGH-00277_R1_val_1.fq.gz
Approx 30% complete for MA-MGH-00277_R1_val_1.fq.gz
Approx 35% complete for MA-MGH-00277_R1_val_1.fq.gz
Approx 40% complete for MA-MGH-00277_R1_val_1.fq.gz
Approx 45% complete for MA-MGH-00277_R1_val_1.fq.gz
Approx 50% complete for MA-MGH-00277_R1_val_1.fq.gz
Approx 55% complete for MA-MGH-00277_R1_val_1.fq.gz
Approx 60% complete for MA-MGH-00277_R1_val_1.fq.gz
Approx 65% complete for MA-MGH-00277_R1_val_1.fq.gz
Approx 70% complete for MA-MGH-00277_R1_val_1.fq.gz
Approx 75% complete for MA-MGH-00277_R1_val_1.fq.gz
Approx 80% complete for MA-MGH-00277_R1_val_1.fq.gz
Approx 85% complete for MA-MGH-00277_R1_val_1.fq.gz
Approx 90% complete for MA-MGH-00277_R1_val_1.fq.gz
Approx 95% complete for MA-MGH-00277_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data MA-MGH-00277_R2_val_2.fq.gz<<<

Started analysis of MA-MGH-00277_R2_val_2.fq.gz
Approx 5% complete for MA-MGH-00277_R2_val_2.fq.gz
Approx 10% complete for MA-MGH-00277_R2_val_2.fq.gz
Approx 15% complete for MA-MGH-00277_R2_val_2.fq.gz
Approx 20% complete for MA-MGH-00277_R2_val_2.fq.gz
Approx 25% complete for MA-MGH-00277_R2_val_2.fq.gz
Approx 30% complete for MA-MGH-00277_R2_val_2.fq.gz
Approx 35% complete for MA-MGH-00277_R2_val_2.fq.gz
Approx 40% complete for MA-MGH-00277_R2_val_2.fq.gz
Approx 45% complete for MA-MGH-00277_R2_val_2.fq.gz
Approx 50% complete for MA-MGH-00277_R2_val_2.fq.gz
Approx 55% complete for MA-MGH-00277_R2_val_2.fq.gz
Approx 60% complete for MA-MGH-00277_R2_val_2.fq.gz
Approx 65% complete for MA-MGH-00277_R2_val_2.fq.gz
Approx 70% complete for MA-MGH-00277_R2_val_2.fq.gz
Approx 75% complete for MA-MGH-00277_R2_val_2.fq.gz
Approx 80% complete for MA-MGH-00277_R2_val_2.fq.gz
Approx 85% complete for MA-MGH-00277_R2_val_2.fq.gz
Approx 90% complete for MA-MGH-00277_R2_val_2.fq.gz
Approx 95% complete for MA-MGH-00277_R2_val_2.fq.gz
Deleting both intermediate output files MA-MGH-00277_R1_trimmed.fq.gz and MA-MGH-00277_R2_trimmed.fq.gz

====================================================================================================

