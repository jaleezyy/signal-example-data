Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-nonvoivoc_results_dir/SARS-CoV-2-human-AUS-TL26-2020/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> SARS-CoV-2-human-AUS-TL26-2020/host_removal/SARS-CoV-2-human-AUS-TL26-2020_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	73	CTGTCTCTTATA	553588	0.01
Illumina	0	AGATCGGAAGAGC	553588	0.00
smallRNA	0	TGGAATTCTCGG	553588	0.00
Using Nextera adapter for trimming (count: 73). Second best hit was Illumina (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-nonvoivoc_results_dir/SARS-CoV-2-human-AUS-TL26-2020/adapter_trimmed/SARS-CoV-2-human-AUS-TL26-2020_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: SARS-CoV-2-human-AUS-TL26-2020/host_removal/SARS-CoV-2-human-AUS-TL26-2020_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to SARS-CoV-2-human-AUS-TL26-2020_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file SARS-CoV-2-human-AUS-TL26-2020/host_removal/SARS-CoV-2-human-AUS-TL26-2020_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA SARS-CoV-2-human-AUS-TL26-2020/host_removal/SARS-CoV-2-human-AUS-TL26-2020_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 12.383 s (22.369 µs/read; 2.68 M reads/minute).

=== Summary ===

Total reads processed:                 553,588
Reads with adapters:                    79,251 (14.3%)
Reads written (passing filters):       553,588 (100.0%)

Total basepairs processed:    80,862,045 bp
Quality-trimmed:                 155,512 bp (0.2%)
Total written (filtered):     80,594,652 bp (99.7%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 79251 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 41.9%
  C: 18.1%
  G: 18.3%
  T: 21.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	63477	138397.0	0	63477
2	10767	34599.2	0	10767
3	3786	8649.8	0	3786
4	623	2162.5	0	623
5	221	540.6	0	221
6	76	135.2	0	76
7	21	33.8	0	21
8	6	8.4	0	6
10	6	0.5	1	1 5
11	3	0.1	1	1 2
12	3	0.0	1	0 3
13	1	0.0	1	0 1
14	9	0.0	1	0 9
15	10	0.0	1	1 9
16	15	0.0	1	4 11
17	9	0.0	1	2 7
18	17	0.0	1	4 13
19	9	0.0	1	0 9
20	6	0.0	1	1 5
21	7	0.0	1	1 6
22	2	0.0	1	1 1
23	2	0.0	1	2
24	2	0.0	1	1 1
25	1	0.0	1	0 1
26	7	0.0	1	1 6
27	10	0.0	1	7 3
28	3	0.0	1	2 1
29	6	0.0	1	2 4
30	2	0.0	1	0 2
31	2	0.0	1	0 2
32	1	0.0	1	1
33	3	0.0	1	1 2
34	7	0.0	1	3 4
35	8	0.0	1	3 5
36	4	0.0	1	1 3
37	10	0.0	1	2 8
38	7	0.0	1	1 6
39	5	0.0	1	1 4
40	4	0.0	1	1 3
42	9	0.0	1	2 7
43	5	0.0	1	2 3
44	3	0.0	1	1 2
47	2	0.0	1	1 1
48	2	0.0	1	1 1
49	1	0.0	1	0 1
50	6	0.0	1	2 4
51	2	0.0	1	1 1
52	3	0.0	1	2 1
53	1	0.0	1	0 1
54	1	0.0	1	0 1
55	1	0.0	1	1
56	3	0.0	1	1 2
58	2	0.0	1	1 1
63	1	0.0	1	1
66	1	0.0	1	0 1
69	6	0.0	1	1 5
70	2	0.0	1	1 1
71	2	0.0	1	0 2
72	4	0.0	1	0 4
73	1	0.0	1	0 1
75	1	0.0	1	0 1
80	1	0.0	1	0 1
82	1	0.0	1	0 1
83	2	0.0	1	2
84	1	0.0	1	0 1
85	2	0.0	1	2
86	1	0.0	1	0 1
87	2	0.0	1	0 2
88	1	0.0	1	1
92	2	0.0	1	1 1
94	1	0.0	1	0 1
95	1	0.0	1	0 1
99	1	0.0	1	0 1
100	1	0.0	1	0 1
102	1	0.0	1	1
103	1	0.0	1	0 1
104	1	0.0	1	0 1
108	1	0.0	1	0 1
117	1	0.0	1	0 1
121	1	0.0	1	0 1
123	1	0.0	1	0 1
138	4	0.0	1	0 4
142	1	0.0	1	0 1
143	1	0.0	1	0 1
145	2	0.0	1	0 2
147	2	0.0	1	0 2

RUN STATISTICS FOR INPUT FILE: SARS-CoV-2-human-AUS-TL26-2020/host_removal/SARS-CoV-2-human-AUS-TL26-2020_R1.fastq.gz
=============================================
553588 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/sars-cov-2-nonvoivoc_results_dir/SARS-CoV-2-human-AUS-TL26-2020/adapter_trimmed/SARS-CoV-2-human-AUS-TL26-2020_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: SARS-CoV-2-human-AUS-TL26-2020/host_removal/SARS-CoV-2-human-AUS-TL26-2020_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to SARS-CoV-2-human-AUS-TL26-2020_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file SARS-CoV-2-human-AUS-TL26-2020/host_removal/SARS-CoV-2-human-AUS-TL26-2020_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA SARS-CoV-2-human-AUS-TL26-2020/host_removal/SARS-CoV-2-human-AUS-TL26-2020_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 13.037 s (23.550 µs/read; 2.55 M reads/minute).

=== Summary ===

Total reads processed:                 553,588
Reads with adapters:                    82,043 (14.8%)
Reads written (passing filters):       553,588 (100.0%)

Total basepairs processed:    80,879,032 bp
Quality-trimmed:                 354,777 bp (0.4%)
Total written (filtered):     80,401,445 bp (99.4%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 82043 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 40.9%
  C: 17.7%
  G: 19.2%
  T: 22.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	64987	138397.0	0	64987
2	11583	34599.2	0	11583
3	3994	8649.8	0	3994
4	742	2162.5	0	742
5	224	540.6	0	224
6	73	135.2	0	73
7	21	33.8	0	21
8	4	8.4	0	4
9	2	2.1	0	1 1
10	10	0.5	1	0 10
11	3	0.1	1	0 3
12	12	0.0	1	3 9
13	5	0.0	1	0 5
14	5	0.0	1	0 5
15	10	0.0	1	1 9
16	20	0.0	1	2 18
17	14	0.0	1	5 9
18	6	0.0	1	0 6
19	3	0.0	1	2 1
20	4	0.0	1	0 4
21	9	0.0	1	1 8
22	11	0.0	1	3 8
23	12	0.0	1	3 9
24	5	0.0	1	0 5
25	6	0.0	1	4 2
26	5	0.0	1	1 4
27	7	0.0	1	2 5
28	4	0.0	1	0 4
29	12	0.0	1	1 11
30	10	0.0	1	4 6
31	8	0.0	1	2 6
32	7	0.0	1	2 5
33	11	0.0	1	4 7
34	3	0.0	1	1 2
35	3	0.0	1	1 2
36	2	0.0	1	1 1
37	3	0.0	1	0 3
38	6	0.0	1	2 4
39	8	0.0	1	3 5
40	4	0.0	1	1 3
41	11	0.0	1	3 8
42	3	0.0	1	0 3
43	3	0.0	1	1 2
44	4	0.0	1	1 3
45	7	0.0	1	1 6
46	11	0.0	1	4 7
48	8	0.0	1	3 5
49	4	0.0	1	2 2
50	7	0.0	1	4 3
51	7	0.0	1	0 7
53	2	0.0	1	0 2
54	2	0.0	1	0 2
55	3	0.0	1	2 1
56	2	0.0	1	0 2
57	3	0.0	1	1 2
58	3	0.0	1	0 3
59	2	0.0	1	2
60	4	0.0	1	0 4
61	2	0.0	1	2
62	1	0.0	1	0 1
63	5	0.0	1	0 5
64	2	0.0	1	1 1
65	5	0.0	1	2 3
67	2	0.0	1	2
68	5	0.0	1	2 3
69	3	0.0	1	1 2
70	1	0.0	1	1
71	2	0.0	1	0 2
72	3	0.0	1	0 3
73	2	0.0	1	0 2
74	4	0.0	1	0 4
76	5	0.0	1	1 4
77	5	0.0	1	2 3
78	4	0.0	1	0 4
79	1	0.0	1	0 1
80	2	0.0	1	2
81	1	0.0	1	0 1
83	2	0.0	1	1 1
84	1	0.0	1	1
85	2	0.0	1	1 1
86	2	0.0	1	1 1
88	2	0.0	1	1 1
90	1	0.0	1	0 1
91	2	0.0	1	0 2
93	2	0.0	1	0 2
94	2	0.0	1	0 2
95	1	0.0	1	0 1
96	2	0.0	1	2
97	1	0.0	1	0 1
98	2	0.0	1	1 1
99	1	0.0	1	0 1
100	4	0.0	1	2 2
101	3	0.0	1	0 3
105	1	0.0	1	0 1
106	2	0.0	1	1 1
108	1	0.0	1	0 1
109	1	0.0	1	0 1
110	1	0.0	1	0 1
114	1	0.0	1	1
132	1	0.0	1	0 1
134	1	0.0	1	0 1
136	2	0.0	1	0 2
140	1	0.0	1	0 1
143	1	0.0	1	0 1
147	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: SARS-CoV-2-human-AUS-TL26-2020/host_removal/SARS-CoV-2-human-AUS-TL26-2020_R2.fastq.gz
=============================================
553588 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files SARS-CoV-2-human-AUS-TL26-2020_R1_trimmed.fq.gz and SARS-CoV-2-human-AUS-TL26-2020_R2_trimmed.fq.gz
file_1: SARS-CoV-2-human-AUS-TL26-2020_R1_trimmed.fq.gz, file_2: SARS-CoV-2-human-AUS-TL26-2020_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: SARS-CoV-2-human-AUS-TL26-2020_R1_trimmed.fq.gz and SARS-CoV-2-human-AUS-TL26-2020_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz

Total number of sequences analysed: 553588

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 128 (0.02%)


  >>> Now running FastQC on the validated data SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz<<<

Started analysis of SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Approx 5% complete for SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Approx 10% complete for SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Approx 15% complete for SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Approx 20% complete for SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Approx 25% complete for SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Approx 30% complete for SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Approx 35% complete for SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Approx 40% complete for SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Approx 45% complete for SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Approx 50% complete for SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Approx 55% complete for SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Approx 60% complete for SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Approx 65% complete for SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Approx 70% complete for SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Approx 75% complete for SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Approx 80% complete for SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Approx 85% complete for SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Approx 90% complete for SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz
Approx 95% complete for SARS-CoV-2-human-AUS-TL26-2020_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz<<<

Started analysis of SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Approx 5% complete for SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Approx 10% complete for SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Approx 15% complete for SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Approx 20% complete for SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Approx 25% complete for SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Approx 30% complete for SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Approx 35% complete for SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Approx 40% complete for SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Approx 45% complete for SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Approx 50% complete for SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Approx 55% complete for SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Approx 60% complete for SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Approx 65% complete for SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Approx 70% complete for SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Approx 75% complete for SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Approx 80% complete for SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Approx 85% complete for SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Approx 90% complete for SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Approx 95% complete for SARS-CoV-2-human-AUS-TL26-2020_R2_val_2.fq.gz
Deleting both intermediate output files SARS-CoV-2-human-AUS-TL26-2020_R1_trimmed.fq.gz and SARS-CoV-2-human-AUS-TL26-2020_R2_trimmed.fq.gz

====================================================================================================

