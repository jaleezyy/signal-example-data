Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.1
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/home/nasirja/covid-19-signal/subset_viral_7_results_dir/Plate4BLANK2/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> Plate4BLANK2/host_removal/Plate4BLANK2_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	12525	AGATCGGAAGAGC	47226	26.52
Nextera	1	CTGTCTCTTATA	47226	0.00
smallRNA	0	TGGAATTCTCGG	47226	0.00
Using Illumina adapter for trimming (count: 12525). Second best hit was Nextera (count: 1)

Writing report to '/workspace/home/nasirja/covid-19-signal/subset_viral_7_results_dir/Plate4BLANK2/adapter_trimmed/Plate4BLANK2_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: Plate4BLANK2/host_removal/Plate4BLANK2_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.1
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.1). Setting -j 2
Writing final adapter and quality trimmed output to Plate4BLANK2_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file Plate4BLANK2/host_removal/Plate4BLANK2_R1.fastq.gz <<< 
This is cutadapt 4.1 with Python 3.9.13
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC Plate4BLANK2/host_removal/Plate4BLANK2_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 0.80 s (17 µs/read; 3.54 M reads/minute).

=== Summary ===

Total reads processed:                  47,226
Reads with adapters:                    25,554 (54.1%)
Reads written (passing filters):        47,226 (100.0%)

Total basepairs processed:    11,853,726 bp
Quality-trimmed:               2,692,022 bp (22.7%)
Total written (filtered):      8,052,585 bp (67.9%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 25554 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 13.1%
  C: 34.1%
  G: 22.8%
  T: 29.6%
  none/other: 0.4%

Overview of removed sequences
length	count	expect	max.err	error counts
1	8055	11806.5	0	8055
2	1795	2951.6	0	1795
3	736	737.9	0	736
4	197	184.5	0	197
5	50	46.1	0	50
6	38	11.5	0	38
7	53	2.9	0	53
8	21	0.7	0	21
9	57	0.2	0	56 1
10	61	0.0	1	42 19
11	59	0.0	1	38 21
12	49	0.0	1	25 24
13	38	0.0	1	21 17
14	26	0.0	1	13 13
15	60	0.0	1	35 25
16	37	0.0	1	21 16
17	59	0.0	1	25 34
18	46	0.0	1	23 23
19	29	0.0	1	13 16
20	48	0.0	1	28 20
21	40	0.0	1	22 18
22	71	0.0	1	31 40
23	50	0.0	1	31 19
24	69	0.0	1	35 34
25	101	0.0	1	61 40
26	65	0.0	1	33 32
27	106	0.0	1	54 52
28	138	0.0	1	75 63
29	111	0.0	1	74 37
30	73	0.0	1	42 31
31	79	0.0	1	47 32
32	87	0.0	1	55 32
33	64	0.0	1	44 20
34	122	0.0	1	69 53
35	41	0.0	1	18 23
36	92	0.0	1	57 35
37	148	0.0	1	100 48
38	85	0.0	1	58 27
39	159	0.0	1	102 57
40	135	0.0	1	92 43
41	74	0.0	1	48 26
42	68	0.0	1	46 22
43	135	0.0	1	98 37
44	50	0.0	1	28 22
45	63	0.0	1	37 26
46	56	0.0	1	32 24
47	134	0.0	1	79 55
48	66	0.0	1	37 29
49	99	0.0	1	63 36
50	83	0.0	1	63 20
51	101	0.0	1	80 21
52	138	0.0	1	88 50
53	146	0.0	1	103 43
54	250	0.0	1	170 80
55	125	0.0	1	102 23
56	78	0.0	1	60 18
57	122	0.0	1	102 20
58	73	0.0	1	58 15
59	61	0.0	1	53 8
60	90	0.0	1	78 12
61	57	0.0	1	43 14
62	79	0.0	1	71 8
63	145	0.0	1	129 16
64	74	0.0	1	59 15
65	113	0.0	1	71 42
66	152	0.0	1	120 32
67	94	0.0	1	63 31
68	149	0.0	1	113 36
69	182	0.0	1	133 49
70	192	0.0	1	158 34
71	183	0.0	1	161 22
72	315	0.0	1	272 43
73	499	0.0	1	420 79
74	597	0.0	1	507 90
75	802	0.0	1	718 84
76	1282	0.0	1	1221 61
77	844	0.0	1	815 29
78	476	0.0	1	449 27
79	285	0.0	1	272 13
80	211	0.0	1	206 5
81	119	0.0	1	113 6
82	106	0.0	1	101 5
83	99	0.0	1	96 3
84	85	0.0	1	78 7
85	95	0.0	1	85 10
86	103	0.0	1	84 19
87	116	0.0	1	87 29
88	101	0.0	1	82 19
89	77	0.0	1	62 15
90	38	0.0	1	36 2
91	43	0.0	1	35 8
92	39	0.0	1	31 8
93	92	0.0	1	78 14
94	71	0.0	1	57 14
95	67	0.0	1	56 11
96	72	0.0	1	59 13
97	25	0.0	1	21 4
98	14	0.0	1	12 2
99	28	0.0	1	24 4
100	23	0.0	1	20 3
101	23	0.0	1	21 2
102	20	0.0	1	20
103	20	0.0	1	14 6
104	24	0.0	1	24
105	27	0.0	1	22 5
106	53	0.0	1	43 10
107	67	0.0	1	61 6
108	53	0.0	1	43 10
109	56	0.0	1	50 6
110	25	0.0	1	21 4
111	23	0.0	1	22 1
112	32	0.0	1	28 4
113	60	0.0	1	44 16
114	62	0.0	1	54 8
115	49	0.0	1	39 10
116	47	0.0	1	42 5
117	23	0.0	1	22 1
118	15	0.0	1	13 2
119	12	0.0	1	12
120	8	0.0	1	8
121	6	0.0	1	6
122	12	0.0	1	12
123	13	0.0	1	12 1
124	16	0.0	1	16
125	14	0.0	1	13 1
126	40	0.0	1	37 3
127	46	0.0	1	42 4
128	25	0.0	1	25
129	29	0.0	1	28 1
130	9	0.0	1	9
131	13	0.0	1	11 2
132	10	0.0	1	9 1
133	37	0.0	1	31 6
134	47	0.0	1	44 3
135	26	0.0	1	26
136	27	0.0	1	25 2
137	6	0.0	1	6
138	4	0.0	1	2 2
139	9	0.0	1	8 1
140	6	0.0	1	6
141	7	0.0	1	6 1
142	6	0.0	1	6
143	4	0.0	1	3 1
144	5	0.0	1	2 3
145	7	0.0	1	7
146	15	0.0	1	14 1
147	48	0.0	1	45 3
148	22	0.0	1	20 2
149	39	0.0	1	38 1
150	9	0.0	1	8 1
151	3	0.0	1	2 1
152	12	0.0	1	11 1
153	16	0.0	1	16
154	40	0.0	1	38 2
155	13	0.0	1	13
156	38	0.0	1	36 2
157	5	0.0	1	5
158	5	0.0	1	3 2
159	4	0.0	1	4
160	7	0.0	1	7
161	1	0.0	1	1
162	4	0.0	1	4
163	3	0.0	1	1 2
164	5	0.0	1	5
166	2	0.0	1	2
167	22	0.0	1	22
168	13	0.0	1	13
169	14	0.0	1	12 2
170	8	0.0	1	7 1
171	9	0.0	1	9
172	4	0.0	1	3 1
173	3	0.0	1	3
174	12	0.0	1	10 2
175	8	0.0	1	8
176	10	0.0	1	10
177	6	0.0	1	6
178	1	0.0	1	1
179	4	0.0	1	3 1
180	2	0.0	1	1 1
181	4	0.0	1	4
182	6	0.0	1	6
183	2	0.0	1	2
184	6	0.0	1	6
185	5	0.0	1	5
186	3	0.0	1	3
187	14	0.0	1	14
188	8	0.0	1	7 1
189	24	0.0	1	23 1
190	15	0.0	1	15
191	20	0.0	1	20
192	15	0.0	1	15
193	12	0.0	1	11 1
194	1	0.0	1	1
195	11	0.0	1	11
196	7	0.0	1	7
197	14	0.0	1	14
198	20	0.0	1	20
199	15	0.0	1	15
200	8	0.0	1	8
201	10	0.0	1	10
202	9	0.0	1	9
203	34	0.0	1	34
204	15	0.0	1	15
205	21	0.0	1	20 1
206	16	0.0	1	14 2
207	15	0.0	1	14 1
208	29	0.0	1	29
209	24	0.0	1	24
210	38	0.0	1	37 1
211	14	0.0	1	13 1
212	4	0.0	1	4
213	9	0.0	1	9
214	6	0.0	1	6
215	18	0.0	1	16 2
216	3	0.0	1	3
217	13	0.0	1	11 2
219	1	0.0	1	1
222	1	0.0	1	1
232	1	0.0	1	0 1
236	1	0.0	1	1
249	1	0.0	1	0 1
251	25	0.0	1	0 25

RUN STATISTICS FOR INPUT FILE: Plate4BLANK2/host_removal/Plate4BLANK2_R1.fastq.gz
=============================================
47226 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/home/nasirja/covid-19-signal/subset_viral_7_results_dir/Plate4BLANK2/adapter_trimmed/Plate4BLANK2_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: Plate4BLANK2/host_removal/Plate4BLANK2_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.1
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.1). Setting -j -j 2
Writing final adapter and quality trimmed output to Plate4BLANK2_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file Plate4BLANK2/host_removal/Plate4BLANK2_R2.fastq.gz <<< 
This is cutadapt 4.1 with Python 3.9.13
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC Plate4BLANK2/host_removal/Plate4BLANK2_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 0.73 s (15 µs/read; 3.88 M reads/minute).

=== Summary ===

Total reads processed:                  47,226
Reads with adapters:                    20,583 (43.6%)
Reads written (passing filters):        47,226 (100.0%)

Total basepairs processed:    11,853,726 bp
Quality-trimmed:               5,541,345 bp (46.7%)
Total written (filtered):      5,871,158 bp (49.5%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 20583 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 18.3%
  C: 38.1%
  G: 26.7%
  T: 16.3%
  none/other: 0.6%

Overview of removed sequences
length	count	expect	max.err	error counts
1	10073	11806.5	0	10073
2	3485	2951.6	0	3485
3	1003	737.9	0	1003
4	162	184.5	0	162
5	19	46.1	0	19
6	9	11.5	0	9
7	35	2.9	0	35
8	16	0.7	0	16
9	19	0.2	0	19
10	40	0.0	1	19 21
11	41	0.0	1	18 23
12	34	0.0	1	20 14
13	25	0.0	1	14 11
14	32	0.0	1	14 18
15	9	0.0	1	6 3
16	21	0.0	1	12 9
17	25	0.0	1	8 17
18	11	0.0	1	3 8
19	21	0.0	1	11 10
20	14	0.0	1	7 7
21	11	0.0	1	4 7
22	16	0.0	1	8 8
23	23	0.0	1	13 10
24	65	0.0	1	32 33
25	28	0.0	1	14 14
26	35	0.0	1	24 11
27	59	0.0	1	32 27
28	61	0.0	1	38 23
29	46	0.0	1	25 21
30	74	0.0	1	41 33
31	25	0.0	1	17 8
32	64	0.0	1	38 26
33	57	0.0	1	40 17
34	76	0.0	1	48 28
35	109	0.0	1	73 36
36	150	0.0	1	111 39
37	62	0.0	1	44 18
38	70	0.0	1	51 19
39	48	0.0	1	37 11
40	116	0.0	1	92 24
41	176	0.0	1	143 33
42	175	0.0	1	139 36
43	217	0.0	1	195 22
44	181	0.0	1	159 22
45	187	0.0	1	165 22
46	90	0.0	1	78 12
47	96	0.0	1	85 11
48	55	0.0	1	50 5
49	32	0.0	1	29 3
50	40	0.0	1	35 5
51	38	0.0	1	32 6
52	36	0.0	1	30 6
53	30	0.0	1	26 4
54	45	0.0	1	42 3
55	13	0.0	1	9 4
56	54	0.0	1	48 6
57	91	0.0	1	89 2
58	24	0.0	1	23 1
59	23	0.0	1	21 2
60	20	0.0	1	19 1
61	11	0.0	1	9 2
62	6	0.0	1	5 1
63	10	0.0	1	7 3
64	6	0.0	1	5 1
65	4	0.0	1	3 1
66	2	0.0	1	1 1
67	8	0.0	1	6 2
68	6	0.0	1	4 2
69	1	0.0	1	1
70	5	0.0	1	3 2
71	2	0.0	1	1 1
72	3	0.0	1	3
73	6	0.0	1	5 1
74	8	0.0	1	4 4
75	9	0.0	1	7 2
76	17	0.0	1	12 5
77	22	0.0	1	20 2
78	42	0.0	1	36 6
79	76	0.0	1	71 5
80	128	0.0	1	120 8
81	181	0.0	1	174 7
82	185	0.0	1	176 9
83	167	0.0	1	156 11
84	166	0.0	1	157 9
85	111	0.0	1	107 4
86	78	0.0	1	72 6
87	72	0.0	1	62 10
88	60	0.0	1	52 8
89	40	0.0	1	35 5
90	28	0.0	1	26 2
91	26	0.0	1	25 1
92	22	0.0	1	20 2
93	15	0.0	1	12 3
94	30	0.0	1	20 10
95	18	0.0	1	12 6
96	17	0.0	1	13 4
97	13	0.0	1	9 4
98	6	0.0	1	6
99	8	0.0	1	8
100	13	0.0	1	13
101	4	0.0	1	3 1
102	6	0.0	1	6
103	6	0.0	1	5 1
104	7	0.0	1	6 1
105	8	0.0	1	6 2
106	23	0.0	1	13 10
107	23	0.0	1	10 13
108	17	0.0	1	7 10
109	17	0.0	1	11 6
110	8	0.0	1	3 5
111	8	0.0	1	6 2
112	11	0.0	1	5 6
113	13	0.0	1	8 5
114	21	0.0	1	10 11
115	23	0.0	1	14 9
116	13	0.0	1	8 5
117	5	0.0	1	3 2
118	4	0.0	1	2 2
119	2	0.0	1	2
120	4	0.0	1	3 1
121	1	0.0	1	1
122	5	0.0	1	4 1
123	1	0.0	1	1
124	7	0.0	1	3 4
125	6	0.0	1	6
126	11	0.0	1	9 2
127	34	0.0	1	19 15
128	8	0.0	1	3 5
129	21	0.0	1	12 9
130	5	0.0	1	3 2
131	5	0.0	1	4 1
132	5	0.0	1	4 1
133	15	0.0	1	10 5
134	33	0.0	1	28 5
135	8	0.0	1	6 2
136	11	0.0	1	3 8
137	6	0.0	1	2 4
138	3	0.0	1	2 1
139	2	0.0	1	1 1
140	1	0.0	1	0 1
141	5	0.0	1	5
142	2	0.0	1	2
143	2	0.0	1	1 1
144	1	0.0	1	0 1
145	3	0.0	1	1 2
146	11	0.0	1	9 2
147	36	0.0	1	29 7
148	4	0.0	1	4
149	30	0.0	1	29 1
150	4	0.0	1	4
151	2	0.0	1	2
152	6	0.0	1	5 1
153	5	0.0	1	5
154	30	0.0	1	27 3
155	9	0.0	1	8 1
156	15	0.0	1	13 2
157	4	0.0	1	2 2
158	3	0.0	1	3
159	2	0.0	1	1 1
162	3	0.0	1	3
163	2	0.0	1	2
164	1	0.0	1	1
165	1	0.0	1	1
166	5	0.0	1	4 1
167	19	0.0	1	18 1
168	10	0.0	1	9 1
169	17	0.0	1	12 5
170	6	0.0	1	6
171	3	0.0	1	0 3
172	2	0.0	1	2
173	2	0.0	1	2
174	9	0.0	1	9
175	10	0.0	1	10
176	9	0.0	1	9
177	9	0.0	1	9
178	5	0.0	1	5
179	3	0.0	1	3
180	1	0.0	1	1
182	2	0.0	1	2
183	2	0.0	1	2
184	1	0.0	1	1
185	1	0.0	1	1
187	10	0.0	1	10
188	8	0.0	1	8
189	20	0.0	1	18 2
190	14	0.0	1	13 1
191	7	0.0	1	6 1
192	6	0.0	1	6
193	6	0.0	1	6
194	8	0.0	1	8
195	9	0.0	1	9
196	3	0.0	1	3
197	6	0.0	1	6
198	2	0.0	1	2
199	3	0.0	1	3
200	10	0.0	1	10
201	6	0.0	1	6
202	9	0.0	1	8 1
203	18	0.0	1	18
204	10	0.0	1	9 1
205	14	0.0	1	13 1
206	6	0.0	1	5 1
207	8	0.0	1	8
208	24	0.0	1	24
209	30	0.0	1	25 5
210	23	0.0	1	23
211	14	0.0	1	14
212	3	0.0	1	3
213	2	0.0	1	2
214	9	0.0	1	9
215	12	0.0	1	11 1
216	1	0.0	1	1
217	7	0.0	1	4 3
218	1	0.0	1	0 1
219	1	0.0	1	1
222	1	0.0	1	1
225	1	0.0	1	1
251	23	0.0	1	0 23

RUN STATISTICS FOR INPUT FILE: Plate4BLANK2/host_removal/Plate4BLANK2_R2.fastq.gz
=============================================
47226 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files Plate4BLANK2_R1_trimmed.fq.gz and Plate4BLANK2_R2_trimmed.fq.gz
file_1: Plate4BLANK2_R1_trimmed.fq.gz, file_2: Plate4BLANK2_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: Plate4BLANK2_R1_trimmed.fq.gz and Plate4BLANK2_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to Plate4BLANK2_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to Plate4BLANK2_R2_val_2.fq.gz

Total number of sequences analysed: 47226

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 260 (0.55%)


  >>> Now running FastQC on the validated data Plate4BLANK2_R1_val_1.fq.gz<<<

Started analysis of Plate4BLANK2_R1_val_1.fq.gz
Approx 5% complete for Plate4BLANK2_R1_val_1.fq.gz
Approx 10% complete for Plate4BLANK2_R1_val_1.fq.gz
Approx 15% complete for Plate4BLANK2_R1_val_1.fq.gz
Approx 20% complete for Plate4BLANK2_R1_val_1.fq.gz
Approx 25% complete for Plate4BLANK2_R1_val_1.fq.gz
Approx 30% complete for Plate4BLANK2_R1_val_1.fq.gz
Approx 35% complete for Plate4BLANK2_R1_val_1.fq.gz
Approx 40% complete for Plate4BLANK2_R1_val_1.fq.gz
Approx 45% complete for Plate4BLANK2_R1_val_1.fq.gz
Approx 50% complete for Plate4BLANK2_R1_val_1.fq.gz
Approx 55% complete for Plate4BLANK2_R1_val_1.fq.gz
Approx 60% complete for Plate4BLANK2_R1_val_1.fq.gz
Approx 65% complete for Plate4BLANK2_R1_val_1.fq.gz
Approx 70% complete for Plate4BLANK2_R1_val_1.fq.gz
Approx 75% complete for Plate4BLANK2_R1_val_1.fq.gz
Approx 80% complete for Plate4BLANK2_R1_val_1.fq.gz
Approx 85% complete for Plate4BLANK2_R1_val_1.fq.gz
Approx 90% complete for Plate4BLANK2_R1_val_1.fq.gz
Approx 95% complete for Plate4BLANK2_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data Plate4BLANK2_R2_val_2.fq.gz<<<

Started analysis of Plate4BLANK2_R2_val_2.fq.gz
Approx 5% complete for Plate4BLANK2_R2_val_2.fq.gz
Approx 10% complete for Plate4BLANK2_R2_val_2.fq.gz
Approx 15% complete for Plate4BLANK2_R2_val_2.fq.gz
Approx 20% complete for Plate4BLANK2_R2_val_2.fq.gz
Approx 25% complete for Plate4BLANK2_R2_val_2.fq.gz
Approx 30% complete for Plate4BLANK2_R2_val_2.fq.gz
Approx 35% complete for Plate4BLANK2_R2_val_2.fq.gz
Approx 40% complete for Plate4BLANK2_R2_val_2.fq.gz
Approx 45% complete for Plate4BLANK2_R2_val_2.fq.gz
Approx 50% complete for Plate4BLANK2_R2_val_2.fq.gz
Approx 55% complete for Plate4BLANK2_R2_val_2.fq.gz
Approx 60% complete for Plate4BLANK2_R2_val_2.fq.gz
Approx 65% complete for Plate4BLANK2_R2_val_2.fq.gz
Approx 70% complete for Plate4BLANK2_R2_val_2.fq.gz
Approx 75% complete for Plate4BLANK2_R2_val_2.fq.gz
Approx 80% complete for Plate4BLANK2_R2_val_2.fq.gz
Approx 85% complete for Plate4BLANK2_R2_val_2.fq.gz
Approx 90% complete for Plate4BLANK2_R2_val_2.fq.gz
Approx 95% complete for Plate4BLANK2_R2_val_2.fq.gz
Deleting both intermediate output files Plate4BLANK2_R1_trimmed.fq.gz and Plate4BLANK2_R2_trimmed.fq.gz

====================================================================================================

