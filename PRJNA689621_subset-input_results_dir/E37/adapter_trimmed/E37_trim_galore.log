Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E37/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> E37/host_removal/E37_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	5527	AGATCGGAAGAGC	652467	0.85
Nextera	1	CTGTCTCTTATA	652467	0.00
smallRNA	0	TGGAATTCTCGG	652467	0.00
Using Illumina adapter for trimming (count: 5527). Second best hit was Nextera (count: 1)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E37/adapter_trimmed/E37_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E37/host_removal/E37_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to E37_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E37/host_removal/E37_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E37/host_removal/E37_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 24.462 s (37.492 µs/read; 1.60 M reads/minute).

=== Summary ===

Total reads processed:                 652,467
Reads with adapters:                   220,773 (33.8%)
Reads written (passing filters):       652,467 (100.0%)

Total basepairs processed:   163,769,217 bp
Quality-trimmed:                 916,575 bp (0.6%)
Total written (filtered):    162,229,495 bp (99.1%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 220773 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 35.6%
  C: 19.1%
  G: 10.2%
  T: 35.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	153135	163116.8	0	153135
2	56010	40779.2	0	56010
3	3492	10194.8	0	3492
4	831	2548.7	0	831
5	49	637.2	0	49
6	41	159.3	0	41
7	1073	39.8	0	1073
8	35	10.0	0	35
9	52	2.5	0	52
10	44	0.6	1	40 4
11	12	0.2	1	9 3
12	38	0.0	1	32 6
13	26	0.0	1	23 3
14	23	0.0	1	20 3
15	31	0.0	1	24 7
16	17	0.0	1	15 2
17	32	0.0	1	26 6
18	23	0.0	1	20 3
19	14	0.0	1	12 2
20	26	0.0	1	24 2
21	19	0.0	1	16 3
22	57	0.0	1	47 10
23	69	0.0	1	65 4
24	864	0.0	1	840 24
25	158	0.0	1	140 18
26	44	0.0	1	35 9
27	50	0.0	1	40 10
28	50	0.0	1	33 17
29	34	0.0	1	25 9
30	28	0.0	1	26 2
31	24	0.0	1	18 6
32	46	0.0	1	38 8
33	32	0.0	1	26 6
34	54	0.0	1	35 19
35	26	0.0	1	20 6
36	70	0.0	1	64 6
37	249	0.0	1	239 10
38	51	0.0	1	48 3
39	11	0.0	1	8 3
40	18	0.0	1	13 5
41	61	0.0	1	48 13
42	35	0.0	1	32 3
43	288	0.0	1	277 11
44	81	0.0	1	75 6
45	101	0.0	1	89 12
46	82	0.0	1	75 7
47	58	0.0	1	42 16
48	19	0.0	1	11 8
49	24	0.0	1	15 9
50	16	0.0	1	12 4
51	29	0.0	1	23 6
52	28	0.0	1	21 7
53	33	0.0	1	24 9
54	78	0.0	1	60 18
55	37	0.0	1	29 8
56	17	0.0	1	16 1
57	40	0.0	1	37 3
58	37	0.0	1	32 5
59	49	0.0	1	49
60	32	0.0	1	30 2
61	31	0.0	1	28 3
62	11	0.0	1	8 3
63	24	0.0	1	24
64	20	0.0	1	20
65	29	0.0	1	29
66	47	0.0	1	39 8
67	14	0.0	1	11 3
68	20	0.0	1	15 5
69	139	0.0	1	132 7
70	26	0.0	1	21 5
71	27	0.0	1	27
72	66	0.0	1	61 5
73	78	0.0	1	59 19
74	74	0.0	1	68 6
75	177	0.0	1	162 15
76	603	0.0	1	583 20
77	362	0.0	1	349 13
78	142	0.0	1	140 2
79	67	0.0	1	64 3
80	46	0.0	1	44 2
81	28	0.0	1	27 1
82	26	0.0	1	24 2
83	17	0.0	1	16 1
84	14	0.0	1	13 1
85	17	0.0	1	15 2
86	12	0.0	1	9 3
87	17	0.0	1	17
88	7	0.0	1	4 3
89	16	0.0	1	15 1
90	13	0.0	1	11 2
91	9	0.0	1	7 2
92	14	0.0	1	14
93	21	0.0	1	18 3
94	190	0.0	1	186 4
95	24	0.0	1	22 2
96	16	0.0	1	14 2
97	5	0.0	1	5
98	7	0.0	1	5 2
99	3	0.0	1	3
101	1	0.0	1	1
102	2	0.0	1	2
103	2	0.0	1	0 2
104	1	0.0	1	0 1
105	3	0.0	1	3
106	2	0.0	1	2
107	9	0.0	1	9
108	3	0.0	1	3
109	4	0.0	1	4
110	3	0.0	1	3
111	2	0.0	1	2
112	5	0.0	1	5
113	6	0.0	1	5 1
114	6	0.0	1	6
115	4	0.0	1	3 1
116	12	0.0	1	10 2
117	3	0.0	1	3
118	1	0.0	1	1
119	1	0.0	1	1
120	2	0.0	1	1 1
124	2	0.0	1	2
125	2	0.0	1	2
126	5	0.0	1	4 1
127	15	0.0	1	14 1
128	2	0.0	1	2
129	1	0.0	1	0 1
131	4	0.0	1	4
132	4	0.0	1	4
133	4	0.0	1	4
134	7	0.0	1	6 1
135	1	0.0	1	0 1
136	6	0.0	1	6
143	4	0.0	1	4
144	2	0.0	1	2
146	2	0.0	1	1 1
148	2	0.0	1	2
149	1	0.0	1	1
150	1	0.0	1	1
151	1	0.0	1	1
152	2	0.0	1	2
154	2	0.0	1	1 1
156	3	0.0	1	2 1
157	1	0.0	1	1
160	1	0.0	1	0 1
162	1	0.0	1	1
163	2	0.0	1	1 1
164	1	0.0	1	1
167	1	0.0	1	1
168	3	0.0	1	2 1
169	2	0.0	1	2
170	2	0.0	1	1 1
171	1	0.0	1	0 1
174	1	0.0	1	1
179	1	0.0	1	1
182	1	0.0	1	1
184	1	0.0	1	1
185	1	0.0	1	0 1
187	1	0.0	1	1
189	2	0.0	1	2
192	1	0.0	1	1
193	1	0.0	1	1
194	1	0.0	1	1
197	1	0.0	1	1
200	2	0.0	1	2
202	2	0.0	1	2
207	2	0.0	1	2
208	5	0.0	1	5
209	1	0.0	1	1
210	2	0.0	1	2
211	1	0.0	1	0 1
212	1	0.0	1	1
215	2	0.0	1	2
217	2	0.0	1	1 1
224	1	0.0	1	0 1
250	2	0.0	1	0 2
251	16	0.0	1	0 16

RUN STATISTICS FOR INPUT FILE: E37/host_removal/E37_R1.fastq.gz
=============================================
652467 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E37/adapter_trimmed/E37_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E37/host_removal/E37_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to E37_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E37/host_removal/E37_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E37/host_removal/E37_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 26.461 s (40.555 µs/read; 1.48 M reads/minute).

=== Summary ===

Total reads processed:                 652,467
Reads with adapters:                   224,342 (34.4%)
Reads written (passing filters):       652,467 (100.0%)

Total basepairs processed:   163,769,217 bp
Quality-trimmed:               2,784,715 bp (1.7%)
Total written (filtered):    160,468,076 bp (98.0%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 224342 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 40.9%
  C: 18.1%
  G: 9.8%
  T: 31.2%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
1	169630	163116.8	0	169630
2	42875	40779.2	0	42875
3	4957	10194.8	0	4957
4	1001	2548.7	0	1001
5	51	637.2	0	51
6	46	159.3	0	46
7	1002	39.8	0	1002
8	20	10.0	0	20
9	61	2.5	0	60 1
10	30	0.6	1	25 5
11	13	0.2	1	11 2
12	34	0.0	1	32 2
13	8	0.0	1	5 3
14	23	0.0	1	22 1
15	16	0.0	1	14 2
16	16	0.0	1	14 2
17	31	0.0	1	28 3
18	6	0.0	1	3 3
19	23	0.0	1	23
20	14	0.0	1	9 5
21	4	0.0	1	4
22	50	0.0	1	49 1
23	59	0.0	1	55 4
24	956	0.0	1	920 36
25	17	0.0	1	13 4
26	51	0.0	1	45 6
27	41	0.0	1	40 1
28	33	0.0	1	31 2
29	17	0.0	1	15 2
30	60	0.0	1	56 4
31	7	0.0	1	7
32	35	0.0	1	33 2
33	37	0.0	1	34 3
34	28	0.0	1	23 5
35	46	0.0	1	42 4
36	290	0.0	1	277 13
37	73	0.0	1	71 2
38	23	0.0	1	22 1
39	48	0.0	1	48
40	33	0.0	1	31 2
41	39	0.0	1	36 3
42	75	0.0	1	73 2
43	121	0.0	1	117 4
44	163	0.0	1	160 3
45	113	0.0	1	107 6
46	67	0.0	1	65 2
47	60	0.0	1	57 3
48	33	0.0	1	32 1
49	38	0.0	1	36 2
50	27	0.0	1	27
51	24	0.0	1	23 1
52	11	0.0	1	10 1
53	26	0.0	1	25 1
54	49	0.0	1	48 1
55	19	0.0	1	19
56	53	0.0	1	50 3
57	110	0.0	1	108 2
58	92	0.0	1	92
59	16	0.0	1	16
60	70	0.0	1	69 1
61	26	0.0	1	26
62	12	0.0	1	12
63	47	0.0	1	47
64	17	0.0	1	16 1
65	16	0.0	1	15 1
66	11	0.0	1	11
67	2	0.0	1	2
68	12	0.0	1	12
69	45	0.0	1	43 2
70	13	0.0	1	13
71	11	0.0	1	11
72	36	0.0	1	35 1
73	25	0.0	1	25
74	23	0.0	1	21 2
75	34	0.0	1	31 3
76	67	0.0	1	64 3
77	49	0.0	1	45 4
78	74	0.0	1	68 6
79	115	0.0	1	106 9
80	193	0.0	1	184 9
81	113	0.0	1	107 6
82	43	0.0	1	40 3
83	21	0.0	1	15 6
84	16	0.0	1	12 4
85	6	0.0	1	6
86	7	0.0	1	4 3
87	6	0.0	1	5 1
88	7	0.0	1	6 1
89	4	0.0	1	4
90	2	0.0	1	2
91	1	0.0	1	1
92	1	0.0	1	1
93	10	0.0	1	9 1
94	137	0.0	1	135 2
95	16	0.0	1	15 1
96	10	0.0	1	5 5
97	2	0.0	1	2
98	7	0.0	1	5 2
99	1	0.0	1	1
100	2	0.0	1	2
102	2	0.0	1	2
105	2	0.0	1	1 1
106	2	0.0	1	2
107	10	0.0	1	7 3
108	4	0.0	1	4
109	7	0.0	1	4 3
110	1	0.0	1	1
111	2	0.0	1	2
112	3	0.0	1	2 1
114	4	0.0	1	3 1
116	2	0.0	1	1 1
117	1	0.0	1	1
119	1	0.0	1	1
123	1	0.0	1	1
124	3	0.0	1	3
125	1	0.0	1	1
126	5	0.0	1	4 1
127	10	0.0	1	10
128	2	0.0	1	2
131	2	0.0	1	1 1
132	1	0.0	1	1
133	3	0.0	1	2 1
134	3	0.0	1	2 1
135	1	0.0	1	1
136	1	0.0	1	0 1
143	3	0.0	1	3
147	2	0.0	1	1 1
149	2	0.0	1	2
150	1	0.0	1	0 1
152	2	0.0	1	2
153	1	0.0	1	1
154	2	0.0	1	1 1
156	2	0.0	1	2
160	1	0.0	1	1
164	1	0.0	1	1
165	1	0.0	1	1
167	3	0.0	1	2 1
168	2	0.0	1	2
174	1	0.0	1	0 1
175	2	0.0	1	1 1
178	1	0.0	1	1
180	1	0.0	1	1
181	1	0.0	1	1
185	1	0.0	1	1
187	2	0.0	1	2
192	1	0.0	1	1
194	1	0.0	1	1
197	1	0.0	1	0 1
201	1	0.0	1	1
204	1	0.0	1	1
205	1	0.0	1	1
208	1	0.0	1	1
209	1	0.0	1	1
210	4	0.0	1	3 1
211	1	0.0	1	1
215	1	0.0	1	0 1
217	1	0.0	1	1
218	1	0.0	1	0 1
251	9	0.0	1	0 9

RUN STATISTICS FOR INPUT FILE: E37/host_removal/E37_R2.fastq.gz
=============================================
652467 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E37_R1_trimmed.fq.gz and E37_R2_trimmed.fq.gz
file_1: E37_R1_trimmed.fq.gz, file_2: E37_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E37_R1_trimmed.fq.gz and E37_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E37_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E37_R2_val_2.fq.gz

Total number of sequences analysed: 652467

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 838 (0.13%)


  >>> Now running FastQC on the validated data E37_R1_val_1.fq.gz<<<

Started analysis of E37_R1_val_1.fq.gz
Approx 5% complete for E37_R1_val_1.fq.gz
Approx 10% complete for E37_R1_val_1.fq.gz
Approx 15% complete for E37_R1_val_1.fq.gz
Approx 20% complete for E37_R1_val_1.fq.gz
Approx 25% complete for E37_R1_val_1.fq.gz
Approx 30% complete for E37_R1_val_1.fq.gz
Approx 35% complete for E37_R1_val_1.fq.gz
Approx 40% complete for E37_R1_val_1.fq.gz
Approx 45% complete for E37_R1_val_1.fq.gz
Approx 50% complete for E37_R1_val_1.fq.gz
Approx 55% complete for E37_R1_val_1.fq.gz
Approx 60% complete for E37_R1_val_1.fq.gz
Approx 65% complete for E37_R1_val_1.fq.gz
Approx 70% complete for E37_R1_val_1.fq.gz
Approx 75% complete for E37_R1_val_1.fq.gz
Approx 80% complete for E37_R1_val_1.fq.gz
Approx 85% complete for E37_R1_val_1.fq.gz
Approx 90% complete for E37_R1_val_1.fq.gz
Approx 95% complete for E37_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data E37_R2_val_2.fq.gz<<<

Started analysis of E37_R2_val_2.fq.gz
Approx 5% complete for E37_R2_val_2.fq.gz
Approx 10% complete for E37_R2_val_2.fq.gz
Approx 15% complete for E37_R2_val_2.fq.gz
Approx 20% complete for E37_R2_val_2.fq.gz
Approx 25% complete for E37_R2_val_2.fq.gz
Approx 30% complete for E37_R2_val_2.fq.gz
Approx 35% complete for E37_R2_val_2.fq.gz
Approx 40% complete for E37_R2_val_2.fq.gz
Approx 45% complete for E37_R2_val_2.fq.gz
Approx 50% complete for E37_R2_val_2.fq.gz
Approx 55% complete for E37_R2_val_2.fq.gz
Approx 60% complete for E37_R2_val_2.fq.gz
Approx 65% complete for E37_R2_val_2.fq.gz
Approx 70% complete for E37_R2_val_2.fq.gz
Approx 75% complete for E37_R2_val_2.fq.gz
Approx 80% complete for E37_R2_val_2.fq.gz
Approx 85% complete for E37_R2_val_2.fq.gz
Approx 90% complete for E37_R2_val_2.fq.gz
Approx 95% complete for E37_R2_val_2.fq.gz
Deleting both intermediate output files E37_R1_trimmed.fq.gz and E37_R2_trimmed.fq.gz

====================================================================================================

