Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E41/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> E41/host_removal/E41_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	15489	AGATCGGAAGAGC	841282	1.84
smallRNA	0	TGGAATTCTCGG	841282	0.00
Nextera	0	CTGTCTCTTATA	841282	0.00
Using Illumina adapter for trimming (count: 15489). Second best hit was smallRNA (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E41/adapter_trimmed/E41_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E41/host_removal/E41_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to E41_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E41/host_removal/E41_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E41/host_removal/E41_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 31.096 s (36.962 µs/read; 1.62 M reads/minute).

=== Summary ===

Total reads processed:                 841,282
Reads with adapters:                   332,441 (39.5%)
Reads written (passing filters):       841,282 (100.0%)

Total basepairs processed:   211,161,782 bp
Quality-trimmed:               3,051,248 bp (1.4%)
Total written (filtered):    206,638,300 bp (97.9%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 332441 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 36.2%
  C: 15.6%
  G: 9.6%
  T: 38.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	211203	210320.5	0	211203
2	87872	52580.1	0	87872
3	4803	13145.0	0	4803
4	743	3286.3	0	743
5	174	821.6	0	174
6	690	205.4	0	690
7	9466	51.3	0	9466
8	244	12.8	0	244
9	262	3.2	0	261 1
10	147	0.8	1	135 12
11	84	0.2	1	78 6
12	111	0.1	1	91 20
13	71	0.0	1	54 17
14	45	0.0	1	29 16
15	70	0.0	1	49 21
16	55	0.0	1	40 15
17	91	0.0	1	71 20
18	306	0.0	1	291 15
19	201	0.0	1	183 18
20	228	0.0	1	211 17
21	351	0.0	1	340 11
22	228	0.0	1	205 23
23	384	0.0	1	372 12
24	928	0.0	1	891 37
25	212	0.0	1	175 37
26	65	0.0	1	44 21
27	101	0.0	1	67 34
28	118	0.0	1	85 33
29	83	0.0	1	52 31
30	58	0.0	1	41 17
31	47	0.0	1	33 14
32	72	0.0	1	59 13
33	71	0.0	1	53 18
34	245	0.0	1	199 46
35	51	0.0	1	40 11
36	116	0.0	1	87 29
37	241	0.0	1	215 26
38	121	0.0	1	100 21
39	31	0.0	1	21 10
40	68	0.0	1	55 13
41	160	0.0	1	128 32
42	191	0.0	1	158 33
43	1653	0.0	1	1610 43
44	352	0.0	1	328 24
45	74	0.0	1	61 13
46	42	0.0	1	29 13
47	111	0.0	1	88 23
48	59	0.0	1	41 18
49	92	0.0	1	79 13
50	42	0.0	1	28 14
51	52	0.0	1	35 17
52	52	0.0	1	30 22
53	66	0.0	1	53 13
54	154	0.0	1	105 49
55	92	0.0	1	69 23
56	49	0.0	1	40 9
57	455	0.0	1	437 18
58	327	0.0	1	317 10
59	85	0.0	1	79 6
60	51	0.0	1	39 12
61	37	0.0	1	31 6
62	33	0.0	1	26 7
63	57	0.0	1	50 7
64	46	0.0	1	38 8
65	54	0.0	1	46 8
66	85	0.0	1	67 18
67	48	0.0	1	40 8
68	70	0.0	1	57 13
69	88	0.0	1	68 20
70	59	0.0	1	53 6
71	72	0.0	1	67 5
72	120	0.0	1	102 18
73	182	0.0	1	151 31
74	276	0.0	1	246 30
75	498	0.0	1	466 32
76	1783	0.0	1	1725 58
77	1080	0.0	1	1062 18
78	437	0.0	1	424 13
79	267	0.0	1	256 11
80	169	0.0	1	163 6
81	88	0.0	1	81 7
82	67	0.0	1	66 1
83	66	0.0	1	64 2
84	37	0.0	1	35 2
85	41	0.0	1	36 5
86	54	0.0	1	46 8
87	42	0.0	1	39 3
88	34	0.0	1	32 2
89	49	0.0	1	46 3
90	23	0.0	1	21 2
91	29	0.0	1	27 2
92	30	0.0	1	29 1
93	90	0.0	1	83 7
94	725	0.0	1	710 15
95	75	0.0	1	72 3
96	42	0.0	1	37 5
97	32	0.0	1	29 3
98	15	0.0	1	14 1
99	12	0.0	1	10 2
100	6	0.0	1	6
101	3	0.0	1	3
102	8	0.0	1	7 1
103	8	0.0	1	8
104	12	0.0	1	11 1
105	8	0.0	1	6 2
106	11	0.0	1	9 2
107	23	0.0	1	19 4
108	17	0.0	1	13 4
109	15	0.0	1	11 4
110	12	0.0	1	11 1
111	23	0.0	1	21 2
112	17	0.0	1	15 2
113	14	0.0	1	13 1
114	20	0.0	1	17 3
115	12	0.0	1	10 2
116	8	0.0	1	8
117	11	0.0	1	10 1
118	6	0.0	1	6
119	3	0.0	1	2 1
120	9	0.0	1	9
121	7	0.0	1	6 1
122	3	0.0	1	3
123	8	0.0	1	7 1
124	2	0.0	1	2
125	5	0.0	1	5
126	10	0.0	1	10
127	24	0.0	1	22 2
128	11	0.0	1	10 1
129	17	0.0	1	17
130	41	0.0	1	39 2
131	4	0.0	1	4
132	3	0.0	1	3
133	10	0.0	1	9 1
134	6	0.0	1	5 1
135	7	0.0	1	7
136	20	0.0	1	18 2
137	9	0.0	1	9
138	2	0.0	1	2
139	5	0.0	1	5
140	2	0.0	1	2
141	1	0.0	1	1
142	3	0.0	1	3
143	4	0.0	1	3 1
144	2	0.0	1	2
145	1	0.0	1	1
146	3	0.0	1	2 1
147	12	0.0	1	12
148	9	0.0	1	7 2
149	9	0.0	1	8 1
150	4	0.0	1	3 1
151	5	0.0	1	5
152	3	0.0	1	2 1
153	1	0.0	1	1
154	10	0.0	1	8 2
155	7	0.0	1	6 1
156	15	0.0	1	11 4
157	4	0.0	1	4
158	4	0.0	1	4
159	4	0.0	1	4
160	7	0.0	1	7
161	1	0.0	1	1
162	1	0.0	1	1
163	2	0.0	1	2
164	1	0.0	1	1
165	1	0.0	1	1
166	3	0.0	1	3
167	7	0.0	1	6 1
168	5	0.0	1	5
169	7	0.0	1	7
170	2	0.0	1	1 1
171	1	0.0	1	0 1
172	3	0.0	1	3
173	2	0.0	1	1 1
174	13	0.0	1	12 1
175	8	0.0	1	7 1
176	4	0.0	1	4
177	2	0.0	1	2
178	3	0.0	1	3
179	2	0.0	1	1 1
181	8	0.0	1	8
182	3	0.0	1	3
183	1	0.0	1	1
184	3	0.0	1	3
185	2	0.0	1	1 1
186	1	0.0	1	0 1
187	1	0.0	1	1
188	3	0.0	1	3
189	6	0.0	1	5 1
190	7	0.0	1	7
191	7	0.0	1	7
192	4	0.0	1	4
193	6	0.0	1	5 1
194	1	0.0	1	1
195	4	0.0	1	4
196	3	0.0	1	3
197	3	0.0	1	3
198	3	0.0	1	3
199	7	0.0	1	6 1
200	5	0.0	1	5
201	2	0.0	1	2
202	3	0.0	1	3
203	9	0.0	1	9
204	1	0.0	1	1
205	7	0.0	1	7
206	9	0.0	1	9
207	5	0.0	1	4 1
208	13	0.0	1	12 1
209	10	0.0	1	8 2
210	16	0.0	1	15 1
211	4	0.0	1	4
212	3	0.0	1	2 1
213	2	0.0	1	2
215	6	0.0	1	6
216	2	0.0	1	2
217	6	0.0	1	6
218	1	0.0	1	1
219	1	0.0	1	1
220	1	0.0	1	0 1
221	1	0.0	1	1
230	1	0.0	1	1
235	2	0.0	1	1 1
245	1	0.0	1	0 1
250	1	0.0	1	0 1
251	10	0.0	1	0 10

RUN STATISTICS FOR INPUT FILE: E41/host_removal/E41_R1.fastq.gz
=============================================
841282 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E41/adapter_trimmed/E41_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E41/host_removal/E41_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to E41_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E41/host_removal/E41_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E41/host_removal/E41_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 34.129 s (40.567 µs/read; 1.48 M reads/minute).

=== Summary ===

Total reads processed:                 841,282
Reads with adapters:                   337,605 (40.1%)
Reads written (passing filters):       841,282 (100.0%)

Total basepairs processed:   211,161,782 bp
Quality-trimmed:               7,063,191 bp (3.3%)
Total written (filtered):    202,922,436 bp (96.1%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 337605 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 42.0%
  C: 14.7%
  G: 9.5%
  T: 33.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	242840	210320.5	0	242840
2	64330	52580.1	0	64330
3	6260	13145.0	0	6260
4	937	3286.3	0	937
5	226	821.6	0	226
6	579	205.4	0	579
7	8945	51.3	0	8945
8	105	12.8	0	105
9	236	3.2	0	235 1
10	179	0.8	1	161 18
11	55	0.2	1	40 15
12	107	0.1	1	91 16
13	28	0.0	1	21 7
14	98	0.0	1	82 16
15	42	0.0	1	33 9
16	48	0.0	1	41 7
17	157	0.0	1	142 15
18	98	0.0	1	85 13
19	341	0.0	1	318 23
20	224	0.0	1	209 15
21	38	0.0	1	28 10
22	40	0.0	1	33 7
23	553	0.0	1	516 37
24	1023	0.0	1	963 60
25	27	0.0	1	23 4
26	75	0.0	1	66 9
27	80	0.0	1	68 12
28	87	0.0	1	75 12
29	53	0.0	1	43 10
30	178	0.0	1	160 18
31	41	0.0	1	32 9
32	184	0.0	1	167 17
33	81	0.0	1	72 9
34	171	0.0	1	159 12
35	57	0.0	1	56 1
36	47	0.0	1	44 3
37	178	0.0	1	171 7
38	52	0.0	1	48 4
39	65	0.0	1	61 4
40	282	0.0	1	264 18
41	89	0.0	1	82 7
42	211	0.0	1	204 7
43	715	0.0	1	695 20
44	768	0.0	1	746 22
45	110	0.0	1	101 9
46	110	0.0	1	105 5
47	136	0.0	1	125 11
48	111	0.0	1	104 7
49	92	0.0	1	86 6
50	62	0.0	1	60 2
51	65	0.0	1	60 5
52	41	0.0	1	41
53	85	0.0	1	83 2
54	180	0.0	1	177 3
55	71	0.0	1	68 3
56	147	0.0	1	144 3
57	479	0.0	1	463 16
58	210	0.0	1	208 2
59	55	0.0	1	53 2
60	122	0.0	1	116 6
61	74	0.0	1	74
62	48	0.0	1	48
63	128	0.0	1	128
64	71	0.0	1	70 1
65	39	0.0	1	38 1
66	27	0.0	1	24 3
67	16	0.0	1	16
68	29	0.0	1	27 2
69	28	0.0	1	27 1
70	19	0.0	1	18 1
71	20	0.0	1	20
72	46	0.0	1	45 1
73	46	0.0	1	45 1
74	71	0.0	1	67 4
75	89	0.0	1	89
76	140	0.0	1	140
77	199	0.0	1	192 7
78	292	0.0	1	284 8
79	385	0.0	1	366 19
80	803	0.0	1	786 17
81	383	0.0	1	373 10
82	156	0.0	1	148 8
83	105	0.0	1	100 5
84	48	0.0	1	46 2
85	35	0.0	1	35
86	42	0.0	1	37 5
87	23	0.0	1	20 3
88	13	0.0	1	11 2
89	18	0.0	1	16 2
90	8	0.0	1	7 1
91	13	0.0	1	11 2
92	11	0.0	1	11
93	31	0.0	1	28 3
94	519	0.0	1	512 7
95	46	0.0	1	44 2
96	17	0.0	1	15 2
97	21	0.0	1	20 1
98	14	0.0	1	14
99	2	0.0	1	2
100	1	0.0	1	0 1
101	4	0.0	1	3 1
102	5	0.0	1	5
103	4	0.0	1	4
104	3	0.0	1	2 1
105	2	0.0	1	1 1
106	6	0.0	1	2 4
107	10	0.0	1	7 3
108	4	0.0	1	3 1
109	6	0.0	1	3 3
110	5	0.0	1	3 2
111	20	0.0	1	18 2
112	6	0.0	1	6
113	8	0.0	1	6 2
114	14	0.0	1	7 7
115	2	0.0	1	2
116	10	0.0	1	6 4
117	2	0.0	1	1 1
118	2	0.0	1	2
119	2	0.0	1	2
120	2	0.0	1	2
121	2	0.0	1	1 1
122	3	0.0	1	2 1
123	2	0.0	1	0 2
124	3	0.0	1	2 1
125	2	0.0	1	2
126	7	0.0	1	4 3
127	12	0.0	1	12
128	10	0.0	1	8 2
129	9	0.0	1	9
130	45	0.0	1	40 5
131	4	0.0	1	3 1
132	2	0.0	1	2
133	6	0.0	1	3 3
134	9	0.0	1	7 2
135	5	0.0	1	5
136	12	0.0	1	11 1
137	4	0.0	1	3 1
138	2	0.0	1	1 1
139	7	0.0	1	6 1
140	1	0.0	1	0 1
141	1	0.0	1	0 1
143	3	0.0	1	3
144	1	0.0	1	1
145	1	0.0	1	1
146	3	0.0	1	2 1
147	8	0.0	1	6 2
148	2	0.0	1	1 1
149	9	0.0	1	9
150	2	0.0	1	2
151	4	0.0	1	2 2
152	1	0.0	1	1
153	1	0.0	1	1
154	7	0.0	1	7
155	4	0.0	1	4
156	3	0.0	1	3
157	1	0.0	1	1
158	2	0.0	1	2
160	3	0.0	1	3
161	3	0.0	1	2 1
162	4	0.0	1	3 1
163	1	0.0	1	1
165	4	0.0	1	4
166	2	0.0	1	2
167	4	0.0	1	4
168	4	0.0	1	3 1
169	3	0.0	1	3
170	2	0.0	1	2
172	1	0.0	1	1
174	7	0.0	1	6 1
175	4	0.0	1	4
176	2	0.0	1	2
177	2	0.0	1	2
178	2	0.0	1	2
180	2	0.0	1	2
181	7	0.0	1	6 1
182	3	0.0	1	3
184	1	0.0	1	0 1
185	1	0.0	1	1
186	1	0.0	1	1
187	1	0.0	1	1
188	2	0.0	1	2
189	4	0.0	1	4
190	6	0.0	1	6
191	4	0.0	1	4
193	1	0.0	1	1
195	5	0.0	1	5
196	1	0.0	1	1
197	9	0.0	1	8 1
198	2	0.0	1	2
199	4	0.0	1	4
200	3	0.0	1	3
201	3	0.0	1	3
202	5	0.0	1	5
203	5	0.0	1	5
204	2	0.0	1	2
205	7	0.0	1	6 1
206	12	0.0	1	12
207	8	0.0	1	8
208	8	0.0	1	7 1
209	10	0.0	1	9 1
210	8	0.0	1	8
211	3	0.0	1	3
212	5	0.0	1	4 1
213	2	0.0	1	2
214	2	0.0	1	2
215	4	0.0	1	2 2
216	1	0.0	1	1
217	7	0.0	1	6 1
218	1	0.0	1	1
220	1	0.0	1	1
225	1	0.0	1	1
251	6	0.0	1	0 6

RUN STATISTICS FOR INPUT FILE: E41/host_removal/E41_R2.fastq.gz
=============================================
841282 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E41_R1_trimmed.fq.gz and E41_R2_trimmed.fq.gz
file_1: E41_R1_trimmed.fq.gz, file_2: E41_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E41_R1_trimmed.fq.gz and E41_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E41_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E41_R2_val_2.fq.gz

Total number of sequences analysed: 841282

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1030 (0.12%)


  >>> Now running FastQC on the validated data E41_R1_val_1.fq.gz<<<

Started analysis of E41_R1_val_1.fq.gz
Approx 5% complete for E41_R1_val_1.fq.gz
Approx 10% complete for E41_R1_val_1.fq.gz
Approx 15% complete for E41_R1_val_1.fq.gz
Approx 20% complete for E41_R1_val_1.fq.gz
Approx 25% complete for E41_R1_val_1.fq.gz
Approx 30% complete for E41_R1_val_1.fq.gz
Approx 35% complete for E41_R1_val_1.fq.gz
Approx 40% complete for E41_R1_val_1.fq.gz
Approx 45% complete for E41_R1_val_1.fq.gz
Approx 50% complete for E41_R1_val_1.fq.gz
Approx 55% complete for E41_R1_val_1.fq.gz
Approx 60% complete for E41_R1_val_1.fq.gz
Approx 65% complete for E41_R1_val_1.fq.gz
Approx 70% complete for E41_R1_val_1.fq.gz
Approx 75% complete for E41_R1_val_1.fq.gz
Approx 80% complete for E41_R1_val_1.fq.gz
Approx 85% complete for E41_R1_val_1.fq.gz
Approx 90% complete for E41_R1_val_1.fq.gz
Approx 95% complete for E41_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data E41_R2_val_2.fq.gz<<<

Started analysis of E41_R2_val_2.fq.gz
Approx 5% complete for E41_R2_val_2.fq.gz
Approx 10% complete for E41_R2_val_2.fq.gz
Approx 15% complete for E41_R2_val_2.fq.gz
Approx 20% complete for E41_R2_val_2.fq.gz
Approx 25% complete for E41_R2_val_2.fq.gz
Approx 30% complete for E41_R2_val_2.fq.gz
Approx 35% complete for E41_R2_val_2.fq.gz
Approx 40% complete for E41_R2_val_2.fq.gz
Approx 45% complete for E41_R2_val_2.fq.gz
Approx 50% complete for E41_R2_val_2.fq.gz
Approx 55% complete for E41_R2_val_2.fq.gz
Approx 60% complete for E41_R2_val_2.fq.gz
Approx 65% complete for E41_R2_val_2.fq.gz
Approx 70% complete for E41_R2_val_2.fq.gz
Approx 75% complete for E41_R2_val_2.fq.gz
Approx 80% complete for E41_R2_val_2.fq.gz
Approx 85% complete for E41_R2_val_2.fq.gz
Approx 90% complete for E41_R2_val_2.fq.gz
Approx 95% complete for E41_R2_val_2.fq.gz
Deleting both intermediate output files E41_R1_trimmed.fq.gz and E41_R2_trimmed.fq.gz

====================================================================================================

