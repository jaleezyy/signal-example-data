Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E46/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> E46/host_removal/E46_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	6661	AGATCGGAAGAGC	945340	0.70
smallRNA	0	TGGAATTCTCGG	945340	0.00
Nextera	0	CTGTCTCTTATA	945340	0.00
Using Illumina adapter for trimming (count: 6661). Second best hit was smallRNA (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E46/adapter_trimmed/E46_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E46/host_removal/E46_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to E46_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E46/host_removal/E46_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E46/host_removal/E46_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 42.508 s (44.966 µs/read; 1.33 M reads/minute).

=== Summary ===

Total reads processed:                 945,340
Reads with adapters:                   339,738 (35.9%)
Reads written (passing filters):       945,340 (100.0%)

Total basepairs processed:   237,280,340 bp
Quality-trimmed:               1,771,067 bp (0.7%)
Total written (filtered):    234,553,497 bp (98.9%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 339738 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 36.9%
  C: 17.2%
  G: 8.9%
  T: 36.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	229909	236335.0	0	229909
2	93029	59083.8	0	93029
3	4727	14770.9	0	4727
4	1009	3692.7	0	1009
5	950	923.2	0	950
6	319	230.8	0	319
7	2081	57.7	0	2081
8	71	14.4	0	71
9	89	3.6	0	89
10	80	0.9	1	70 10
11	41	0.2	1	30 11
12	54	0.1	1	45 9
13	29	0.0	1	17 12
14	18	0.0	1	13 5
15	30	0.0	1	19 11
16	13	0.0	1	5 8
17	31	0.0	1	18 13
18	24	0.0	1	18 6
19	21	0.0	1	15 6
20	141	0.0	1	134 7
21	213	0.0	1	207 6
22	62	0.0	1	53 9
23	33	0.0	1	26 7
24	149	0.0	1	141 8
25	66	0.0	1	41 25
26	35	0.0	1	17 18
27	43	0.0	1	23 20
28	75	0.0	1	53 22
29	47	0.0	1	24 23
30	28	0.0	1	22 6
31	38	0.0	1	29 9
32	51	0.0	1	32 19
33	33	0.0	1	17 16
34	87	0.0	1	61 26
35	42	0.0	1	39 3
36	54	0.0	1	45 9
37	204	0.0	1	188 16
38	37	0.0	1	33 4
39	62	0.0	1	43 19
40	65	0.0	1	48 17
41	67	0.0	1	55 12
42	39	0.0	1	26 13
43	36	0.0	1	26 10
44	17	0.0	1	12 5
45	30	0.0	1	19 11
46	44	0.0	1	30 14
47	83	0.0	1	62 21
48	43	0.0	1	34 9
49	49	0.0	1	45 4
50	31	0.0	1	25 6
51	38	0.0	1	33 5
52	45	0.0	1	34 11
53	53	0.0	1	36 17
54	101	0.0	1	70 31
55	43	0.0	1	29 14
56	30	0.0	1	19 11
57	46	0.0	1	38 8
58	37	0.0	1	30 7
59	71	0.0	1	67 4
60	45	0.0	1	37 8
61	115	0.0	1	108 7
62	74	0.0	1	71 3
63	43	0.0	1	39 4
64	20	0.0	1	16 4
65	38	0.0	1	33 5
66	52	0.0	1	49 3
67	29	0.0	1	22 7
68	51	0.0	1	44 7
69	151	0.0	1	130 21
70	60	0.0	1	48 12
71	54	0.0	1	48 6
72	107	0.0	1	99 8
73	144	0.0	1	120 24
74	163	0.0	1	143 20
75	286	0.0	1	257 29
76	904	0.0	1	866 38
77	589	0.0	1	573 16
78	256	0.0	1	248 8
79	130	0.0	1	124 6
80	86	0.0	1	84 2
81	52	0.0	1	50 2
82	39	0.0	1	38 1
83	35	0.0	1	33 2
84	26	0.0	1	24 2
85	29	0.0	1	27 2
86	40	0.0	1	38 2
87	19	0.0	1	17 2
88	30	0.0	1	27 3
89	22	0.0	1	17 5
90	18	0.0	1	18
91	19	0.0	1	18 1
92	32	0.0	1	31 1
93	40	0.0	1	33 7
94	290	0.0	1	280 10
95	31	0.0	1	27 4
96	26	0.0	1	21 5
97	17	0.0	1	17
98	24	0.0	1	21 3
99	14	0.0	1	11 3
100	11	0.0	1	10 1
101	13	0.0	1	12 1
102	6	0.0	1	5 1
103	6	0.0	1	5 1
104	10	0.0	1	8 2
105	4	0.0	1	3 1
106	9	0.0	1	8 1
107	37	0.0	1	34 3
108	13	0.0	1	13
109	8	0.0	1	8
110	9	0.0	1	9
111	1	0.0	1	0 1
112	10	0.0	1	7 3
113	12	0.0	1	11 1
114	18	0.0	1	17 1
115	9	0.0	1	8 1
116	12	0.0	1	9 3
117	7	0.0	1	7
118	3	0.0	1	2 1
119	4	0.0	1	3 1
120	4	0.0	1	4
121	4	0.0	1	3 1
122	1	0.0	1	1
123	3	0.0	1	2 1
124	3	0.0	1	3
125	5	0.0	1	5
126	3	0.0	1	3
127	13	0.0	1	12 1
128	6	0.0	1	6
129	4	0.0	1	4
131	3	0.0	1	3
132	4	0.0	1	3 1
133	4	0.0	1	2 2
134	6	0.0	1	5 1
135	3	0.0	1	3
136	7	0.0	1	6 1
137	3	0.0	1	3
138	5	0.0	1	3 2
140	3	0.0	1	1 2
141	1	0.0	1	1
142	2	0.0	1	2
143	1	0.0	1	0 1
144	2	0.0	1	1 1
145	2	0.0	1	2
146	5	0.0	1	4 1
147	9	0.0	1	9
148	1	0.0	1	1
149	5	0.0	1	4 1
150	3	0.0	1	2 1
151	1	0.0	1	1
152	3	0.0	1	3
153	1	0.0	1	1
154	8	0.0	1	8
155	3	0.0	1	3
156	15	0.0	1	15
157	6	0.0	1	6
158	5	0.0	1	5
159	2	0.0	1	2
160	4	0.0	1	4
161	1	0.0	1	1
162	4	0.0	1	4
163	2	0.0	1	2
164	1	0.0	1	1
165	1	0.0	1	1
166	6	0.0	1	6
167	6	0.0	1	6
168	5	0.0	1	4 1
169	7	0.0	1	7
170	3	0.0	1	2 1
171	2	0.0	1	1 1
172	6	0.0	1	6
173	3	0.0	1	2 1
174	4	0.0	1	3 1
175	11	0.0	1	11
176	2	0.0	1	1 1
177	5	0.0	1	4 1
178	3	0.0	1	2 1
180	1	0.0	1	1
181	3	0.0	1	3
182	2	0.0	1	2
183	2	0.0	1	2
184	1	0.0	1	0 1
185	2	0.0	1	2
187	3	0.0	1	3
188	2	0.0	1	2
189	1	0.0	1	1
190	1	0.0	1	1
191	2	0.0	1	2
192	2	0.0	1	2
194	3	0.0	1	2 1
195	3	0.0	1	3
196	1	0.0	1	1
197	7	0.0	1	6 1
198	1	0.0	1	1
199	1	0.0	1	1
200	3	0.0	1	3
202	1	0.0	1	1
203	4	0.0	1	4
204	1	0.0	1	1
205	3	0.0	1	3
206	2	0.0	1	2
207	1	0.0	1	1
208	9	0.0	1	9
209	2	0.0	1	2
210	4	0.0	1	4
211	2	0.0	1	2
214	2	0.0	1	2
215	8	0.0	1	7 1
216	1	0.0	1	1
217	1	0.0	1	1
218	1	0.0	1	1
220	1	0.0	1	0 1
222	1	0.0	1	0 1
224	1	0.0	1	1
230	1	0.0	1	0 1
235	1	0.0	1	1
237	1	0.0	1	1
244	1	0.0	1	0 1
245	1	0.0	1	0 1
250	3	0.0	1	0 3
251	14	0.0	1	0 14

RUN STATISTICS FOR INPUT FILE: E46/host_removal/E46_R1.fastq.gz
=============================================
945340 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E46/adapter_trimmed/E46_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E46/host_removal/E46_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to E46_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E46/host_removal/E46_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E46/host_removal/E46_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 44.868 s (47.463 µs/read; 1.26 M reads/minute).

=== Summary ===

Total reads processed:                 945,340
Reads with adapters:                   348,420 (36.9%)
Reads written (passing filters):       945,340 (100.0%)

Total basepairs processed:   237,280,340 bp
Quality-trimmed:               5,088,427 bp (2.1%)
Total written (filtered):    231,442,576 bp (97.5%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 348420 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 42.5%
  C: 16.1%
  G: 8.8%
  T: 32.5%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
1	263548	236335.0	0	263548
2	68452	59083.8	0	68452
3	6958	14770.9	0	6958
4	1673	3692.7	0	1673
5	680	923.2	0	680
6	255	230.8	0	255
7	1935	57.7	0	1935
8	20	14.4	0	20
9	84	3.6	0	84
10	63	0.9	1	58 5
11	29	0.2	1	24 5
12	45	0.1	1	40 5
13	8	0.0	1	7 1
14	30	0.0	1	24 6
15	9	0.0	1	8 1
16	19	0.0	1	17 2
17	39	0.0	1	33 6
18	17	0.0	1	15 2
19	67	0.0	1	62 5
20	152	0.0	1	146 6
21	30	0.0	1	24 6
22	47	0.0	1	44 3
23	30	0.0	1	26 4
24	151	0.0	1	137 14
25	18	0.0	1	12 6
26	32	0.0	1	25 7
27	22	0.0	1	19 3
28	36	0.0	1	32 4
29	17	0.0	1	13 4
30	63	0.0	1	50 13
31	14	0.0	1	12 2
32	46	0.0	1	39 7
33	11	0.0	1	9 2
34	44	0.0	1	40 4
35	43	0.0	1	40 3
36	155	0.0	1	146 9
37	72	0.0	1	66 6
38	49	0.0	1	42 7
39	15	0.0	1	14 1
40	22	0.0	1	18 4
41	35	0.0	1	32 3
42	19	0.0	1	16 3
43	32	0.0	1	31 1
44	33	0.0	1	33
45	53	0.0	1	50 3
46	78	0.0	1	73 5
47	78	0.0	1	75 3
48	55	0.0	1	52 3
49	51	0.0	1	51
50	31	0.0	1	30 1
51	37	0.0	1	33 4
52	14	0.0	1	14
53	42	0.0	1	38 4
54	84	0.0	1	80 4
55	22	0.0	1	22
56	66	0.0	1	61 5
57	146	0.0	1	142 4
58	101	0.0	1	97 4
59	29	0.0	1	28 1
60	75	0.0	1	73 2
61	44	0.0	1	43 1
62	41	0.0	1	41
63	52	0.0	1	49 3
64	31	0.0	1	31
65	20	0.0	1	20
66	14	0.0	1	14
67	13	0.0	1	12 1
68	18	0.0	1	17 1
69	39	0.0	1	36 3
70	13	0.0	1	13
71	12	0.0	1	12
72	23	0.0	1	20 3
73	26	0.0	1	25 1
74	34	0.0	1	32 2
75	41	0.0	1	39 2
76	70	0.0	1	66 4
77	93	0.0	1	90 3
78	140	0.0	1	133 7
79	199	0.0	1	182 17
80	385	0.0	1	372 13
81	173	0.0	1	163 10
82	77	0.0	1	77
83	58	0.0	1	53 5
84	26	0.0	1	23 3
85	29	0.0	1	27 2
86	15	0.0	1	14 1
87	12	0.0	1	9 3
88	14	0.0	1	13 1
89	11	0.0	1	10 1
90	7	0.0	1	6 1
91	7	0.0	1	7
92	7	0.0	1	7
93	16	0.0	1	14 2
94	197	0.0	1	191 6
95	18	0.0	1	16 2
96	9	0.0	1	6 3
97	4	0.0	1	4
98	10	0.0	1	9 1
99	2	0.0	1	1 1
100	8	0.0	1	7 1
101	7	0.0	1	6 1
102	1	0.0	1	1
103	4	0.0	1	4
104	2	0.0	1	1 1
105	1	0.0	1	0 1
106	3	0.0	1	3
107	22	0.0	1	20 2
108	11	0.0	1	7 4
109	9	0.0	1	3 6
110	4	0.0	1	3 1
111	3	0.0	1	2 1
112	5	0.0	1	3 2
113	5	0.0	1	2 3
114	11	0.0	1	9 2
115	4	0.0	1	3 1
116	8	0.0	1	5 3
117	7	0.0	1	7
118	2	0.0	1	1 1
119	2	0.0	1	1 1
120	2	0.0	1	2
122	1	0.0	1	1
123	1	0.0	1	1
124	1	0.0	1	1
126	1	0.0	1	1
127	8	0.0	1	7 1
128	3	0.0	1	2 1
129	5	0.0	1	4 1
130	1	0.0	1	1
131	3	0.0	1	2 1
132	2	0.0	1	1 1
133	6	0.0	1	4 2
134	3	0.0	1	2 1
135	2	0.0	1	1 1
136	1	0.0	1	1
137	1	0.0	1	1
139	1	0.0	1	1
140	1	0.0	1	1
144	1	0.0	1	1
146	1	0.0	1	0 1
147	9	0.0	1	9
148	1	0.0	1	1
149	5	0.0	1	5
151	1	0.0	1	1
152	1	0.0	1	0 1
153	2	0.0	1	2
154	5	0.0	1	5
155	4	0.0	1	4
156	16	0.0	1	16
157	2	0.0	1	2
158	6	0.0	1	6
159	2	0.0	1	2
160	3	0.0	1	3
161	1	0.0	1	1
162	1	0.0	1	1
163	1	0.0	1	1
164	1	0.0	1	1
165	1	0.0	1	1
166	3	0.0	1	2 1
167	4	0.0	1	4
168	1	0.0	1	1
169	2	0.0	1	2
170	3	0.0	1	3
172	2	0.0	1	1 1
174	1	0.0	1	0 1
175	10	0.0	1	10
176	3	0.0	1	3
177	1	0.0	1	1
180	2	0.0	1	2
183	1	0.0	1	1
184	2	0.0	1	2
185	2	0.0	1	2
187	1	0.0	1	1
188	1	0.0	1	1
189	2	0.0	1	2
190	1	0.0	1	1
191	1	0.0	1	1
193	2	0.0	1	2
195	1	0.0	1	1
197	2	0.0	1	2
198	3	0.0	1	3
199	2	0.0	1	2
201	2	0.0	1	2
202	1	0.0	1	1
203	1	0.0	1	1
205	1	0.0	1	1
206	1	0.0	1	1
208	11	0.0	1	11
209	4	0.0	1	3 1
210	6	0.0	1	6
211	1	0.0	1	1
214	2	0.0	1	2
215	9	0.0	1	6 3
217	3	0.0	1	2 1
224	1	0.0	1	1
251	17	0.0	1	0 17

RUN STATISTICS FOR INPUT FILE: E46/host_removal/E46_R2.fastq.gz
=============================================
945340 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E46_R1_trimmed.fq.gz and E46_R2_trimmed.fq.gz
file_1: E46_R1_trimmed.fq.gz, file_2: E46_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E46_R1_trimmed.fq.gz and E46_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E46_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E46_R2_val_2.fq.gz

Total number of sequences analysed: 945340

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1303 (0.14%)


  >>> Now running FastQC on the validated data E46_R1_val_1.fq.gz<<<

Started analysis of E46_R1_val_1.fq.gz
Approx 5% complete for E46_R1_val_1.fq.gz
Approx 10% complete for E46_R1_val_1.fq.gz
Approx 15% complete for E46_R1_val_1.fq.gz
Approx 20% complete for E46_R1_val_1.fq.gz
Approx 25% complete for E46_R1_val_1.fq.gz
Approx 30% complete for E46_R1_val_1.fq.gz
Approx 35% complete for E46_R1_val_1.fq.gz
Approx 40% complete for E46_R1_val_1.fq.gz
Approx 45% complete for E46_R1_val_1.fq.gz
Approx 50% complete for E46_R1_val_1.fq.gz
Approx 55% complete for E46_R1_val_1.fq.gz
Approx 60% complete for E46_R1_val_1.fq.gz
Approx 65% complete for E46_R1_val_1.fq.gz
Approx 70% complete for E46_R1_val_1.fq.gz
Approx 75% complete for E46_R1_val_1.fq.gz
Approx 80% complete for E46_R1_val_1.fq.gz
Approx 85% complete for E46_R1_val_1.fq.gz
Approx 90% complete for E46_R1_val_1.fq.gz
Approx 95% complete for E46_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data E46_R2_val_2.fq.gz<<<

Started analysis of E46_R2_val_2.fq.gz
Approx 5% complete for E46_R2_val_2.fq.gz
Approx 10% complete for E46_R2_val_2.fq.gz
Approx 15% complete for E46_R2_val_2.fq.gz
Approx 20% complete for E46_R2_val_2.fq.gz
Approx 25% complete for E46_R2_val_2.fq.gz
Approx 30% complete for E46_R2_val_2.fq.gz
Approx 35% complete for E46_R2_val_2.fq.gz
Approx 40% complete for E46_R2_val_2.fq.gz
Approx 45% complete for E46_R2_val_2.fq.gz
Approx 50% complete for E46_R2_val_2.fq.gz
Approx 55% complete for E46_R2_val_2.fq.gz
Approx 60% complete for E46_R2_val_2.fq.gz
Approx 65% complete for E46_R2_val_2.fq.gz
Approx 70% complete for E46_R2_val_2.fq.gz
Approx 75% complete for E46_R2_val_2.fq.gz
Approx 80% complete for E46_R2_val_2.fq.gz
Approx 85% complete for E46_R2_val_2.fq.gz
Approx 90% complete for E46_R2_val_2.fq.gz
Approx 95% complete for E46_R2_val_2.fq.gz
Deleting both intermediate output files E46_R1_trimmed.fq.gz and E46_R2_trimmed.fq.gz

====================================================================================================

