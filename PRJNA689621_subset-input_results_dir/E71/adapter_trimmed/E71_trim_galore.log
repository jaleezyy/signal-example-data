Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E71/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> E71/host_removal/E71_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	10297	AGATCGGAAGAGC	1000000	1.03
Nextera	0	CTGTCTCTTATA	1000000	0.00
smallRNA	0	TGGAATTCTCGG	1000000	0.00
Using Illumina adapter for trimming (count: 10297). Second best hit was Nextera (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E71/adapter_trimmed/E71_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E71/host_removal/E71_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to E71_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E71/host_removal/E71_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E71/host_removal/E71_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 39.239 s (38.438 µs/read; 1.56 M reads/minute).

=== Summary ===

Total reads processed:               1,020,857
Reads with adapters:                   375,636 (36.8%)
Reads written (passing filters):     1,020,857 (100.0%)

Total basepairs processed:   256,235,107 bp
Quality-trimmed:               2,502,338 bp (1.0%)
Total written (filtered):    252,513,450 bp (98.5%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 375636 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 36.2%
  C: 16.5%
  G: 9.4%
  T: 37.9%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	252309	255214.2	0	252309
2	99224	63803.6	0	99224
3	5515	15950.9	0	5515
4	734	3987.7	0	734
5	255	996.9	0	255
6	149	249.2	0	149
7	5435	62.3	0	5435
8	141	15.6	0	141
9	167	3.9	0	166 1
10	82	1.0	1	65 17
11	61	0.2	1	50 11
12	75	0.1	1	58 17
13	55	0.0	1	41 14
14	32	0.0	1	22 10
15	164	0.0	1	149 15
16	144	0.0	1	135 9
17	89	0.0	1	74 15
18	52	0.0	1	39 13
19	32	0.0	1	26 6
20	119	0.0	1	108 11
21	204	0.0	1	187 17
22	58	0.0	1	43 15
23	49	0.0	1	36 13
24	475	0.0	1	443 32
25	191	0.0	1	162 29
26	175	0.0	1	155 20
27	732	0.0	1	683 49
28	169	0.0	1	127 42
29	91	0.0	1	65 26
30	60	0.0	1	45 15
31	79	0.0	1	53 26
32	80	0.0	1	63 17
33	62	0.0	1	41 21
34	107	0.0	1	75 32
35	79	0.0	1	65 14
36	264	0.0	1	236 28
37	128	0.0	1	114 14
38	82	0.0	1	75 7
39	266	0.0	1	245 21
40	90	0.0	1	78 12
41	111	0.0	1	90 21
42	39	0.0	1	29 10
43	105	0.0	1	89 16
44	29	0.0	1	19 10
45	33	0.0	1	22 11
46	45	0.0	1	33 12
47	85	0.0	1	60 25
48	71	0.0	1	47 24
49	88	0.0	1	84 4
50	88	0.0	1	76 12
51	57	0.0	1	48 9
52	79	0.0	1	56 23
53	57	0.0	1	42 15
54	121	0.0	1	88 33
55	86	0.0	1	65 21
56	40	0.0	1	28 12
57	55	0.0	1	50 5
58	48	0.0	1	40 8
59	134	0.0	1	127 7
60	42	0.0	1	39 3
61	39	0.0	1	34 5
62	50	0.0	1	39 11
63	50	0.0	1	44 6
64	45	0.0	1	41 4
65	108	0.0	1	100 8
66	85	0.0	1	71 14
67	47	0.0	1	37 10
68	68	0.0	1	55 13
69	78	0.0	1	63 15
70	45	0.0	1	37 8
71	78	0.0	1	71 7
72	114	0.0	1	105 9
73	177	0.0	1	154 23
74	231	0.0	1	201 30
75	362	0.0	1	317 45
76	1178	0.0	1	1129 49
77	743	0.0	1	730 13
78	342	0.0	1	333 9
79	229	0.0	1	218 11
80	125	0.0	1	122 3
81	84	0.0	1	82 2
82	63	0.0	1	57 6
83	65	0.0	1	63 2
84	47	0.0	1	44 3
85	47	0.0	1	46 1
86	39	0.0	1	32 7
87	50	0.0	1	46 4
88	51	0.0	1	48 3
89	27	0.0	1	24 3
90	26	0.0	1	22 4
91	17	0.0	1	16 1
92	21	0.0	1	19 2
93	47	0.0	1	39 8
94	216	0.0	1	207 9
95	46	0.0	1	44 2
96	24	0.0	1	24
97	14	0.0	1	13 1
98	19	0.0	1	16 3
99	12	0.0	1	10 2
100	11	0.0	1	11
101	12	0.0	1	12
102	28	0.0	1	26 2
103	6	0.0	1	5 1
104	7	0.0	1	7
105	15	0.0	1	13 2
106	17	0.0	1	15 2
107	22	0.0	1	20 2
108	20	0.0	1	18 2
109	11	0.0	1	10 1
110	12	0.0	1	9 3
111	11	0.0	1	11
112	15	0.0	1	13 2
113	19	0.0	1	16 3
114	19	0.0	1	18 1
115	15	0.0	1	14 1
116	19	0.0	1	17 2
117	7	0.0	1	7
118	11	0.0	1	10 1
119	5	0.0	1	3 2
120	1	0.0	1	1
121	2	0.0	1	2
122	6	0.0	1	5 1
123	9	0.0	1	7 2
124	10	0.0	1	8 2
125	3	0.0	1	2 1
126	7	0.0	1	7
127	25	0.0	1	22 3
128	9	0.0	1	8 1
129	14	0.0	1	12 2
130	10	0.0	1	10
131	3	0.0	1	2 1
132	2	0.0	1	2
133	5	0.0	1	5
134	9	0.0	1	8 1
135	11	0.0	1	8 3
136	9	0.0	1	9
137	2	0.0	1	1 1
138	4	0.0	1	4
139	4	0.0	1	3 1
140	2	0.0	1	0 2
141	4	0.0	1	4
142	4	0.0	1	2 2
143	9	0.0	1	9
144	4	0.0	1	2 2
145	3	0.0	1	1 2
146	2	0.0	1	2
147	13	0.0	1	13
148	3	0.0	1	2 1
149	11	0.0	1	10 1
150	5	0.0	1	5
151	5	0.0	1	4 1
152	2	0.0	1	2
153	10	0.0	1	9 1
154	12	0.0	1	10 2
155	6	0.0	1	6
156	14	0.0	1	13 1
157	4	0.0	1	4
158	2	0.0	1	1 1
159	5	0.0	1	5
160	7	0.0	1	6 1
161	2	0.0	1	1 1
162	3	0.0	1	3
163	2	0.0	1	1 1
164	3	0.0	1	2 1
165	4	0.0	1	3 1
166	7	0.0	1	7
167	9	0.0	1	7 2
168	9	0.0	1	8 1
169	5	0.0	1	4 1
170	2	0.0	1	2
171	1	0.0	1	1
173	6	0.0	1	6
174	9	0.0	1	7 2
175	9	0.0	1	9
176	3	0.0	1	2 1
177	1	0.0	1	1
178	2	0.0	1	2
179	2	0.0	1	2
180	2	0.0	1	2
181	5	0.0	1	4 1
182	8	0.0	1	8
183	5	0.0	1	5
184	3	0.0	1	2 1
185	2	0.0	1	2
186	2	0.0	1	1 1
187	1	0.0	1	1
188	6	0.0	1	5 1
189	6	0.0	1	5 1
190	2	0.0	1	2
191	3	0.0	1	2 1
192	2	0.0	1	1 1
193	4	0.0	1	4
194	6	0.0	1	4 2
195	7	0.0	1	7
196	2	0.0	1	2
197	2	0.0	1	2
198	4	0.0	1	3 1
199	2	0.0	1	2
201	5	0.0	1	4 1
202	3	0.0	1	3
203	8	0.0	1	8
204	8	0.0	1	8
205	7	0.0	1	5 2
206	5	0.0	1	5
207	7	0.0	1	7
208	10	0.0	1	10
209	5	0.0	1	5
210	10	0.0	1	10
211	3	0.0	1	3
212	1	0.0	1	1
213	1	0.0	1	1
214	1	0.0	1	1
215	7	0.0	1	6 1
216	2	0.0	1	2
217	2	0.0	1	2
220	1	0.0	1	1
228	1	0.0	1	0 1
237	1	0.0	1	1
250	2	0.0	1	0 2
251	42	0.0	1	0 42

RUN STATISTICS FOR INPUT FILE: E71/host_removal/E71_R1.fastq.gz
=============================================
1020857 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E71/adapter_trimmed/E71_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E71/host_removal/E71_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to E71_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E71/host_removal/E71_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E71/host_removal/E71_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 63.711 s (62.409 µs/read; 0.96 M reads/minute).

=== Summary ===

Total reads processed:               1,020,857
Reads with adapters:                   383,080 (37.5%)
Reads written (passing filters):     1,020,857 (100.0%)

Total basepairs processed:   256,235,107 bp
Quality-trimmed:               6,734,154 bp (2.6%)
Total written (filtered):    248,576,851 bp (97.0%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 383080 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 42.3%
  C: 15.3%
  G: 9.4%
  T: 32.9%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
1	286958	255214.2	0	286958
2	73989	63803.6	0	73989
3	7351	15950.9	0	7351
4	1016	3987.7	0	1016
5	279	996.9	0	279
6	138	249.2	0	138
7	5137	62.3	0	5137
8	58	15.6	0	58
9	128	3.9	0	128
10	80	1.0	1	66 14
11	22	0.2	1	17 5
12	79	0.1	1	69 10
13	27	0.0	1	20 7
14	100	0.0	1	94 6
15	99	0.0	1	94 5
16	110	0.0	1	102 8
17	98	0.0	1	93 5
18	13	0.0	1	9 4
19	57	0.0	1	54 3
20	114	0.0	1	106 8
21	28	0.0	1	24 4
22	43	0.0	1	39 4
23	45	0.0	1	38 7
24	536	0.0	1	506 30
25	43	0.0	1	38 5
26	202	0.0	1	191 11
27	651	0.0	1	628 23
28	101	0.0	1	89 12
29	18	0.0	1	14 4
30	80	0.0	1	70 10
31	16	0.0	1	11 5
32	54	0.0	1	48 6
33	51	0.0	1	46 5
34	54	0.0	1	43 11
35	88	0.0	1	73 15
36	355	0.0	1	332 23
37	162	0.0	1	146 16
38	118	0.0	1	112 6
39	91	0.0	1	84 7
40	68	0.0	1	57 11
41	142	0.0	1	126 16
42	210	0.0	1	197 13
43	63	0.0	1	56 7
44	143	0.0	1	131 12
45	139	0.0	1	130 9
46	115	0.0	1	108 7
47	193	0.0	1	185 8
48	119	0.0	1	114 5
49	74	0.0	1	69 5
50	66	0.0	1	64 2
51	34	0.0	1	32 2
52	21	0.0	1	20 1
53	40	0.0	1	39 1
54	114	0.0	1	108 6
55	36	0.0	1	36
56	78	0.0	1	74 4
57	241	0.0	1	239 2
58	152	0.0	1	151 1
59	27	0.0	1	27
60	104	0.0	1	103 1
61	44	0.0	1	44
62	11	0.0	1	11
63	66	0.0	1	66
64	31	0.0	1	31
65	35	0.0	1	33 2
66	11	0.0	1	10 1
67	9	0.0	1	9
68	12	0.0	1	11 1
69	13	0.0	1	13
70	6	0.0	1	6
71	10	0.0	1	10
72	19	0.0	1	19
73	24	0.0	1	22 2
74	21	0.0	1	21
75	29	0.0	1	27 2
76	51	0.0	1	50 1
77	91	0.0	1	85 6
78	77	0.0	1	71 6
79	158	0.0	1	133 25
80	306	0.0	1	284 22
81	215	0.0	1	198 17
82	115	0.0	1	103 12
83	56	0.0	1	48 8
84	43	0.0	1	34 9
85	36	0.0	1	32 4
86	20	0.0	1	15 5
87	24	0.0	1	22 2
88	28	0.0	1	24 4
89	11	0.0	1	7 4
90	11	0.0	1	9 2
91	10	0.0	1	5 5
92	9	0.0	1	8 1
93	16	0.0	1	12 4
94	163	0.0	1	154 9
95	28	0.0	1	26 2
96	5	0.0	1	4 1
97	11	0.0	1	10 1
98	7	0.0	1	7
99	7	0.0	1	7
100	1	0.0	1	1
101	5	0.0	1	5
102	11	0.0	1	10 1
103	3	0.0	1	3
104	1	0.0	1	0 1
105	1	0.0	1	1
106	6	0.0	1	4 2
107	9	0.0	1	7 2
108	3	0.0	1	1 2
109	8	0.0	1	5 3
110	3	0.0	1	2 1
111	5	0.0	1	4 1
112	5	0.0	1	5
113	10	0.0	1	8 2
114	8	0.0	1	5 3
115	14	0.0	1	11 3
116	6	0.0	1	3 3
117	3	0.0	1	2 1
118	3	0.0	1	2 1
119	5	0.0	1	4 1
120	1	0.0	1	1
121	5	0.0	1	4 1
122	4	0.0	1	2 2
123	3	0.0	1	3
124	2	0.0	1	1 1
125	2	0.0	1	1 1
126	4	0.0	1	4
127	13	0.0	1	10 3
128	7	0.0	1	6 1
129	9	0.0	1	5 4
130	5	0.0	1	4 1
131	1	0.0	1	0 1
132	1	0.0	1	1
133	4	0.0	1	2 2
134	10	0.0	1	5 5
135	2	0.0	1	1 1
136	7	0.0	1	6 1
137	3	0.0	1	3
138	5	0.0	1	4 1
139	3	0.0	1	1 2
140	1	0.0	1	1
141	2	0.0	1	1 1
143	3	0.0	1	3
144	5	0.0	1	3 2
145	1	0.0	1	0 1
147	7	0.0	1	6 1
148	3	0.0	1	2 1
149	7	0.0	1	4 3
150	3	0.0	1	3
151	4	0.0	1	4
152	3	0.0	1	2 1
153	4	0.0	1	4
154	4	0.0	1	3 1
155	1	0.0	1	0 1
156	11	0.0	1	11
159	3	0.0	1	1 2
160	4	0.0	1	3 1
161	3	0.0	1	1 2
163	2	0.0	1	1 1
164	1	0.0	1	1
165	2	0.0	1	2
166	7	0.0	1	7
167	9	0.0	1	9
168	5	0.0	1	2 3
169	3	0.0	1	3
170	2	0.0	1	2
172	4	0.0	1	3 1
174	3	0.0	1	3
175	7	0.0	1	7
176	3	0.0	1	3
177	1	0.0	1	1
178	3	0.0	1	2 1
180	1	0.0	1	1
181	4	0.0	1	4
182	3	0.0	1	2 1
184	3	0.0	1	3
185	1	0.0	1	1
187	1	0.0	1	0 1
188	2	0.0	1	2
189	4	0.0	1	4
190	4	0.0	1	4
191	2	0.0	1	2
193	3	0.0	1	3
194	1	0.0	1	1
195	2	0.0	1	2
199	3	0.0	1	3
200	1	0.0	1	1
201	2	0.0	1	2
202	4	0.0	1	4
203	8	0.0	1	8
204	1	0.0	1	1
205	1	0.0	1	1
206	6	0.0	1	6
207	6	0.0	1	6
208	9	0.0	1	9
209	8	0.0	1	7 1
210	9	0.0	1	9
211	4	0.0	1	3 1
212	2	0.0	1	2
213	2	0.0	1	2
215	8	0.0	1	7 1
216	2	0.0	1	2
217	4	0.0	1	4
220	2	0.0	1	2
226	1	0.0	1	0 1
231	1	0.0	1	1
241	1	0.0	1	1
251	35	0.0	1	0 35

RUN STATISTICS FOR INPUT FILE: E71/host_removal/E71_R2.fastq.gz
=============================================
1020857 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E71_R1_trimmed.fq.gz and E71_R2_trimmed.fq.gz
file_1: E71_R1_trimmed.fq.gz, file_2: E71_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E71_R1_trimmed.fq.gz and E71_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E71_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E71_R2_val_2.fq.gz

Total number of sequences analysed: 1020857

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1314 (0.13%)


  >>> Now running FastQC on the validated data E71_R1_val_1.fq.gz<<<

Started analysis of E71_R1_val_1.fq.gz
Approx 5% complete for E71_R1_val_1.fq.gz
Approx 10% complete for E71_R1_val_1.fq.gz
Approx 15% complete for E71_R1_val_1.fq.gz
Approx 20% complete for E71_R1_val_1.fq.gz
Approx 25% complete for E71_R1_val_1.fq.gz
Approx 30% complete for E71_R1_val_1.fq.gz
Approx 35% complete for E71_R1_val_1.fq.gz
Approx 40% complete for E71_R1_val_1.fq.gz
Approx 45% complete for E71_R1_val_1.fq.gz
Approx 50% complete for E71_R1_val_1.fq.gz
Approx 55% complete for E71_R1_val_1.fq.gz
Approx 60% complete for E71_R1_val_1.fq.gz
Approx 65% complete for E71_R1_val_1.fq.gz
Approx 70% complete for E71_R1_val_1.fq.gz
Approx 75% complete for E71_R1_val_1.fq.gz
Approx 80% complete for E71_R1_val_1.fq.gz
Approx 85% complete for E71_R1_val_1.fq.gz
Approx 90% complete for E71_R1_val_1.fq.gz
Approx 95% complete for E71_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data E71_R2_val_2.fq.gz<<<

Started analysis of E71_R2_val_2.fq.gz
Approx 5% complete for E71_R2_val_2.fq.gz
Approx 10% complete for E71_R2_val_2.fq.gz
Approx 15% complete for E71_R2_val_2.fq.gz
Approx 20% complete for E71_R2_val_2.fq.gz
Approx 25% complete for E71_R2_val_2.fq.gz
Approx 30% complete for E71_R2_val_2.fq.gz
Approx 35% complete for E71_R2_val_2.fq.gz
Approx 40% complete for E71_R2_val_2.fq.gz
Approx 45% complete for E71_R2_val_2.fq.gz
Approx 50% complete for E71_R2_val_2.fq.gz
Approx 55% complete for E71_R2_val_2.fq.gz
Approx 60% complete for E71_R2_val_2.fq.gz
Approx 65% complete for E71_R2_val_2.fq.gz
Approx 70% complete for E71_R2_val_2.fq.gz
Approx 75% complete for E71_R2_val_2.fq.gz
Approx 80% complete for E71_R2_val_2.fq.gz
Approx 85% complete for E71_R2_val_2.fq.gz
Approx 90% complete for E71_R2_val_2.fq.gz
Approx 95% complete for E71_R2_val_2.fq.gz
Deleting both intermediate output files E71_R1_trimmed.fq.gz and E71_R2_trimmed.fq.gz

====================================================================================================

