Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E16/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> E16/host_removal/E16_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	1368	AGATCGGAAGAGC	322224	0.42
Nextera	0	CTGTCTCTTATA	322224	0.00
smallRNA	0	TGGAATTCTCGG	322224	0.00
Using Illumina adapter for trimming (count: 1368). Second best hit was Nextera (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E16/adapter_trimmed/E16_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E16/host_removal/E16_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to E16_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E16/host_removal/E16_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E16/host_removal/E16_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 12.515 s (38.840 µs/read; 1.54 M reads/minute).

=== Summary ===

Total reads processed:                 322,224
Reads with adapters:                   112,937 (35.0%)
Reads written (passing filters):       322,224 (100.0%)

Total basepairs processed:    80,878,224 bp
Quality-trimmed:                 241,714 bp (0.3%)
Total written (filtered):     80,327,132 bp (99.3%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 112937 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 38.4%
  C: 15.9%
  G: 10.3%
  T: 34.9%
  none/other: 0.5%

Overview of removed sequences
length	count	expect	max.err	error counts
1	78022	80556.0	0	78022
2	29477	20139.0	0	29477
3	2020	5034.8	0	2020
4	700	1258.7	0	700
5	32	314.7	0	32
6	24	78.7	0	24
7	556	19.7	0	556
8	29	4.9	0	29
9	34	1.2	0	34
10	28	0.3	1	24 4
11	10	0.1	1	10
12	24	0.0	1	24
13	28	0.0	1	24 4
14	6	0.0	1	5 1
15	15	0.0	1	15
16	13	0.0	1	13
17	9	0.0	1	8 1
18	11	0.0	1	11
19	8	0.0	1	8
20	12	0.0	1	12
21	7	0.0	1	7
22	16	0.0	1	14 2
23	17	0.0	1	17
24	199	0.0	1	199
25	36	0.0	1	35 1
26	5	0.0	1	5
27	13	0.0	1	10 3
28	23	0.0	1	23
29	7	0.0	1	6 1
30	15	0.0	1	14 1
31	5	0.0	1	5
32	11	0.0	1	11
33	6	0.0	1	6
34	20	0.0	1	18 2
35	11	0.0	1	10 1
36	9	0.0	1	9
37	24	0.0	1	24
38	13	0.0	1	13
39	10	0.0	1	8 2
40	11	0.0	1	11
41	17	0.0	1	17
42	18	0.0	1	17 1
43	16	0.0	1	15 1
44	13	0.0	1	12 1
45	13	0.0	1	13
46	5	0.0	1	4 1
47	13	0.0	1	10 3
48	3	0.0	1	3
49	9	0.0	1	9
50	9	0.0	1	8 1
51	13	0.0	1	13
52	5	0.0	1	4 1
53	7	0.0	1	4 3
54	14	0.0	1	14
55	8	0.0	1	8
56	1	0.0	1	0 1
57	12	0.0	1	12
58	9	0.0	1	8 1
59	15	0.0	1	13 2
60	5	0.0	1	5
61	10	0.0	1	10
62	3	0.0	1	3
63	5	0.0	1	5
64	1	0.0	1	1
65	6	0.0	1	6
66	9	0.0	1	8 1
67	4	0.0	1	4
68	5	0.0	1	5
69	6	0.0	1	6
70	6	0.0	1	5 1
71	7	0.0	1	7
72	8	0.0	1	8
73	20	0.0	1	15 5
74	26	0.0	1	17 9
75	76	0.0	1	24 52
76	198	0.0	1	146 52
77	142	0.0	1	87 55
78	86	0.0	1	44 42
79	46	0.0	1	29 17
80	32	0.0	1	18 14
81	23	0.0	1	11 12
82	14	0.0	1	4 10
83	13	0.0	1	5 8
84	12	0.0	1	6 6
85	11	0.0	1	6 5
86	11	0.0	1	7 4
87	5	0.0	1	2 3
88	8	0.0	1	3 5
89	7	0.0	1	4 3
90	5	0.0	1	3 2
91	5	0.0	1	3 2
92	6	0.0	1	2 4
93	3	0.0	1	2 1
94	35	0.0	1	35
95	5	0.0	1	3 2
96	4	0.0	1	4
97	3	0.0	1	1 2
98	3	0.0	1	2 1
99	4	0.0	1	0 4
100	1	0.0	1	1
101	2	0.0	1	0 2
102	5	0.0	1	4 1
103	3	0.0	1	1 2
104	5	0.0	1	4 1
106	2	0.0	1	1 1
107	2	0.0	1	1 1
108	3	0.0	1	1 2
109	4	0.0	1	3 1
110	4	0.0	1	3 1
111	6	0.0	1	4 2
112	9	0.0	1	4 5
113	1	0.0	1	1
115	3	0.0	1	0 3
116	3	0.0	1	3
117	5	0.0	1	3 2
118	5	0.0	1	0 5
119	2	0.0	1	0 2
120	1	0.0	1	1
121	1	0.0	1	0 1
122	3	0.0	1	1 2
123	2	0.0	1	1 1
127	7	0.0	1	5 2
128	1	0.0	1	0 1
129	4	0.0	1	2 2
132	2	0.0	1	1 1
133	2	0.0	1	0 2
134	1	0.0	1	0 1
135	2	0.0	1	1 1
136	4	0.0	1	0 4
137	3	0.0	1	0 3
138	1	0.0	1	0 1
139	1	0.0	1	0 1
142	2	0.0	1	0 2
143	2	0.0	1	1 1
144	1	0.0	1	0 1
146	2	0.0	1	1 1
147	2	0.0	1	0 2
148	3	0.0	1	0 3
151	2	0.0	1	0 2
153	1	0.0	1	0 1
154	1	0.0	1	0 1
155	2	0.0	1	1 1
156	4	0.0	1	2 2
157	1	0.0	1	0 1
158	2	0.0	1	1 1
160	2	0.0	1	0 2
161	3	0.0	1	0 3
163	2	0.0	1	1 1
164	1	0.0	1	0 1
165	2	0.0	1	0 2
166	2	0.0	1	0 2
168	2	0.0	1	0 2
169	1	0.0	1	1
170	1	0.0	1	0 1
171	1	0.0	1	0 1
172	1	0.0	1	0 1
173	2	0.0	1	1 1
174	3	0.0	1	2 1
175	1	0.0	1	0 1
176	1	0.0	1	0 1
177	2	0.0	1	2
180	1	0.0	1	0 1
182	3	0.0	1	0 3
183	1	0.0	1	0 1
184	1	0.0	1	0 1
185	2	0.0	1	0 2
186	1	0.0	1	0 1
187	1	0.0	1	1
188	2	0.0	1	0 2
190	2	0.0	1	0 2
191	2	0.0	1	0 2
192	2	0.0	1	0 2
193	2	0.0	1	0 2
194	1	0.0	1	0 1
195	1	0.0	1	0 1
199	1	0.0	1	1
200	1	0.0	1	1
201	1	0.0	1	0 1
204	1	0.0	1	0 1
205	1	0.0	1	1
206	1	0.0	1	1
208	2	0.0	1	0 2
210	1	0.0	1	1
211	2	0.0	1	0 2
213	2	0.0	1	0 2
214	1	0.0	1	0 1
215	2	0.0	1	1 1
219	1	0.0	1	0 1
222	1	0.0	1	1
224	1	0.0	1	1
225	3	0.0	1	0 3
227	2	0.0	1	0 2
228	1	0.0	1	0 1
229	1	0.0	1	0 1
231	1	0.0	1	0 1
232	1	0.0	1	0 1
234	1	0.0	1	0 1
237	1	0.0	1	0 1
242	1	0.0	1	0 1
244	1	0.0	1	0 1
245	1	0.0	1	0 1
246	3	0.0	1	0 3
247	2	0.0	1	0 2
248	1	0.0	1	0 1
249	2	0.0	1	0 2
250	10	0.0	1	0 10
251	118	0.0	1	0 118

RUN STATISTICS FOR INPUT FILE: E16/host_removal/E16_R1.fastq.gz
=============================================
322224 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E16/adapter_trimmed/E16_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E16/host_removal/E16_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to E16_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E16/host_removal/E16_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E16/host_removal/E16_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 13.603 s (42.216 µs/read; 1.42 M reads/minute).

=== Summary ===

Total reads processed:                 322,224
Reads with adapters:                   113,364 (35.2%)
Reads written (passing filters):       322,224 (100.0%)

Total basepairs processed:    80,878,224 bp
Quality-trimmed:                 923,114 bp (1.1%)
Total written (filtered):     79,672,154 bp (98.5%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 113364 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 43.9%
  C: 15.1%
  G: 9.5%
  T: 31.0%
  none/other: 0.5%

Overview of removed sequences
length	count	expect	max.err	error counts
1	84605	80556.0	0	84605
2	22938	20139.0	0	22938
3	2624	5034.8	0	2624
4	690	1258.7	0	690
5	28	314.7	0	28
6	18	78.7	0	18
7	545	19.7	0	545
8	9	4.9	0	9
9	37	1.2	0	36 1
10	29	0.3	1	22 7
11	10	0.1	1	9 1
12	27	0.0	1	26 1
13	2	0.0	1	2
14	17	0.0	1	14 3
15	9	0.0	1	9
16	6	0.0	1	6
17	16	0.0	1	12 4
18	4	0.0	1	4
19	10	0.0	1	9 1
20	7	0.0	1	7
22	15	0.0	1	14 1
23	21	0.0	1	20 1
24	221	0.0	1	212 9
25	6	0.0	1	5 1
26	8	0.0	1	7 1
27	21	0.0	1	20 1
28	27	0.0	1	26 1
29	2	0.0	1	2
30	19	0.0	1	19
31	3	0.0	1	2 1
32	15	0.0	1	15
33	9	0.0	1	7 2
34	18	0.0	1	16 2
35	7	0.0	1	7
36	24	0.0	1	24
37	15	0.0	1	15
38	19	0.0	1	19
39	8	0.0	1	7 1
40	19	0.0	1	19
41	13	0.0	1	13
42	17	0.0	1	17
43	8	0.0	1	8
44	17	0.0	1	16 1
45	30	0.0	1	29 1
46	15	0.0	1	15
47	18	0.0	1	18
48	5	0.0	1	5
49	8	0.0	1	8
50	8	0.0	1	8
51	8	0.0	1	8
52	6	0.0	1	6
53	5	0.0	1	5
54	26	0.0	1	24 2
55	2	0.0	1	2
56	18	0.0	1	18
57	34	0.0	1	33 1
58	14	0.0	1	14
59	5	0.0	1	4 1
60	16	0.0	1	15 1
61	7	0.0	1	7
62	3	0.0	1	3
63	5	0.0	1	5
64	7	0.0	1	7
65	2	0.0	1	2
66	3	0.0	1	3
67	5	0.0	1	4 1
68	3	0.0	1	3
69	4	0.0	1	4
70	2	0.0	1	2
71	1	0.0	1	1
72	5	0.0	1	5
73	4	0.0	1	2 2
74	9	0.0	1	8 1
75	12	0.0	1	9 3
76	11	0.0	1	8 3
77	32	0.0	1	21 11
78	44	0.0	1	21 23
79	117	0.0	1	40 77
80	138	0.0	1	70 68
81	92	0.0	1	43 49
82	47	0.0	1	11 36
83	32	0.0	1	12 20
84	24	0.0	1	5 19
85	16	0.0	1	3 13
86	14	0.0	1	3 11
87	13	0.0	1	4 9
88	7	0.0	1	3 4
89	8	0.0	1	4 4
90	2	0.0	1	0 2
91	5	0.0	1	1 4
92	2	0.0	1	0 2
93	8	0.0	1	3 5
94	30	0.0	1	23 7
95	10	0.0	1	8 2
96	3	0.0	1	3
97	3	0.0	1	1 2
98	2	0.0	1	2
99	3	0.0	1	1 2
100	3	0.0	1	2 1
101	3	0.0	1	0 3
102	2	0.0	1	1 1
103	2	0.0	1	1 1
104	2	0.0	1	1 1
105	2	0.0	1	0 2
106	1	0.0	1	1
108	2	0.0	1	1 1
109	1	0.0	1	0 1
110	2	0.0	1	1 1
111	5	0.0	1	4 1
113	3	0.0	1	1 2
114	2	0.0	1	1 1
116	5	0.0	1	3 2
117	2	0.0	1	0 2
119	4	0.0	1	0 4
120	1	0.0	1	0 1
123	2	0.0	1	0 2
124	3	0.0	1	0 3
127	6	0.0	1	5 1
128	1	0.0	1	0 1
129	3	0.0	1	1 2
131	2	0.0	1	1 1
134	4	0.0	1	1 3
135	1	0.0	1	0 1
136	2	0.0	1	1 1
137	1	0.0	1	0 1
139	2	0.0	1	2
140	1	0.0	1	0 1
141	1	0.0	1	0 1
143	2	0.0	1	2
144	1	0.0	1	0 1
145	1	0.0	1	1
147	2	0.0	1	2
148	2	0.0	1	1 1
149	1	0.0	1	0 1
151	1	0.0	1	0 1
152	1	0.0	1	1
154	1	0.0	1	0 1
155	1	0.0	1	0 1
156	3	0.0	1	1 2
157	1	0.0	1	0 1
159	1	0.0	1	0 1
160	2	0.0	1	1 1
161	1	0.0	1	0 1
163	1	0.0	1	0 1
164	2	0.0	1	1 1
168	1	0.0	1	1
169	1	0.0	1	0 1
170	1	0.0	1	0 1
175	1	0.0	1	0 1
177	2	0.0	1	2
178	1	0.0	1	0 1
180	2	0.0	1	2
181	1	0.0	1	0 1
182	1	0.0	1	0 1
184	1	0.0	1	0 1
190	1	0.0	1	0 1
191	1	0.0	1	1
196	2	0.0	1	2
199	1	0.0	1	0 1
200	2	0.0	1	2
202	2	0.0	1	1 1
203	1	0.0	1	1
207	1	0.0	1	1
223	1	0.0	1	1
237	1	0.0	1	0 1
249	1	0.0	1	0 1
250	7	0.0	1	0 7
251	120	0.0	1	0 120

RUN STATISTICS FOR INPUT FILE: E16/host_removal/E16_R2.fastq.gz
=============================================
322224 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E16_R1_trimmed.fq.gz and E16_R2_trimmed.fq.gz
file_1: E16_R1_trimmed.fq.gz, file_2: E16_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E16_R1_trimmed.fq.gz and E16_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E16_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E16_R2_val_2.fq.gz

Total number of sequences analysed: 322224

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1099 (0.34%)


  >>> Now running FastQC on the validated data E16_R1_val_1.fq.gz<<<

Started analysis of E16_R1_val_1.fq.gz
Approx 5% complete for E16_R1_val_1.fq.gz
Approx 10% complete for E16_R1_val_1.fq.gz
Approx 15% complete for E16_R1_val_1.fq.gz
Approx 20% complete for E16_R1_val_1.fq.gz
Approx 25% complete for E16_R1_val_1.fq.gz
Approx 30% complete for E16_R1_val_1.fq.gz
Approx 35% complete for E16_R1_val_1.fq.gz
Approx 40% complete for E16_R1_val_1.fq.gz
Approx 45% complete for E16_R1_val_1.fq.gz
Approx 50% complete for E16_R1_val_1.fq.gz
Approx 55% complete for E16_R1_val_1.fq.gz
Approx 60% complete for E16_R1_val_1.fq.gz
Approx 65% complete for E16_R1_val_1.fq.gz
Approx 70% complete for E16_R1_val_1.fq.gz
Approx 75% complete for E16_R1_val_1.fq.gz
Approx 80% complete for E16_R1_val_1.fq.gz
Approx 85% complete for E16_R1_val_1.fq.gz
Approx 90% complete for E16_R1_val_1.fq.gz
Approx 95% complete for E16_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data E16_R2_val_2.fq.gz<<<

Started analysis of E16_R2_val_2.fq.gz
Approx 5% complete for E16_R2_val_2.fq.gz
Approx 10% complete for E16_R2_val_2.fq.gz
Approx 15% complete for E16_R2_val_2.fq.gz
Approx 20% complete for E16_R2_val_2.fq.gz
Approx 25% complete for E16_R2_val_2.fq.gz
Approx 30% complete for E16_R2_val_2.fq.gz
Approx 35% complete for E16_R2_val_2.fq.gz
Approx 40% complete for E16_R2_val_2.fq.gz
Approx 45% complete for E16_R2_val_2.fq.gz
Approx 50% complete for E16_R2_val_2.fq.gz
Approx 55% complete for E16_R2_val_2.fq.gz
Approx 60% complete for E16_R2_val_2.fq.gz
Approx 65% complete for E16_R2_val_2.fq.gz
Approx 70% complete for E16_R2_val_2.fq.gz
Approx 75% complete for E16_R2_val_2.fq.gz
Approx 80% complete for E16_R2_val_2.fq.gz
Approx 85% complete for E16_R2_val_2.fq.gz
Approx 90% complete for E16_R2_val_2.fq.gz
Approx 95% complete for E16_R2_val_2.fq.gz
Deleting both intermediate output files E16_R1_trimmed.fq.gz and E16_R2_trimmed.fq.gz

====================================================================================================

