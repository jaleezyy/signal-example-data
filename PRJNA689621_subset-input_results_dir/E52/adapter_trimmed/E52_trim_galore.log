Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E52/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> E52/host_removal/E52_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	8631	AGATCGGAAGAGC	725404	1.19
smallRNA	0	TGGAATTCTCGG	725404	0.00
Nextera	0	CTGTCTCTTATA	725404	0.00
Using Illumina adapter for trimming (count: 8631). Second best hit was smallRNA (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E52/adapter_trimmed/E52_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E52/host_removal/E52_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to E52_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E52/host_removal/E52_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E52/host_removal/E52_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 24.303 s (33.503 µs/read; 1.79 M reads/minute).

=== Summary ===

Total reads processed:                 725,404
Reads with adapters:                   282,254 (38.9%)
Reads written (passing filters):       725,404 (100.0%)

Total basepairs processed:   182,076,404 bp
Quality-trimmed:               1,980,639 bp (1.1%)
Total written (filtered):    179,143,848 bp (98.4%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 282254 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 37.3%
  C: 15.6%
  G: 8.9%
  T: 38.1%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
1	187284	181351.0	0	187284
2	75686	45337.8	0	75686
3	3650	11334.4	0	3650
4	509	2833.6	0	509
5	107	708.4	0	107
6	66	177.1	0	66
7	4031	44.3	0	4031
8	116	11.1	0	116
9	125	2.8	0	124 1
10	428	0.7	1	413 15
11	225	0.2	1	213 12
12	574	0.0	1	549 25
13	97	0.0	1	87 10
14	33	0.0	1	24 9
15	34	0.0	1	23 11
16	12	0.0	1	9 3
17	33	0.0	1	24 9
18	17	0.0	1	11 6
19	12	0.0	1	9 3
20	23	0.0	1	16 7
21	12	0.0	1	7 5
22	33	0.0	1	23 10
23	33	0.0	1	26 7
24	349	0.0	1	328 21
25	117	0.0	1	87 30
26	90	0.0	1	73 17
27	1260	0.0	1	1217 43
28	214	0.0	1	192 22
29	66	0.0	1	43 23
30	25	0.0	1	15 10
31	42	0.0	1	29 13
32	62	0.0	1	47 15
33	33	0.0	1	18 15
34	97	0.0	1	67 30
35	49	0.0	1	39 10
36	123	0.0	1	107 16
37	762	0.0	1	743 19
38	74	0.0	1	69 5
39	91	0.0	1	74 17
40	100	0.0	1	81 19
41	165	0.0	1	156 9
42	60	0.0	1	45 15
43	83	0.0	1	72 11
44	33	0.0	1	29 4
45	148	0.0	1	142 6
46	267	0.0	1	252 15
47	69	0.0	1	53 16
48	31	0.0	1	22 9
49	62	0.0	1	52 10
50	36	0.0	1	26 10
51	33	0.0	1	27 6
52	41	0.0	1	32 9
53	50	0.0	1	37 13
54	97	0.0	1	66 31
55	62	0.0	1	45 17
56	28	0.0	1	17 11
57	28	0.0	1	23 5
58	24	0.0	1	21 3
59	24	0.0	1	22 2
60	22	0.0	1	19 3
61	13	0.0	1	11 2
62	23	0.0	1	19 4
63	26	0.0	1	25 1
64	18	0.0	1	17 1
65	45	0.0	1	38 7
66	50	0.0	1	40 10
67	35	0.0	1	26 9
68	33	0.0	1	27 6
69	93	0.0	1	85 8
70	35	0.0	1	32 3
71	42	0.0	1	40 2
72	81	0.0	1	75 6
73	132	0.0	1	102 30
74	145	0.0	1	121 24
75	265	0.0	1	232 33
76	887	0.0	1	834 53
77	522	0.0	1	504 18
78	238	0.0	1	229 9
79	148	0.0	1	138 10
80	78	0.0	1	72 6
81	42	0.0	1	38 4
82	38	0.0	1	34 4
83	28	0.0	1	23 5
84	25	0.0	1	22 3
85	36	0.0	1	30 6
86	24	0.0	1	19 5
87	30	0.0	1	26 4
88	22	0.0	1	21 1
89	15	0.0	1	11 4
90	15	0.0	1	12 3
91	12	0.0	1	11 1
92	15	0.0	1	13 2
93	30	0.0	1	28 2
94	227	0.0	1	219 8
95	32	0.0	1	31 1
96	21	0.0	1	17 4
97	13	0.0	1	11 2
98	7	0.0	1	6 1
99	9	0.0	1	9
100	27	0.0	1	24 3
101	3	0.0	1	3
102	6	0.0	1	6
103	10	0.0	1	10
104	4	0.0	1	3 1
105	3	0.0	1	2 1
106	11	0.0	1	10 1
107	13	0.0	1	11 2
108	16	0.0	1	10 6
109	11	0.0	1	9 2
110	7	0.0	1	5 2
111	18	0.0	1	17 1
112	8	0.0	1	8
113	8	0.0	1	6 2
114	12	0.0	1	9 3
115	9	0.0	1	6 3
116	12	0.0	1	12
117	28	0.0	1	26 2
118	4	0.0	1	4
119	6	0.0	1	5 1
120	3	0.0	1	2 1
121	2	0.0	1	2
122	2	0.0	1	2
123	1	0.0	1	1
124	4	0.0	1	3 1
125	1	0.0	1	1
126	11	0.0	1	9 2
127	31	0.0	1	30 1
128	7	0.0	1	5 2
129	9	0.0	1	6 3
130	3	0.0	1	2 1
131	5	0.0	1	3 2
132	7	0.0	1	4 3
133	5	0.0	1	5
134	8	0.0	1	7 1
135	5	0.0	1	5
136	5	0.0	1	2 3
137	3	0.0	1	2 1
138	4	0.0	1	4
139	6	0.0	1	5 1
140	2	0.0	1	2
141	1	0.0	1	0 1
142	1	0.0	1	1
143	4	0.0	1	3 1
144	1	0.0	1	0 1
145	4	0.0	1	3 1
146	1	0.0	1	1
147	6	0.0	1	2 4
148	7	0.0	1	7
149	1	0.0	1	1
150	2	0.0	1	2
151	1	0.0	1	1
152	3	0.0	1	1 2
153	1	0.0	1	1
154	5	0.0	1	5
155	2	0.0	1	2
156	7	0.0	1	6 1
157	1	0.0	1	1
158	3	0.0	1	2 1
159	1	0.0	1	0 1
160	5	0.0	1	4 1
161	7	0.0	1	7
162	2	0.0	1	2
163	2	0.0	1	2
164	1	0.0	1	0 1
165	1	0.0	1	0 1
166	1	0.0	1	1
167	4	0.0	1	3 1
168	5	0.0	1	4 1
169	5	0.0	1	5
170	2	0.0	1	2
171	1	0.0	1	1
172	2	0.0	1	2
173	2	0.0	1	0 2
174	7	0.0	1	5 2
175	8	0.0	1	7 1
176	2	0.0	1	2
177	5	0.0	1	5
181	2	0.0	1	1 1
182	2	0.0	1	2
183	2	0.0	1	1 1
185	1	0.0	1	1
186	2	0.0	1	2
187	2	0.0	1	2
188	4	0.0	1	4
189	5	0.0	1	4 1
190	4	0.0	1	4
191	3	0.0	1	3
192	2	0.0	1	2
193	7	0.0	1	6 1
194	2	0.0	1	1 1
195	1	0.0	1	1
196	2	0.0	1	2
197	4	0.0	1	4
199	3	0.0	1	3
200	2	0.0	1	1 1
201	2	0.0	1	2
202	5	0.0	1	4 1
203	6	0.0	1	6
204	2	0.0	1	2
205	6	0.0	1	4 2
206	2	0.0	1	2
207	6	0.0	1	4 2
208	9	0.0	1	9
209	8	0.0	1	8
210	7	0.0	1	7
211	4	0.0	1	4
212	1	0.0	1	1
213	1	0.0	1	1
214	5	0.0	1	5
215	6	0.0	1	6
216	5	0.0	1	5
217	1	0.0	1	1
220	2	0.0	1	1 1
229	1	0.0	1	1
231	1	0.0	1	0 1
238	1	0.0	1	0 1
247	3	0.0	1	0 3
248	2	0.0	1	1 1
249	5	0.0	1	0 5
250	4	0.0	1	1 3
251	48	0.0	1	0 48

RUN STATISTICS FOR INPUT FILE: E52/host_removal/E52_R1.fastq.gz
=============================================
725404 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E52/adapter_trimmed/E52_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E52/host_removal/E52_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to E52_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E52/host_removal/E52_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E52/host_removal/E52_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 26.480 s (36.503 µs/read; 1.64 M reads/minute).

=== Summary ===

Total reads processed:                 725,404
Reads with adapters:                   289,147 (39.9%)
Reads written (passing filters):       725,404 (100.0%)

Total basepairs processed:   182,076,404 bp
Quality-trimmed:               5,045,933 bp (2.8%)
Total written (filtered):    176,294,480 bp (96.8%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 289147 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 42.3%
  C: 15.1%
  G: 9.3%
  T: 33.1%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
1	214110	181351.0	0	214110
2	56809	45337.8	0	56809
3	5410	11334.4	0	5410
4	537	2833.6	0	537
5	107	708.4	0	107
6	83	177.1	0	83
7	3829	44.3	0	3829
8	56	11.1	0	56
9	124	2.8	0	123 1
10	435	0.7	1	410 25
11	178	0.2	1	160 18
12	517	0.0	1	500 17
13	21	0.0	1	18 3
14	38	0.0	1	36 2
15	16	0.0	1	11 5
16	9	0.0	1	5 4
17	15	0.0	1	13 2
18	11	0.0	1	5 6
19	14	0.0	1	11 3
20	7	0.0	1	6 1
21	3	0.0	1	3
22	15	0.0	1	13 2
23	40	0.0	1	26 14
24	390	0.0	1	371 19
25	29	0.0	1	24 5
26	119	0.0	1	105 14
27	1215	0.0	1	1185 30
28	123	0.0	1	119 4
29	28	0.0	1	24 4
30	58	0.0	1	53 5
31	19	0.0	1	18 1
32	76	0.0	1	70 6
33	42	0.0	1	33 9
34	205	0.0	1	198 7
35	61	0.0	1	56 5
36	354	0.0	1	350 4
37	282	0.0	1	260 22
38	172	0.0	1	155 17
39	62	0.0	1	55 7
40	125	0.0	1	120 5
41	96	0.0	1	85 11
42	175	0.0	1	169 6
43	223	0.0	1	213 10
44	250	0.0	1	240 10
45	269	0.0	1	255 14
46	132	0.0	1	124 8
47	134	0.0	1	131 3
48	82	0.0	1	80 2
49	40	0.0	1	38 2
50	28	0.0	1	28
51	29	0.0	1	27 2
52	18	0.0	1	15 3
53	25	0.0	1	25
54	65	0.0	1	63 2
55	33	0.0	1	30 3
56	54	0.0	1	49 5
57	157	0.0	1	154 3
58	82	0.0	1	82
59	11	0.0	1	10 1
60	42	0.0	1	42
61	9	0.0	1	9
62	7	0.0	1	6 1
63	11	0.0	1	11
64	6	0.0	1	5 1
65	7	0.0	1	7
66	4	0.0	1	4
68	4	0.0	1	2 2
69	18	0.0	1	13 5
70	2	0.0	1	2
71	3	0.0	1	2 1
72	3	0.0	1	3
73	5	0.0	1	3 2
74	6	0.0	1	4 2
75	9	0.0	1	7 2
76	16	0.0	1	16
77	13	0.0	1	11 2
78	21	0.0	1	17 4
79	46	0.0	1	35 11
80	95	0.0	1	77 18
81	111	0.0	1	88 23
82	89	0.0	1	66 23
83	90	0.0	1	74 16
84	71	0.0	1	56 15
85	54	0.0	1	46 8
86	39	0.0	1	32 7
87	36	0.0	1	26 10
88	33	0.0	1	22 11
89	24	0.0	1	20 4
90	22	0.0	1	16 6
91	13	0.0	1	13
92	12	0.0	1	10 2
93	17	0.0	1	12 5
94	153	0.0	1	150 3
95	23	0.0	1	21 2
96	9	0.0	1	8 1
97	10	0.0	1	5 5
98	8	0.0	1	5 3
99	3	0.0	1	2 1
100	12	0.0	1	12
101	3	0.0	1	2 1
102	6	0.0	1	4 2
103	2	0.0	1	1 1
104	2	0.0	1	1 1
105	1	0.0	1	0 1
106	4	0.0	1	3 1
107	7	0.0	1	6 1
108	2	0.0	1	2
109	5	0.0	1	4 1
110	2	0.0	1	2
111	8	0.0	1	5 3
112	4	0.0	1	3 1
113	1	0.0	1	0 1
114	7	0.0	1	5 2
115	4	0.0	1	2 2
116	4	0.0	1	3 1
117	20	0.0	1	18 2
118	1	0.0	1	1
119	3	0.0	1	3
120	1	0.0	1	0 1
121	1	0.0	1	1
123	3	0.0	1	0 3
124	2	0.0	1	0 2
125	3	0.0	1	3
126	6	0.0	1	4 2
127	16	0.0	1	12 4
128	4	0.0	1	3 1
129	2	0.0	1	2
130	2	0.0	1	1 1
131	1	0.0	1	1
132	1	0.0	1	0 1
133	3	0.0	1	2 1
134	5	0.0	1	3 2
135	5	0.0	1	1 4
136	5	0.0	1	4 1
138	1	0.0	1	0 1
139	1	0.0	1	1
141	2	0.0	1	1 1
142	2	0.0	1	1 1
143	1	0.0	1	0 1
144	3	0.0	1	1 2
145	1	0.0	1	1
146	3	0.0	1	3
147	3	0.0	1	3
148	3	0.0	1	3
149	4	0.0	1	3 1
150	1	0.0	1	1
152	1	0.0	1	0 1
154	9	0.0	1	4 5
155	2	0.0	1	0 2
156	8	0.0	1	7 1
157	1	0.0	1	1
159	1	0.0	1	1
160	3	0.0	1	3
161	3	0.0	1	2 1
162	1	0.0	1	1
163	1	0.0	1	1
164	1	0.0	1	0 1
165	1	0.0	1	0 1
167	2	0.0	1	1 1
169	3	0.0	1	1 2
170	1	0.0	1	1
171	1	0.0	1	1
172	1	0.0	1	1
174	2	0.0	1	2
175	4	0.0	1	4
177	2	0.0	1	0 2
179	1	0.0	1	1
180	1	0.0	1	1
181	1	0.0	1	1
183	2	0.0	1	2
184	3	0.0	1	3
186	1	0.0	1	1
187	1	0.0	1	1
189	2	0.0	1	2
190	2	0.0	1	2
191	3	0.0	1	3
192	3	0.0	1	3
193	1	0.0	1	1
194	1	0.0	1	1
195	2	0.0	1	2
196	3	0.0	1	3
197	2	0.0	1	2
198	2	0.0	1	2
200	1	0.0	1	1
201	1	0.0	1	1
202	2	0.0	1	2
203	3	0.0	1	3
205	7	0.0	1	6 1
206	5	0.0	1	5
207	4	0.0	1	4
208	6	0.0	1	6
209	5	0.0	1	5
210	7	0.0	1	7
211	4	0.0	1	4
212	3	0.0	1	3
213	3	0.0	1	1 2
214	1	0.0	1	1
215	8	0.0	1	4 4
216	1	0.0	1	0 1
217	1	0.0	1	1
219	1	0.0	1	1
250	3	0.0	1	0 3
251	28	0.0	1	1 27

RUN STATISTICS FOR INPUT FILE: E52/host_removal/E52_R2.fastq.gz
=============================================
725404 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E52_R1_trimmed.fq.gz and E52_R2_trimmed.fq.gz
file_1: E52_R1_trimmed.fq.gz, file_2: E52_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E52_R1_trimmed.fq.gz and E52_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E52_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E52_R2_val_2.fq.gz

Total number of sequences analysed: 725404

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1126 (0.16%)


  >>> Now running FastQC on the validated data E52_R1_val_1.fq.gz<<<

Started analysis of E52_R1_val_1.fq.gz
Approx 5% complete for E52_R1_val_1.fq.gz
Approx 10% complete for E52_R1_val_1.fq.gz
Approx 15% complete for E52_R1_val_1.fq.gz
Approx 20% complete for E52_R1_val_1.fq.gz
Approx 25% complete for E52_R1_val_1.fq.gz
Approx 30% complete for E52_R1_val_1.fq.gz
Approx 35% complete for E52_R1_val_1.fq.gz
Approx 40% complete for E52_R1_val_1.fq.gz
Approx 45% complete for E52_R1_val_1.fq.gz
Approx 50% complete for E52_R1_val_1.fq.gz
Approx 55% complete for E52_R1_val_1.fq.gz
Approx 60% complete for E52_R1_val_1.fq.gz
Approx 65% complete for E52_R1_val_1.fq.gz
Approx 70% complete for E52_R1_val_1.fq.gz
Approx 75% complete for E52_R1_val_1.fq.gz
Approx 80% complete for E52_R1_val_1.fq.gz
Approx 85% complete for E52_R1_val_1.fq.gz
Approx 90% complete for E52_R1_val_1.fq.gz
Approx 95% complete for E52_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data E52_R2_val_2.fq.gz<<<

Started analysis of E52_R2_val_2.fq.gz
Approx 5% complete for E52_R2_val_2.fq.gz
Approx 10% complete for E52_R2_val_2.fq.gz
Approx 15% complete for E52_R2_val_2.fq.gz
Approx 20% complete for E52_R2_val_2.fq.gz
Approx 25% complete for E52_R2_val_2.fq.gz
Approx 30% complete for E52_R2_val_2.fq.gz
Approx 35% complete for E52_R2_val_2.fq.gz
Approx 40% complete for E52_R2_val_2.fq.gz
Approx 45% complete for E52_R2_val_2.fq.gz
Approx 50% complete for E52_R2_val_2.fq.gz
Approx 55% complete for E52_R2_val_2.fq.gz
Approx 60% complete for E52_R2_val_2.fq.gz
Approx 65% complete for E52_R2_val_2.fq.gz
Approx 70% complete for E52_R2_val_2.fq.gz
Approx 75% complete for E52_R2_val_2.fq.gz
Approx 80% complete for E52_R2_val_2.fq.gz
Approx 85% complete for E52_R2_val_2.fq.gz
Approx 90% complete for E52_R2_val_2.fq.gz
Approx 95% complete for E52_R2_val_2.fq.gz
Deleting both intermediate output files E52_R1_trimmed.fq.gz and E52_R2_trimmed.fq.gz

====================================================================================================

