Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E6/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> E6/host_removal/E6_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	3162	AGATCGGAAGAGC	365277	0.87
smallRNA	0	TGGAATTCTCGG	365277	0.00
Nextera	0	CTGTCTCTTATA	365277	0.00
Using Illumina adapter for trimming (count: 3162). Second best hit was smallRNA (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E6/adapter_trimmed/E6_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E6/host_removal/E6_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to E6_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E6/host_removal/E6_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E6/host_removal/E6_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 15.717 s (43.029 µs/read; 1.39 M reads/minute).

=== Summary ===

Total reads processed:                 365,277
Reads with adapters:                   136,840 (37.5%)
Reads written (passing filters):       365,277 (100.0%)

Total basepairs processed:    91,684,527 bp
Quality-trimmed:               1,486,681 bp (1.6%)
Total written (filtered):     89,772,226 bp (97.9%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 136840 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 38.6%
  C: 14.7%
  G: 9.0%
  T: 37.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	93393	91319.2	0	93393
2	37530	22829.8	0	37530
3	1623	5707.5	0	1623
4	339	1426.9	0	339
5	42	356.7	0	42
6	23	89.2	0	23
7	29	22.3	0	29
8	9	5.6	0	9
9	23	1.4	0	23
10	23	0.3	1	17 6
11	14	0.1	1	10 4
12	33	0.0	1	18 15
13	16	0.0	1	10 6
14	13	0.0	1	6 7
15	24	0.0	1	13 11
16	18	0.0	1	9 9
17	24	0.0	1	12 12
18	20	0.0	1	11 9
19	12	0.0	1	9 3
20	19	0.0	1	12 7
21	19	0.0	1	14 5
22	20	0.0	1	11 9
23	17	0.0	1	14 3
24	29	0.0	1	17 12
25	37	0.0	1	21 16
26	30	0.0	1	18 12
27	44	0.0	1	20 24
28	59	0.0	1	34 25
29	33	0.0	1	15 18
30	26	0.0	1	17 9
31	25	0.0	1	14 11
32	46	0.0	1	29 17
33	30	0.0	1	14 16
34	49	0.0	1	30 19
35	96	0.0	1	56 40
36	28	0.0	1	16 12
37	46	0.0	1	34 12
38	16	0.0	1	10 6
39	33	0.0	1	22 11
40	24	0.0	1	17 7
41	22	0.0	1	17 5
42	22	0.0	1	16 6
43	37	0.0	1	29 8
44	13	0.0	1	5 8
45	19	0.0	1	11 8
46	28	0.0	1	17 11
47	72	0.0	1	51 21
48	29	0.0	1	15 14
49	46	0.0	1	34 12
50	20	0.0	1	15 5
51	23	0.0	1	17 6
52	45	0.0	1	23 22
53	43	0.0	1	30 13
54	103	0.0	1	61 42
55	38	0.0	1	25 13
56	20	0.0	1	10 10
57	32	0.0	1	28 4
58	24	0.0	1	23 1
59	76	0.0	1	73 3
60	23	0.0	1	22 1
61	18	0.0	1	17 1
62	23	0.0	1	18 5
63	35	0.0	1	31 4
64	28	0.0	1	23 5
65	31	0.0	1	26 5
66	62	0.0	1	48 14
67	50	0.0	1	36 14
68	40	0.0	1	28 12
69	54	0.0	1	34 20
70	34	0.0	1	28 6
71	31	0.0	1	26 5
72	60	0.0	1	50 10
73	106	0.0	1	79 27
74	151	0.0	1	132 19
75	167	0.0	1	141 26
76	317	0.0	1	300 17
77	187	0.0	1	184 3
78	75	0.0	1	73 2
79	61	0.0	1	54 7
80	39	0.0	1	36 3
81	29	0.0	1	28 1
82	19	0.0	1	17 2
83	19	0.0	1	18 1
84	21	0.0	1	21
85	15	0.0	1	14 1
86	25	0.0	1	24 1
87	25	0.0	1	21 4
88	16	0.0	1	14 2
89	23	0.0	1	21 2
90	10	0.0	1	9 1
91	6	0.0	1	6
92	4	0.0	1	4
93	12	0.0	1	10 2
94	22	0.0	1	18 4
95	17	0.0	1	16 1
96	13	0.0	1	12 1
97	5	0.0	1	4 1
98	8	0.0	1	7 1
99	3	0.0	1	3
100	6	0.0	1	5 1
101	3	0.0	1	3
102	3	0.0	1	3
103	3	0.0	1	3
105	3	0.0	1	2 1
106	7	0.0	1	6 1
107	11	0.0	1	8 3
108	6	0.0	1	4 2
109	9	0.0	1	7 2
110	5	0.0	1	3 2
111	4	0.0	1	4
112	5	0.0	1	4 1
113	7	0.0	1	7
114	11	0.0	1	9 2
115	4	0.0	1	3 1
116	5	0.0	1	5
117	5	0.0	1	4 1
118	1	0.0	1	0 1
119	4	0.0	1	4
120	3	0.0	1	3
122	1	0.0	1	1
124	2	0.0	1	2
125	3	0.0	1	3
126	2	0.0	1	2
127	8	0.0	1	7 1
128	2	0.0	1	2
129	7	0.0	1	7
131	1	0.0	1	1
132	2	0.0	1	2
133	10	0.0	1	10
134	5	0.0	1	5
135	4	0.0	1	3 1
136	4	0.0	1	4
137	2	0.0	1	2
141	3	0.0	1	3
142	1	0.0	1	0 1
143	3	0.0	1	3
144	2	0.0	1	2
145	2	0.0	1	2
146	4	0.0	1	3 1
147	5	0.0	1	5
148	4	0.0	1	4
149	2	0.0	1	2
150	1	0.0	1	1
153	1	0.0	1	1
155	1	0.0	1	1
156	8	0.0	1	7 1
157	2	0.0	1	1 1
160	1	0.0	1	1
161	1	0.0	1	1
162	1	0.0	1	1
164	1	0.0	1	1
165	2	0.0	1	2
167	1	0.0	1	1
168	2	0.0	1	2
169	4	0.0	1	3 1
171	1	0.0	1	1
173	1	0.0	1	1
174	4	0.0	1	4
175	2	0.0	1	2
176	1	0.0	1	0 1
177	3	0.0	1	3
179	3	0.0	1	3
182	2	0.0	1	2
184	2	0.0	1	2
185	2	0.0	1	2
187	1	0.0	1	1
188	1	0.0	1	1
189	3	0.0	1	3
190	1	0.0	1	1
191	5	0.0	1	5
192	1	0.0	1	1
193	5	0.0	1	5
195	3	0.0	1	3
196	1	0.0	1	1
197	2	0.0	1	2
198	2	0.0	1	2
199	4	0.0	1	4
200	3	0.0	1	3
201	2	0.0	1	2
202	5	0.0	1	5
203	5	0.0	1	5
205	3	0.0	1	3
206	3	0.0	1	3
207	3	0.0	1	3
208	2	0.0	1	2
209	6	0.0	1	6
210	4	0.0	1	3 1
211	2	0.0	1	2
212	1	0.0	1	1
213	3	0.0	1	3
215	4	0.0	1	4
239	1	0.0	1	1
251	3	0.0	1	0 3

RUN STATISTICS FOR INPUT FILE: E6/host_removal/E6_R1.fastq.gz
=============================================
365277 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E6/adapter_trimmed/E6_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E6/host_removal/E6_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to E6_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E6/host_removal/E6_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E6/host_removal/E6_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 14.751 s (40.383 µs/read; 1.49 M reads/minute).

=== Summary ===

Total reads processed:                 365,277
Reads with adapters:                   137,485 (37.6%)
Reads written (passing filters):       365,277 (100.0%)

Total basepairs processed:    91,684,527 bp
Quality-trimmed:               3,525,612 bp (3.8%)
Total written (filtered):     87,898,594 bp (95.9%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 137485 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 43.7%
  C: 14.1%
  G: 9.3%
  T: 32.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	105725	91319.2	0	105725
2	27692	22829.8	0	27692
3	2236	5707.5	0	2236
4	390	1426.9	0	390
5	30	356.7	0	30
6	7	89.2	0	7
7	14	22.3	0	14
8	7	5.6	0	7
9	13	1.4	0	12 1
10	20	0.3	1	16 4
11	7	0.1	1	5 2
12	19	0.0	1	11 8
13	9	0.0	1	5 4
14	14	0.0	1	12 2
15	7	0.0	1	4 3
16	8	0.0	1	6 2
17	18	0.0	1	13 5
18	3	0.0	1	3
19	11	0.0	1	8 3
20	4	0.0	1	4
21	3	0.0	1	2 1
22	4	0.0	1	4
23	7	0.0	1	4 3
24	24	0.0	1	14 10
25	3	0.0	1	3
26	11	0.0	1	4 7
27	11	0.0	1	5 6
28	12	0.0	1	10 2
29	14	0.0	1	10 4
30	10	0.0	1	6 4
31	8	0.0	1	6 2
32	20	0.0	1	16 4
33	10	0.0	1	6 4
34	20	0.0	1	12 8
35	26	0.0	1	23 3
36	26	0.0	1	21 5
37	19	0.0	1	14 5
38	25	0.0	1	20 5
39	11	0.0	1	7 4
40	21	0.0	1	16 5
41	37	0.0	1	31 6
42	40	0.0	1	37 3
43	41	0.0	1	37 4
44	57	0.0	1	55 2
45	43	0.0	1	40 3
46	22	0.0	1	19 3
47	19	0.0	1	19
48	15	0.0	1	14 1
49	8	0.0	1	7 1
50	7	0.0	1	5 2
51	8	0.0	1	8
52	9	0.0	1	7 2
53	5	0.0	1	5
54	12	0.0	1	9 3
55	1	0.0	1	1
56	6	0.0	1	6
57	23	0.0	1	23
58	16	0.0	1	15 1
59	12	0.0	1	12
60	10	0.0	1	8 2
61	2	0.0	1	2
63	3	0.0	1	3
64	1	0.0	1	1
66	1	0.0	1	1
68	1	0.0	1	1
69	1	0.0	1	0 1
70	2	0.0	1	2
72	1	0.0	1	1
73	5	0.0	1	2 3
74	4	0.0	1	4
75	4	0.0	1	3 1
76	2	0.0	1	1 1
77	9	0.0	1	8 1
78	8	0.0	1	8
79	11	0.0	1	9 2
80	28	0.0	1	24 4
81	49	0.0	1	49
82	42	0.0	1	41 1
83	42	0.0	1	41 1
84	44	0.0	1	42 2
85	21	0.0	1	19 2
86	18	0.0	1	17 1
87	19	0.0	1	15 4
88	11	0.0	1	11
89	7	0.0	1	5 2
90	4	0.0	1	4
91	9	0.0	1	8 1
92	5	0.0	1	4 1
93	3	0.0	1	1 2
94	8	0.0	1	2 6
95	4	0.0	1	4
96	7	0.0	1	5 2
97	5	0.0	1	5
98	3	0.0	1	3
99	3	0.0	1	2 1
100	3	0.0	1	3
101	2	0.0	1	2
103	2	0.0	1	2
104	2	0.0	1	2
105	1	0.0	1	1
106	2	0.0	1	2
107	3	0.0	1	0 3
108	2	0.0	1	1 1
109	5	0.0	1	4 1
110	1	0.0	1	0 1
112	2	0.0	1	2
113	9	0.0	1	6 3
114	3	0.0	1	0 3
115	6	0.0	1	3 3
116	3	0.0	1	2 1
117	2	0.0	1	1 1
118	2	0.0	1	1 1
122	4	0.0	1	3 1
123	1	0.0	1	1
124	1	0.0	1	1
126	3	0.0	1	2 1
127	4	0.0	1	3 1
128	1	0.0	1	1
129	5	0.0	1	4 1
132	3	0.0	1	1 2
133	7	0.0	1	6 1
134	5	0.0	1	4 1
135	2	0.0	1	1 1
136	4	0.0	1	4
139	2	0.0	1	2
141	1	0.0	1	1
143	1	0.0	1	1
145	1	0.0	1	1
146	1	0.0	1	1
147	1	0.0	1	1
148	1	0.0	1	1
149	3	0.0	1	3
150	3	0.0	1	3
151	1	0.0	1	1
153	1	0.0	1	1
154	1	0.0	1	1
155	1	0.0	1	0 1
156	5	0.0	1	5
157	2	0.0	1	1 1
158	1	0.0	1	1
159	1	0.0	1	1
160	2	0.0	1	2
161	1	0.0	1	1
163	1	0.0	1	1
167	2	0.0	1	1 1
168	1	0.0	1	1
174	4	0.0	1	4
175	1	0.0	1	1
176	1	0.0	1	1
177	1	0.0	1	1
178	1	0.0	1	1
179	1	0.0	1	1
182	1	0.0	1	1
185	2	0.0	1	2
187	2	0.0	1	2
189	5	0.0	1	5
191	3	0.0	1	3
194	1	0.0	1	1
195	1	0.0	1	1
197	1	0.0	1	1
198	1	0.0	1	1
199	2	0.0	1	2
201	1	0.0	1	1
202	2	0.0	1	2
204	1	0.0	1	1
205	1	0.0	1	1
206	3	0.0	1	2 1
207	3	0.0	1	3
208	5	0.0	1	4 1
209	4	0.0	1	4
210	2	0.0	1	2
211	2	0.0	1	2
212	2	0.0	1	1 1
213	1	0.0	1	1
214	1	0.0	1	1
215	5	0.0	1	3 2
217	1	0.0	1	0 1
223	1	0.0	1	1
251	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: E6/host_removal/E6_R2.fastq.gz
=============================================
365277 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E6_R1_trimmed.fq.gz and E6_R2_trimmed.fq.gz
file_1: E6_R1_trimmed.fq.gz, file_2: E6_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E6_R1_trimmed.fq.gz and E6_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E6_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E6_R2_val_2.fq.gz

Total number of sequences analysed: 365277

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 483 (0.13%)


  >>> Now running FastQC on the validated data E6_R1_val_1.fq.gz<<<

Started analysis of E6_R1_val_1.fq.gz
Approx 5% complete for E6_R1_val_1.fq.gz
Approx 10% complete for E6_R1_val_1.fq.gz
Approx 15% complete for E6_R1_val_1.fq.gz
Approx 20% complete for E6_R1_val_1.fq.gz
Approx 25% complete for E6_R1_val_1.fq.gz
Approx 30% complete for E6_R1_val_1.fq.gz
Approx 35% complete for E6_R1_val_1.fq.gz
Approx 40% complete for E6_R1_val_1.fq.gz
Approx 45% complete for E6_R1_val_1.fq.gz
Approx 50% complete for E6_R1_val_1.fq.gz
Approx 55% complete for E6_R1_val_1.fq.gz
Approx 60% complete for E6_R1_val_1.fq.gz
Approx 65% complete for E6_R1_val_1.fq.gz
Approx 70% complete for E6_R1_val_1.fq.gz
Approx 75% complete for E6_R1_val_1.fq.gz
Approx 80% complete for E6_R1_val_1.fq.gz
Approx 85% complete for E6_R1_val_1.fq.gz
Approx 90% complete for E6_R1_val_1.fq.gz
Approx 95% complete for E6_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data E6_R2_val_2.fq.gz<<<

Started analysis of E6_R2_val_2.fq.gz
Approx 5% complete for E6_R2_val_2.fq.gz
Approx 10% complete for E6_R2_val_2.fq.gz
Approx 15% complete for E6_R2_val_2.fq.gz
Approx 20% complete for E6_R2_val_2.fq.gz
Approx 25% complete for E6_R2_val_2.fq.gz
Approx 30% complete for E6_R2_val_2.fq.gz
Approx 35% complete for E6_R2_val_2.fq.gz
Approx 40% complete for E6_R2_val_2.fq.gz
Approx 45% complete for E6_R2_val_2.fq.gz
Approx 50% complete for E6_R2_val_2.fq.gz
Approx 55% complete for E6_R2_val_2.fq.gz
Approx 60% complete for E6_R2_val_2.fq.gz
Approx 65% complete for E6_R2_val_2.fq.gz
Approx 70% complete for E6_R2_val_2.fq.gz
Approx 75% complete for E6_R2_val_2.fq.gz
Approx 80% complete for E6_R2_val_2.fq.gz
Approx 85% complete for E6_R2_val_2.fq.gz
Approx 90% complete for E6_R2_val_2.fq.gz
Approx 95% complete for E6_R2_val_2.fq.gz
Deleting both intermediate output files E6_R1_trimmed.fq.gz and E6_R2_trimmed.fq.gz

====================================================================================================

