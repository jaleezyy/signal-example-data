Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E47/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> E47/host_removal/E47_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	3795	AGATCGGAAGAGC	951928	0.40
Nextera	0	CTGTCTCTTATA	951928	0.00
smallRNA	0	TGGAATTCTCGG	951928	0.00
Using Illumina adapter for trimming (count: 3795). Second best hit was Nextera (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E47/adapter_trimmed/E47_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E47/host_removal/E47_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to E47_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E47/host_removal/E47_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E47/host_removal/E47_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 42.818 s (44.980 µs/read; 1.33 M reads/minute).

=== Summary ===

Total reads processed:                 951,928
Reads with adapters:                   329,192 (34.6%)
Reads written (passing filters):       951,928 (100.0%)

Total basepairs processed:   238,933,928 bp
Quality-trimmed:               1,160,337 bp (0.5%)
Total written (filtered):    237,100,045 bp (99.2%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 329192 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 35.7%
  C: 19.3%
  G: 10.4%
  T: 34.6%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	232524	237982.0	0	232524
2	84454	59495.5	0	84454
3	4525	14873.9	0	4525
4	1112	3718.5	0	1112
5	52	929.6	0	52
6	61	232.4	0	61
7	2097	58.1	0	2097
8	54	14.5	0	54
9	68	3.6	0	68
10	51	0.9	1	45 6
11	21	0.2	1	16 5
12	48	0.1	1	41 7
13	13	0.0	1	12 1
14	25	0.0	1	20 5
15	19	0.0	1	13 6
16	12	0.0	1	8 4
17	21	0.0	1	12 9
18	16	0.0	1	15 1
19	22	0.0	1	20 2
20	8	0.0	1	6 2
21	18	0.0	1	14 4
22	22	0.0	1	18 4
23	27	0.0	1	24 3
24	638	0.0	1	621 17
25	75	0.0	1	67 8
26	54	0.0	1	44 10
27	68	0.0	1	59 9
28	50	0.0	1	33 17
29	24	0.0	1	14 10
30	22	0.0	1	17 5
31	14	0.0	1	13 1
32	35	0.0	1	27 8
33	17	0.0	1	11 6
34	34	0.0	1	21 13
35	10	0.0	1	9 1
36	45	0.0	1	43 2
37	316	0.0	1	306 10
38	40	0.0	1	33 7
39	32	0.0	1	31 1
40	39	0.0	1	35 4
41	66	0.0	1	60 6
42	30	0.0	1	24 6
43	54	0.0	1	48 6
44	35	0.0	1	33 2
45	45	0.0	1	43 2
46	34	0.0	1	30 4
47	35	0.0	1	23 12
48	14	0.0	1	9 5
49	39	0.0	1	31 8
50	12	0.0	1	11 1
51	14	0.0	1	13 1
52	19	0.0	1	13 6
53	21	0.0	1	13 8
54	42	0.0	1	24 18
55	27	0.0	1	24 3
56	16	0.0	1	9 7
57	22	0.0	1	19 3
58	12	0.0	1	12
59	9	0.0	1	8 1
60	11	0.0	1	10 1
61	15	0.0	1	14 1
62	11	0.0	1	7 4
63	12	0.0	1	11 1
64	16	0.0	1	14 2
65	18	0.0	1	16 2
66	23	0.0	1	20 3
67	9	0.0	1	6 3
68	23	0.0	1	14 9
69	36	0.0	1	28 8
70	33	0.0	1	31 2
71	32	0.0	1	27 5
72	28	0.0	1	24 4
73	50	0.0	1	43 7
74	57	0.0	1	50 7
75	114	0.0	1	101 13
76	389	0.0	1	379 10
77	247	0.0	1	235 12
78	94	0.0	1	90 4
79	59	0.0	1	58 1
80	36	0.0	1	32 4
81	22	0.0	1	21 1
82	12	0.0	1	12
83	9	0.0	1	8 1
84	9	0.0	1	8 1
85	11	0.0	1	10 1
86	9	0.0	1	8 1
87	10	0.0	1	7 3
88	7	0.0	1	4 3
89	13	0.0	1	12 1
90	9	0.0	1	9
91	9	0.0	1	8 1
92	7	0.0	1	7
93	19	0.0	1	19
94	128	0.0	1	128
95	17	0.0	1	17
96	9	0.0	1	9
97	3	0.0	1	3
98	5	0.0	1	5
99	4	0.0	1	3 1
100	5	0.0	1	4 1
101	2	0.0	1	2
102	4	0.0	1	4
103	6	0.0	1	5 1
104	1	0.0	1	1
105	5	0.0	1	5
106	5	0.0	1	5
107	5	0.0	1	5
108	4	0.0	1	4
109	7	0.0	1	5 2
110	2	0.0	1	2
111	1	0.0	1	1
112	1	0.0	1	1
114	4	0.0	1	2 2
115	3	0.0	1	3
116	4	0.0	1	4
117	7	0.0	1	7
118	3	0.0	1	3
119	1	0.0	1	0 1
120	2	0.0	1	2
121	3	0.0	1	3
122	3	0.0	1	3
123	2	0.0	1	2
124	1	0.0	1	1
125	1	0.0	1	1
126	2	0.0	1	2
127	25	0.0	1	25
128	2	0.0	1	1 1
129	2	0.0	1	2
130	4	0.0	1	4
131	2	0.0	1	2
132	1	0.0	1	1
133	4	0.0	1	3 1
134	4	0.0	1	4
136	1	0.0	1	1
137	1	0.0	1	0 1
138	2	0.0	1	2
139	1	0.0	1	1
144	1	0.0	1	1
147	2	0.0	1	1 1
149	1	0.0	1	1
150	1	0.0	1	1
151	3	0.0	1	3
152	1	0.0	1	1
153	2	0.0	1	2
154	1	0.0	1	1
156	4	0.0	1	4
157	2	0.0	1	2
158	2	0.0	1	2
159	1	0.0	1	1
160	1	0.0	1	0 1
161	1	0.0	1	1
163	1	0.0	1	1
164	1	0.0	1	1
165	2	0.0	1	2
166	4	0.0	1	4
167	3	0.0	1	3
168	2	0.0	1	1 1
169	1	0.0	1	1
170	1	0.0	1	1
174	1	0.0	1	1
175	2	0.0	1	2
176	1	0.0	1	1
178	1	0.0	1	0 1
181	1	0.0	1	1
182	1	0.0	1	1
185	1	0.0	1	1
189	3	0.0	1	3
190	2	0.0	1	2
191	2	0.0	1	2
193	2	0.0	1	2
194	2	0.0	1	2
200	1	0.0	1	1
203	1	0.0	1	1
204	1	0.0	1	1
205	3	0.0	1	3
206	1	0.0	1	1
207	6	0.0	1	6
208	5	0.0	1	5
209	3	0.0	1	3
210	2	0.0	1	2
212	1	0.0	1	1
214	3	0.0	1	3
217	4	0.0	1	4
218	1	0.0	1	0 1
223	1	0.0	1	1
233	1	0.0	1	0 1
236	1	0.0	1	0 1
237	1	0.0	1	0 1
251	12	0.0	1	0 12

RUN STATISTICS FOR INPUT FILE: E47/host_removal/E47_R1.fastq.gz
=============================================
951928 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E47/adapter_trimmed/E47_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E47/host_removal/E47_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to E47_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E47/host_removal/E47_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E47/host_removal/E47_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 49.244 s (51.730 µs/read; 1.16 M reads/minute).

=== Summary ===

Total reads processed:                 951,928
Reads with adapters:                   330,392 (34.7%)
Reads written (passing filters):       951,928 (100.0%)

Total basepairs processed:   238,933,928 bp
Quality-trimmed:               3,514,738 bp (1.5%)
Total written (filtered):    234,838,851 bp (98.3%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 330392 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 41.5%
  C: 17.9%
  G: 9.8%
  T: 30.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	253393	237982.0	0	253393
2	63864	59495.5	0	63864
3	6315	14873.9	0	6315
4	1381	3718.5	0	1381
5	71	929.6	0	71
6	59	232.4	0	59
7	1968	58.1	0	1968
8	23	14.5	0	23
9	50	3.6	0	48 2
10	54	0.9	1	49 5
11	15	0.2	1	11 4
12	33	0.1	1	27 6
13	11	0.0	1	9 2
14	23	0.0	1	23
15	4	0.0	1	4
16	8	0.0	1	7 1
17	15	0.0	1	13 2
18	8	0.0	1	7 1
19	22	0.0	1	19 3
20	9	0.0	1	8 1
21	2	0.0	1	2
22	16	0.0	1	15 1
23	26	0.0	1	17 9
24	653	0.0	1	634 19
25	15	0.0	1	11 4
26	52	0.0	1	49 3
27	51	0.0	1	48 3
28	21	0.0	1	18 3
29	8	0.0	1	7 1
30	27	0.0	1	23 4
31	5	0.0	1	5
32	26	0.0	1	23 3
33	17	0.0	1	15 2
34	18	0.0	1	15 3
35	30	0.0	1	30
36	325	0.0	1	315 10
37	55	0.0	1	50 5
38	14	0.0	1	13 1
39	21	0.0	1	20 1
40	19	0.0	1	19
41	78	0.0	1	76 2
42	81	0.0	1	76 5
43	33	0.0	1	32 1
44	99	0.0	1	96 3
45	70	0.0	1	69 1
46	48	0.0	1	47 1
47	75	0.0	1	75
48	42	0.0	1	40 2
49	20	0.0	1	20
50	26	0.0	1	24 2
51	12	0.0	1	12
52	7	0.0	1	7
53	16	0.0	1	15 1
54	32	0.0	1	31 1
55	7	0.0	1	7
56	31	0.0	1	30 1
57	89	0.0	1	89
58	56	0.0	1	56
59	11	0.0	1	11
60	38	0.0	1	37 1
61	21	0.0	1	21
62	6	0.0	1	6
63	25	0.0	1	25
64	13	0.0	1	13
65	9	0.0	1	9
66	4	0.0	1	4
67	3	0.0	1	3
68	8	0.0	1	8
69	3	0.0	1	3
70	16	0.0	1	16
71	1	0.0	1	1
72	8	0.0	1	8
73	13	0.0	1	12 1
74	15	0.0	1	13 2
75	17	0.0	1	15 2
76	31	0.0	1	29 2
77	26	0.0	1	25 1
78	27	0.0	1	26 1
79	59	0.0	1	49 10
80	101	0.0	1	96 5
81	71	0.0	1	65 6
82	24	0.0	1	20 4
83	11	0.0	1	9 2
84	9	0.0	1	7 2
85	8	0.0	1	8
86	5	0.0	1	3 2
87	3	0.0	1	2 1
88	3	0.0	1	2 1
89	6	0.0	1	5 1
90	2	0.0	1	1 1
92	3	0.0	1	3
93	9	0.0	1	9
94	77	0.0	1	72 5
95	6	0.0	1	6
96	7	0.0	1	3 4
98	5	0.0	1	5
99	3	0.0	1	2 1
100	1	0.0	1	1
101	2	0.0	1	2
102	1	0.0	1	1
103	2	0.0	1	2
104	1	0.0	1	1
105	2	0.0	1	1 1
106	2	0.0	1	0 2
108	1	0.0	1	1
109	1	0.0	1	1
112	2	0.0	1	2
113	2	0.0	1	2
114	3	0.0	1	3
115	2	0.0	1	2
116	4	0.0	1	2 2
117	2	0.0	1	1 1
119	2	0.0	1	1 1
121	4	0.0	1	4
123	1	0.0	1	1
124	1	0.0	1	0 1
127	11	0.0	1	11
130	3	0.0	1	3
131	1	0.0	1	1
132	1	0.0	1	0 1
134	2	0.0	1	2
136	2	0.0	1	1 1
138	1	0.0	1	1
144	1	0.0	1	1
146	2	0.0	1	1 1
147	1	0.0	1	0 1
148	1	0.0	1	1
149	2	0.0	1	2
152	1	0.0	1	1
156	4	0.0	1	3 1
157	2	0.0	1	2
158	1	0.0	1	0 1
160	1	0.0	1	1
161	1	0.0	1	0 1
163	1	0.0	1	1
164	1	0.0	1	1
166	1	0.0	1	0 1
167	2	0.0	1	2
168	1	0.0	1	1
169	1	0.0	1	1
170	1	0.0	1	1
172	1	0.0	1	1
173	2	0.0	1	0 2
174	2	0.0	1	2
175	1	0.0	1	1
176	3	0.0	1	2 1
178	1	0.0	1	1
182	1	0.0	1	1
185	1	0.0	1	1
186	1	0.0	1	1
187	1	0.0	1	1
190	1	0.0	1	1
192	2	0.0	1	1 1
193	2	0.0	1	2
195	1	0.0	1	1
200	1	0.0	1	1
201	1	0.0	1	1
202	2	0.0	1	2
203	2	0.0	1	2
205	1	0.0	1	1
206	2	0.0	1	2
207	2	0.0	1	2
208	5	0.0	1	5
210	3	0.0	1	3
212	2	0.0	1	2
213	1	0.0	1	1
214	1	0.0	1	1
215	2	0.0	1	2
216	1	0.0	1	1
217	1	0.0	1	1
218	1	0.0	1	0 1
223	1	0.0	1	1
249	1	0.0	1	0 1
251	4	0.0	1	0 4

RUN STATISTICS FOR INPUT FILE: E47/host_removal/E47_R2.fastq.gz
=============================================
951928 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E47_R1_trimmed.fq.gz and E47_R2_trimmed.fq.gz
file_1: E47_R1_trimmed.fq.gz, file_2: E47_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E47_R1_trimmed.fq.gz and E47_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E47_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E47_R2_val_2.fq.gz

Total number of sequences analysed: 951928

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1140 (0.12%)


  >>> Now running FastQC on the validated data E47_R1_val_1.fq.gz<<<

Started analysis of E47_R1_val_1.fq.gz
Approx 5% complete for E47_R1_val_1.fq.gz
Approx 10% complete for E47_R1_val_1.fq.gz
Approx 15% complete for E47_R1_val_1.fq.gz
Approx 20% complete for E47_R1_val_1.fq.gz
Approx 25% complete for E47_R1_val_1.fq.gz
Approx 30% complete for E47_R1_val_1.fq.gz
Approx 35% complete for E47_R1_val_1.fq.gz
Approx 40% complete for E47_R1_val_1.fq.gz
Approx 45% complete for E47_R1_val_1.fq.gz
Approx 50% complete for E47_R1_val_1.fq.gz
Approx 55% complete for E47_R1_val_1.fq.gz
Approx 60% complete for E47_R1_val_1.fq.gz
Approx 65% complete for E47_R1_val_1.fq.gz
Approx 70% complete for E47_R1_val_1.fq.gz
Approx 75% complete for E47_R1_val_1.fq.gz
Approx 80% complete for E47_R1_val_1.fq.gz
Approx 85% complete for E47_R1_val_1.fq.gz
Approx 90% complete for E47_R1_val_1.fq.gz
Approx 95% complete for E47_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data E47_R2_val_2.fq.gz<<<

Started analysis of E47_R2_val_2.fq.gz
Approx 5% complete for E47_R2_val_2.fq.gz
Approx 10% complete for E47_R2_val_2.fq.gz
Approx 15% complete for E47_R2_val_2.fq.gz
Approx 20% complete for E47_R2_val_2.fq.gz
Approx 25% complete for E47_R2_val_2.fq.gz
Approx 30% complete for E47_R2_val_2.fq.gz
Approx 35% complete for E47_R2_val_2.fq.gz
Approx 40% complete for E47_R2_val_2.fq.gz
Approx 45% complete for E47_R2_val_2.fq.gz
Approx 50% complete for E47_R2_val_2.fq.gz
Approx 55% complete for E47_R2_val_2.fq.gz
Approx 60% complete for E47_R2_val_2.fq.gz
Approx 65% complete for E47_R2_val_2.fq.gz
Approx 70% complete for E47_R2_val_2.fq.gz
Approx 75% complete for E47_R2_val_2.fq.gz
Approx 80% complete for E47_R2_val_2.fq.gz
Approx 85% complete for E47_R2_val_2.fq.gz
Approx 90% complete for E47_R2_val_2.fq.gz
Approx 95% complete for E47_R2_val_2.fq.gz
Deleting both intermediate output files E47_R1_trimmed.fq.gz and E47_R2_trimmed.fq.gz

====================================================================================================

