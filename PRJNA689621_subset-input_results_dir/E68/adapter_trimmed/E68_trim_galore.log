Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E68/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> E68/host_removal/E68_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	692	AGATCGGAAGAGC	467252	0.15
smallRNA	0	TGGAATTCTCGG	467252	0.00
Nextera	0	CTGTCTCTTATA	467252	0.00
Using Illumina adapter for trimming (count: 692). Second best hit was smallRNA (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E68/adapter_trimmed/E68_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E68/host_removal/E68_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to E68_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E68/host_removal/E68_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E68/host_removal/E68_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 22.291 s (47.706 µs/read; 1.26 M reads/minute).

=== Summary ===

Total reads processed:                 467,252
Reads with adapters:                   154,552 (33.1%)
Reads written (passing filters):       467,252 (100.0%)

Total basepairs processed:   117,280,252 bp
Quality-trimmed:                 346,534 bp (0.3%)
Total written (filtered):    116,683,688 bp (99.5%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 154552 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 37.1%
  C: 18.9%
  G: 10.6%
  T: 33.4%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	112248	116813.0	0	112248
2	37823	29203.2	0	37823
3	2609	7300.8	0	2609
4	681	1825.2	0	681
5	14	456.3	0	14
6	18	114.1	0	18
7	315	28.5	0	315
8	10	7.1	0	10
9	17	1.8	0	17
10	17	0.4	1	13 4
11	8	0.1	1	7 1
12	10	0.0	1	9 1
13	7	0.0	1	7
14	2	0.0	1	1 1
15	1	0.0	1	0 1
16	2	0.0	1	2
17	5	0.0	1	5
18	5	0.0	1	5
20	6	0.0	1	5 1
21	6	0.0	1	4 2
22	9	0.0	1	6 3
23	8	0.0	1	5 3
24	51	0.0	1	49 2
25	8	0.0	1	7 1
26	5	0.0	1	2 3
27	9	0.0	1	7 2
28	11	0.0	1	6 5
29	3	0.0	1	3
30	6	0.0	1	5 1
31	4	0.0	1	4
32	9	0.0	1	6 3
33	1	0.0	1	1
34	10	0.0	1	9 1
35	6	0.0	1	6
36	23	0.0	1	21 2
37	77	0.0	1	75 2
38	18	0.0	1	13 5
39	7	0.0	1	4 3
40	3	0.0	1	3
41	4	0.0	1	4
42	7	0.0	1	7
43	13	0.0	1	11 2
44	5	0.0	1	5
45	4	0.0	1	4
46	2	0.0	1	1 1
47	11	0.0	1	8 3
48	1	0.0	1	1
49	7	0.0	1	6 1
50	5	0.0	1	4 1
51	4	0.0	1	3 1
52	4	0.0	1	3 1
53	8	0.0	1	7 1
54	18	0.0	1	11 7
55	3	0.0	1	3
56	2	0.0	1	2
57	1	0.0	1	1
58	2	0.0	1	2
59	14	0.0	1	14
60	1	0.0	1	1
61	2	0.0	1	2
62	2	0.0	1	2
63	9	0.0	1	8 1
66	9	0.0	1	7 2
67	2	0.0	1	2
68	5	0.0	1	2 3
69	13	0.0	1	12 1
70	4	0.0	1	4
71	5	0.0	1	4 1
72	5	0.0	1	5
73	9	0.0	1	9
74	11	0.0	1	9 2
75	15	0.0	1	9 6
76	87	0.0	1	81 6
77	34	0.0	1	32 2
78	26	0.0	1	24 2
79	10	0.0	1	8 2
80	4	0.0	1	3 1
81	4	0.0	1	2 2
83	4	0.0	1	4
84	3	0.0	1	3
85	3	0.0	1	2 1
86	5	0.0	1	5
87	4	0.0	1	4
88	1	0.0	1	1
89	1	0.0	1	1
90	1	0.0	1	1
91	1	0.0	1	1
92	2	0.0	1	2
93	1	0.0	1	1
94	14	0.0	1	13 1
95	3	0.0	1	3
97	1	0.0	1	1
98	2	0.0	1	1 1
100	2	0.0	1	1 1
102	1	0.0	1	0 1
103	3	0.0	1	3
106	1	0.0	1	1
109	3	0.0	1	3
111	1	0.0	1	0 1
113	1	0.0	1	1
114	2	0.0	1	2
116	2	0.0	1	2
117	1	0.0	1	1
123	1	0.0	1	0 1
127	1	0.0	1	1
128	2	0.0	1	1 1
136	1	0.0	1	1
143	3	0.0	1	3
144	1	0.0	1	1
148	1	0.0	1	1
152	1	0.0	1	1
155	1	0.0	1	1
156	2	0.0	1	1 1
158	2	0.0	1	2
160	1	0.0	1	0 1
168	1	0.0	1	1
175	1	0.0	1	1
177	1	0.0	1	0 1
180	1	0.0	1	0 1
186	1	0.0	1	0 1
191	2	0.0	1	1 1
192	1	0.0	1	1
193	1	0.0	1	1
199	1	0.0	1	1
207	2	0.0	1	1 1
208	1	0.0	1	1
209	1	0.0	1	1
236	1	0.0	1	0 1
250	2	0.0	1	0 2
251	11	0.0	1	0 11

RUN STATISTICS FOR INPUT FILE: E68/host_removal/E68_R1.fastq.gz
=============================================
467252 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E68/adapter_trimmed/E68_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E68/host_removal/E68_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to E68_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E68/host_removal/E68_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E68/host_removal/E68_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 22.495 s (48.143 µs/read; 1.25 M reads/minute).

=== Summary ===

Total reads processed:                 467,252
Reads with adapters:                   155,925 (33.4%)
Reads written (passing filters):       467,252 (100.0%)

Total basepairs processed:   117,280,252 bp
Quality-trimmed:               1,348,872 bp (1.2%)
Total written (filtered):    115,703,331 bp (98.7%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 155925 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 42.2%
  C: 18.0%
  G: 9.8%
  T: 29.9%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
1	121000	116813.0	0	121000
2	29823	29203.2	0	29823
3	3427	7300.8	0	3427
4	718	1825.2	0	718
5	20	456.3	0	20
6	12	114.1	0	12
7	296	28.5	0	296
8	3	7.1	0	3
9	16	1.8	0	16
10	11	0.4	1	10 1
11	4	0.1	1	4
12	13	0.0	1	13
14	6	0.0	1	3 3
15	1	0.0	1	1
17	5	0.0	1	5
19	8	0.0	1	7 1
20	4	0.0	1	4
21	4	0.0	1	4
22	7	0.0	1	7
23	8	0.0	1	8
24	49	0.0	1	46 3
25	3	0.0	1	2 1
26	7	0.0	1	5 2
27	7	0.0	1	4 3
28	9	0.0	1	8 1
29	1	0.0	1	1
30	11	0.0	1	10 1
31	3	0.0	1	3
32	10	0.0	1	10
33	3	0.0	1	1 2
34	24	0.0	1	23 1
35	3	0.0	1	3
36	45	0.0	1	44 1
37	23	0.0	1	21 2
38	14	0.0	1	13 1
39	4	0.0	1	4
40	5	0.0	1	4 1
41	1	0.0	1	1
42	11	0.0	1	10 1
43	22	0.0	1	22
44	21	0.0	1	20 1
45	21	0.0	1	21
46	6	0.0	1	6
47	19	0.0	1	17 2
48	13	0.0	1	12 1
49	6	0.0	1	5 1
50	6	0.0	1	5 1
51	2	0.0	1	2
53	3	0.0	1	3
54	6	0.0	1	6
55	1	0.0	1	1
56	5	0.0	1	5
57	14	0.0	1	14
58	12	0.0	1	12
59	2	0.0	1	1 1
60	3	0.0	1	3
62	1	0.0	1	1
63	1	0.0	1	1
65	1	0.0	1	1
66	2	0.0	1	2
69	1	0.0	1	1
74	2	0.0	1	2
75	1	0.0	1	1
76	1	0.0	1	1
77	2	0.0	1	1 1
79	1	0.0	1	1
80	15	0.0	1	13 2
81	11	0.0	1	6 5
82	10	0.0	1	8 2
83	10	0.0	1	7 3
84	3	0.0	1	2 1
85	8	0.0	1	4 4
86	1	0.0	1	1
87	2	0.0	1	1 1
88	3	0.0	1	2 1
89	4	0.0	1	3 1
90	1	0.0	1	1
93	2	0.0	1	1 1
94	18	0.0	1	18
95	1	0.0	1	1
96	2	0.0	1	2
97	1	0.0	1	0 1
105	1	0.0	1	1
106	1	0.0	1	0 1
108	2	0.0	1	1 1
109	2	0.0	1	2
110	1	0.0	1	1
111	1	0.0	1	1
113	1	0.0	1	0 1
124	1	0.0	1	1
125	1	0.0	1	0 1
127	1	0.0	1	1
136	1	0.0	1	1
141	1	0.0	1	1
149	1	0.0	1	0 1
152	1	0.0	1	1
154	1	0.0	1	1
155	2	0.0	1	1 1
156	2	0.0	1	1 1
158	1	0.0	1	0 1
160	1	0.0	1	1
167	1	0.0	1	1
173	2	0.0	1	0 2
193	1	0.0	1	0 1
195	1	0.0	1	0 1
200	1	0.0	1	1
202	1	0.0	1	1
207	1	0.0	1	1
208	1	0.0	1	1
209	1	0.0	1	0 1
211	1	0.0	1	1
251	5	0.0	1	0 5

RUN STATISTICS FOR INPUT FILE: E68/host_removal/E68_R2.fastq.gz
=============================================
467252 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E68_R1_trimmed.fq.gz and E68_R2_trimmed.fq.gz
file_1: E68_R1_trimmed.fq.gz, file_2: E68_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E68_R1_trimmed.fq.gz and E68_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E68_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E68_R2_val_2.fq.gz

Total number of sequences analysed: 467252

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 647 (0.14%)


  >>> Now running FastQC on the validated data E68_R1_val_1.fq.gz<<<

Started analysis of E68_R1_val_1.fq.gz
Approx 5% complete for E68_R1_val_1.fq.gz
Approx 10% complete for E68_R1_val_1.fq.gz
Approx 15% complete for E68_R1_val_1.fq.gz
Approx 20% complete for E68_R1_val_1.fq.gz
Approx 25% complete for E68_R1_val_1.fq.gz
Approx 30% complete for E68_R1_val_1.fq.gz
Approx 35% complete for E68_R1_val_1.fq.gz
Approx 40% complete for E68_R1_val_1.fq.gz
Approx 45% complete for E68_R1_val_1.fq.gz
Approx 50% complete for E68_R1_val_1.fq.gz
Approx 55% complete for E68_R1_val_1.fq.gz
Approx 60% complete for E68_R1_val_1.fq.gz
Approx 65% complete for E68_R1_val_1.fq.gz
Approx 70% complete for E68_R1_val_1.fq.gz
Approx 75% complete for E68_R1_val_1.fq.gz
Approx 80% complete for E68_R1_val_1.fq.gz
Approx 85% complete for E68_R1_val_1.fq.gz
Approx 90% complete for E68_R1_val_1.fq.gz
Approx 95% complete for E68_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data E68_R2_val_2.fq.gz<<<

Started analysis of E68_R2_val_2.fq.gz
Approx 5% complete for E68_R2_val_2.fq.gz
Approx 10% complete for E68_R2_val_2.fq.gz
Approx 15% complete for E68_R2_val_2.fq.gz
Approx 20% complete for E68_R2_val_2.fq.gz
Approx 25% complete for E68_R2_val_2.fq.gz
Approx 30% complete for E68_R2_val_2.fq.gz
Approx 35% complete for E68_R2_val_2.fq.gz
Approx 40% complete for E68_R2_val_2.fq.gz
Approx 45% complete for E68_R2_val_2.fq.gz
Approx 50% complete for E68_R2_val_2.fq.gz
Approx 55% complete for E68_R2_val_2.fq.gz
Approx 60% complete for E68_R2_val_2.fq.gz
Approx 65% complete for E68_R2_val_2.fq.gz
Approx 70% complete for E68_R2_val_2.fq.gz
Approx 75% complete for E68_R2_val_2.fq.gz
Approx 80% complete for E68_R2_val_2.fq.gz
Approx 85% complete for E68_R2_val_2.fq.gz
Approx 90% complete for E68_R2_val_2.fq.gz
Approx 95% complete for E68_R2_val_2.fq.gz
Deleting both intermediate output files E68_R1_trimmed.fq.gz and E68_R2_trimmed.fq.gz

====================================================================================================

