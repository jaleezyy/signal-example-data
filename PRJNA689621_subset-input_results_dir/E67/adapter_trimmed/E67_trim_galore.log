Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E67/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> E67/host_removal/E67_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	3841	AGATCGGAAGAGC	925319	0.42
smallRNA	0	TGGAATTCTCGG	925319	0.00
Nextera	0	CTGTCTCTTATA	925319	0.00
Using Illumina adapter for trimming (count: 3841). Second best hit was smallRNA (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E67/adapter_trimmed/E67_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E67/host_removal/E67_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to E67_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E67/host_removal/E67_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E67/host_removal/E67_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 39.562 s (42.755 µs/read; 1.40 M reads/minute).

=== Summary ===

Total reads processed:                 925,319
Reads with adapters:                   316,162 (34.2%)
Reads written (passing filters):       925,319 (100.0%)

Total basepairs processed:   232,255,069 bp
Quality-trimmed:                 572,756 bp (0.2%)
Total written (filtered):    231,034,580 bp (99.5%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 316162 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 37.3%
  C: 19.8%
  G: 10.5%
  T: 32.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	224477	231329.8	0	224477
2	75822	57832.4	0	75822
3	7350	14458.1	0	7350
4	3558	3614.5	0	3558
5	51	903.6	0	51
6	35	225.9	0	35
7	636	56.5	0	636
8	24	14.1	0	24
9	53	3.5	0	53
10	38	0.9	1	35 3
11	24	0.2	1	22 2
12	34	0.1	1	32 2
13	28	0.0	1	27 1
14	27	0.0	1	25 2
15	19	0.0	1	18 1
16	28	0.0	1	26 2
17	22	0.0	1	20 2
18	38	0.0	1	34 4
19	22	0.0	1	20 2
20	32	0.0	1	28 4
21	18	0.0	1	17 1
22	22	0.0	1	20 2
23	34	0.0	1	28 6
24	687	0.0	1	670 17
25	92	0.0	1	88 4
26	46	0.0	1	44 2
27	26	0.0	1	24 2
28	40	0.0	1	36 4
29	22	0.0	1	21 1
30	33	0.0	1	32 1
31	23	0.0	1	21 2
32	37	0.0	1	36 1
33	20	0.0	1	12 8
34	40	0.0	1	36 4
35	47	0.0	1	42 5
36	35	0.0	1	33 2
37	57	0.0	1	53 4
38	43	0.0	1	41 2
39	25	0.0	1	22 3
40	9	0.0	1	6 3
41	48	0.0	1	44 4
42	79	0.0	1	77 2
43	98	0.0	1	94 4
44	38	0.0	1	36 2
45	54	0.0	1	54
46	34	0.0	1	34
47	37	0.0	1	31 6
48	15	0.0	1	14 1
49	21	0.0	1	19 2
50	10	0.0	1	9 1
51	17	0.0	1	16 1
52	36	0.0	1	31 5
53	52	0.0	1	48 4
54	75	0.0	1	63 12
55	18	0.0	1	17 1
56	7	0.0	1	6 1
57	25	0.0	1	19 6
58	6	0.0	1	6
59	26	0.0	1	23 3
60	11	0.0	1	11
61	10	0.0	1	9 1
62	9	0.0	1	9
63	14	0.0	1	13 1
64	7	0.0	1	6 1
65	6	0.0	1	5 1
66	16	0.0	1	15 1
67	9	0.0	1	8 1
68	28	0.0	1	26 2
69	74	0.0	1	72 2
70	16	0.0	1	14 2
71	21	0.0	1	21
72	19	0.0	1	16 3
73	40	0.0	1	34 6
74	44	0.0	1	37 7
75	85	0.0	1	76 9
76	356	0.0	1	337 19
77	237	0.0	1	231 6
78	135	0.0	1	134 1
79	50	0.0	1	48 2
80	46	0.0	1	43 3
81	37	0.0	1	37
82	24	0.0	1	22 2
83	16	0.0	1	15 1
84	16	0.0	1	16
85	20	0.0	1	18 2
86	16	0.0	1	15 1
87	13	0.0	1	12 1
88	10	0.0	1	10
89	22	0.0	1	19 3
90	5	0.0	1	4 1
91	9	0.0	1	9
92	9	0.0	1	8 1
93	12	0.0	1	12
94	81	0.0	1	78 3
95	15	0.0	1	15
96	15	0.0	1	15
97	9	0.0	1	7 2
98	3	0.0	1	3
99	5	0.0	1	3 2
100	3	0.0	1	3
101	6	0.0	1	5 1
102	5	0.0	1	5
103	1	0.0	1	1
104	1	0.0	1	1
105	3	0.0	1	3
106	1	0.0	1	1
107	7	0.0	1	7
108	6	0.0	1	6
109	4	0.0	1	4
110	1	0.0	1	1
111	6	0.0	1	5 1
112	2	0.0	1	2
113	6	0.0	1	4 2
114	5	0.0	1	5
115	4	0.0	1	4
116	4	0.0	1	4
117	1	0.0	1	1
118	1	0.0	1	0 1
120	1	0.0	1	0 1
123	2	0.0	1	2
124	1	0.0	1	1
125	3	0.0	1	2 1
126	1	0.0	1	1
127	14	0.0	1	13 1
129	3	0.0	1	3
130	4	0.0	1	4
131	3	0.0	1	1 2
132	1	0.0	1	1
133	3	0.0	1	3
134	3	0.0	1	3
136	1	0.0	1	1
137	1	0.0	1	1
138	1	0.0	1	1
141	5	0.0	1	5
142	1	0.0	1	1
143	2	0.0	1	2
146	2	0.0	1	2
147	2	0.0	1	2
151	1	0.0	1	1
152	4	0.0	1	4
153	4	0.0	1	3 1
154	2	0.0	1	1 1
155	1	0.0	1	1
156	4	0.0	1	4
157	2	0.0	1	2
158	1	0.0	1	0 1
159	4	0.0	1	4
160	2	0.0	1	2
161	3	0.0	1	3
162	2	0.0	1	2
163	1	0.0	1	1
164	6	0.0	1	5 1
165	2	0.0	1	2
166	4	0.0	1	3 1
167	5	0.0	1	5
169	2	0.0	1	2
170	3	0.0	1	3
171	1	0.0	1	1
172	2	0.0	1	2
173	2	0.0	1	1 1
174	2	0.0	1	1 1
176	1	0.0	1	1
177	1	0.0	1	1
179	1	0.0	1	1
180	1	0.0	1	1
181	3	0.0	1	3
182	2	0.0	1	1 1
184	3	0.0	1	2 1
185	2	0.0	1	1 1
188	1	0.0	1	1
189	1	0.0	1	1
190	1	0.0	1	1
192	1	0.0	1	1
193	2	0.0	1	2
195	2	0.0	1	2
197	1	0.0	1	1
199	1	0.0	1	1
200	4	0.0	1	4
202	1	0.0	1	0 1
204	1	0.0	1	1
211	1	0.0	1	1
226	1	0.0	1	0 1
234	1	0.0	1	1
245	1	0.0	1	0 1
246	1	0.0	1	0 1
250	1	0.0	1	0 1
251	5	0.0	1	0 5

RUN STATISTICS FOR INPUT FILE: E67/host_removal/E67_R1.fastq.gz
=============================================
925319 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E67/adapter_trimmed/E67_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E67/host_removal/E67_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to E67_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E67/host_removal/E67_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E67/host_removal/E67_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 43.742 s (47.273 µs/read; 1.27 M reads/minute).

=== Summary ===

Total reads processed:                 925,319
Reads with adapters:                   308,984 (33.4%)
Reads written (passing filters):       925,319 (100.0%)

Total basepairs processed:   232,255,069 bp
Quality-trimmed:               2,484,613 bp (1.1%)
Total written (filtered):    229,193,085 bp (98.7%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 308984 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 42.5%
  C: 18.3%
  G: 9.8%
  T: 29.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	232311	231329.8	0	232311
2	61260	57832.4	0	61260
3	8346	14458.1	0	8346
4	2665	3614.5	0	2665
5	74	903.6	0	74
6	36	225.9	0	36
7	616	56.5	0	616
8	14	14.1	0	14
9	43	3.5	0	42 1
10	49	0.9	1	45 4
11	22	0.2	1	16 6
12	41	0.1	1	33 8
13	7	0.0	1	6 1
14	36	0.0	1	35 1
15	12	0.0	1	10 2
16	22	0.0	1	21 1
17	35	0.0	1	32 3
18	12	0.0	1	10 2
19	33	0.0	1	30 3
20	30	0.0	1	28 2
21	7	0.0	1	6 1
22	15	0.0	1	15
23	37	0.0	1	36 1
24	738	0.0	1	707 31
25	13	0.0	1	10 3
26	54	0.0	1	51 3
27	37	0.0	1	34 3
28	40	0.0	1	36 4
29	12	0.0	1	12
30	65	0.0	1	59 6
31	13	0.0	1	12 1
32	38	0.0	1	37 1
33	26	0.0	1	23 3
34	39	0.0	1	38 1
35	31	0.0	1	27 4
36	79	0.0	1	76 3
37	20	0.0	1	20
38	21	0.0	1	19 2
39	45	0.0	1	44 1
40	11	0.0	1	11
41	24	0.0	1	24
42	105	0.0	1	99 6
43	56	0.0	1	54 2
44	72	0.0	1	64 8
45	100	0.0	1	95 5
46	42	0.0	1	39 3
47	64	0.0	1	64
48	36	0.0	1	35 1
49	14	0.0	1	13 1
50	10	0.0	1	9 1
51	27	0.0	1	26 1
52	33	0.0	1	33
53	41	0.0	1	41
54	74	0.0	1	73 1
55	11	0.0	1	11
56	33	0.0	1	32 1
57	75	0.0	1	74 1
58	44	0.0	1	42 2
59	10	0.0	1	10
60	32	0.0	1	32
61	11	0.0	1	11
62	8	0.0	1	8
63	20	0.0	1	18 2
64	9	0.0	1	8 1
65	11	0.0	1	10 1
66	4	0.0	1	4
67	7	0.0	1	7
68	10	0.0	1	10
69	26	0.0	1	24 2
70	8	0.0	1	7 1
71	5	0.0	1	5
72	11	0.0	1	11
73	16	0.0	1	16
74	13	0.0	1	12 1
75	25	0.0	1	24 1
76	26	0.0	1	26
77	43	0.0	1	40 3
78	53	0.0	1	49 4
79	97	0.0	1	84 13
80	187	0.0	1	182 5
81	115	0.0	1	110 5
82	46	0.0	1	43 3
83	30	0.0	1	26 4
84	19	0.0	1	15 4
85	12	0.0	1	11 1
86	7	0.0	1	7
87	3	0.0	1	2 1
88	5	0.0	1	5
89	10	0.0	1	9 1
90	2	0.0	1	1 1
91	1	0.0	1	1
92	2	0.0	1	1 1
93	6	0.0	1	6
94	67	0.0	1	65 2
95	9	0.0	1	9
96	5	0.0	1	3 2
97	2	0.0	1	2
98	1	0.0	1	1
99	6	0.0	1	4 2
100	1	0.0	1	1
101	3	0.0	1	3
102	3	0.0	1	3
103	2	0.0	1	2
104	1	0.0	1	1
105	4	0.0	1	4
106	1	0.0	1	1
108	2	0.0	1	2
109	2	0.0	1	1 1
111	2	0.0	1	2
112	1	0.0	1	0 1
113	2	0.0	1	0 2
114	3	0.0	1	0 3
116	1	0.0	1	1
121	1	0.0	1	0 1
123	2	0.0	1	0 2
125	1	0.0	1	1
126	1	0.0	1	1
127	9	0.0	1	9
128	2	0.0	1	2
129	1	0.0	1	1
134	3	0.0	1	3
136	5	0.0	1	4 1
137	1	0.0	1	1
138	1	0.0	1	0 1
139	1	0.0	1	1
141	2	0.0	1	2
145	1	0.0	1	1
146	1	0.0	1	1
147	3	0.0	1	3
148	1	0.0	1	1
151	1	0.0	1	0 1
152	2	0.0	1	2
153	1	0.0	1	1
154	1	0.0	1	1
155	3	0.0	1	2 1
156	7	0.0	1	7
157	2	0.0	1	2
158	2	0.0	1	1 1
159	2	0.0	1	2
160	1	0.0	1	1
161	4	0.0	1	4
162	2	0.0	1	1 1
165	3	0.0	1	3
166	1	0.0	1	1
167	2	0.0	1	2
168	2	0.0	1	2
169	1	0.0	1	1
170	1	0.0	1	1
172	3	0.0	1	3
173	1	0.0	1	1
174	3	0.0	1	1 2
175	1	0.0	1	1
176	2	0.0	1	2
177	2	0.0	1	2
179	1	0.0	1	1
184	1	0.0	1	0 1
190	2	0.0	1	2
193	1	0.0	1	1
195	1	0.0	1	1
197	2	0.0	1	2
199	1	0.0	1	1
234	1	0.0	1	1
251	14	0.0	1	0 14

RUN STATISTICS FOR INPUT FILE: E67/host_removal/E67_R2.fastq.gz
=============================================
925319 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E67_R1_trimmed.fq.gz and E67_R2_trimmed.fq.gz
file_1: E67_R1_trimmed.fq.gz, file_2: E67_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E67_R1_trimmed.fq.gz and E67_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E67_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E67_R2_val_2.fq.gz

Total number of sequences analysed: 925319

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1203 (0.13%)


  >>> Now running FastQC on the validated data E67_R1_val_1.fq.gz<<<

Started analysis of E67_R1_val_1.fq.gz
Approx 5% complete for E67_R1_val_1.fq.gz
Approx 10% complete for E67_R1_val_1.fq.gz
Approx 15% complete for E67_R1_val_1.fq.gz
Approx 20% complete for E67_R1_val_1.fq.gz
Approx 25% complete for E67_R1_val_1.fq.gz
Approx 30% complete for E67_R1_val_1.fq.gz
Approx 35% complete for E67_R1_val_1.fq.gz
Approx 40% complete for E67_R1_val_1.fq.gz
Approx 45% complete for E67_R1_val_1.fq.gz
Approx 50% complete for E67_R1_val_1.fq.gz
Approx 55% complete for E67_R1_val_1.fq.gz
Approx 60% complete for E67_R1_val_1.fq.gz
Approx 65% complete for E67_R1_val_1.fq.gz
Approx 70% complete for E67_R1_val_1.fq.gz
Approx 75% complete for E67_R1_val_1.fq.gz
Approx 80% complete for E67_R1_val_1.fq.gz
Approx 85% complete for E67_R1_val_1.fq.gz
Approx 90% complete for E67_R1_val_1.fq.gz
Approx 95% complete for E67_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data E67_R2_val_2.fq.gz<<<

Started analysis of E67_R2_val_2.fq.gz
Approx 5% complete for E67_R2_val_2.fq.gz
Approx 10% complete for E67_R2_val_2.fq.gz
Approx 15% complete for E67_R2_val_2.fq.gz
Approx 20% complete for E67_R2_val_2.fq.gz
Approx 25% complete for E67_R2_val_2.fq.gz
Approx 30% complete for E67_R2_val_2.fq.gz
Approx 35% complete for E67_R2_val_2.fq.gz
Approx 40% complete for E67_R2_val_2.fq.gz
Approx 45% complete for E67_R2_val_2.fq.gz
Approx 50% complete for E67_R2_val_2.fq.gz
Approx 55% complete for E67_R2_val_2.fq.gz
Approx 60% complete for E67_R2_val_2.fq.gz
Approx 65% complete for E67_R2_val_2.fq.gz
Approx 70% complete for E67_R2_val_2.fq.gz
Approx 75% complete for E67_R2_val_2.fq.gz
Approx 80% complete for E67_R2_val_2.fq.gz
Approx 85% complete for E67_R2_val_2.fq.gz
Approx 90% complete for E67_R2_val_2.fq.gz
Approx 95% complete for E67_R2_val_2.fq.gz
Deleting both intermediate output files E67_R1_trimmed.fq.gz and E67_R2_trimmed.fq.gz

====================================================================================================

