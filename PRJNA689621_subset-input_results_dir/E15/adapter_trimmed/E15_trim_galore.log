Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E15/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> E15/host_removal/E15_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	457	AGATCGGAAGAGC	277056	0.16
smallRNA	0	TGGAATTCTCGG	277056	0.00
Nextera	0	CTGTCTCTTATA	277056	0.00
Using Illumina adapter for trimming (count: 457). Second best hit was smallRNA (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E15/adapter_trimmed/E15_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E15/host_removal/E15_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to E15_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E15/host_removal/E15_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E15/host_removal/E15_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 12.010 s (43.349 µs/read; 1.38 M reads/minute).

=== Summary ===

Total reads processed:                 277,056
Reads with adapters:                    91,137 (32.9%)
Reads written (passing filters):       277,056 (100.0%)

Total basepairs processed:    69,541,056 bp
Quality-trimmed:                 215,113 bp (0.3%)
Total written (filtered):     69,173,370 bp (99.5%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 91137 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 38.2%
  C: 18.8%
  G: 10.0%
  T: 33.0%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
1	66950	69264.0	0	66950
2	21711	17316.0	0	21711
3	1461	4329.0	0	1461
4	395	1082.2	0	395
5	3	270.6	0	3
6	5	67.6	0	5
7	44	16.9	0	44
8	1	4.2	0	1
9	3	1.1	0	3
10	4	0.3	1	3 1
12	1	0.0	1	1
13	5	0.0	1	4 1
14	1	0.0	1	0 1
15	1	0.0	1	1
16	3	0.0	1	3
17	4	0.0	1	2 2
18	2	0.0	1	2
19	1	0.0	1	1
20	2	0.0	1	2
21	3	0.0	1	3
22	4	0.0	1	1 3
23	8	0.0	1	8
24	101	0.0	1	96 5
25	12	0.0	1	12
26	9	0.0	1	7 2
27	2	0.0	1	2
28	12	0.0	1	9 3
29	5	0.0	1	3 2
30	8	0.0	1	5 3
31	2	0.0	1	2
32	4	0.0	1	3 1
33	2	0.0	1	2
34	4	0.0	1	2 2
35	5	0.0	1	5
36	6	0.0	1	6
37	13	0.0	1	11 2
38	1	0.0	1	1
39	2	0.0	1	2
40	6	0.0	1	6
41	3	0.0	1	2 1
42	4	0.0	1	4
43	7	0.0	1	5 2
44	2	0.0	1	2
45	1	0.0	1	1
46	4	0.0	1	4
47	2	0.0	1	2
48	2	0.0	1	1 1
49	4	0.0	1	2 2
50	4	0.0	1	4
51	1	0.0	1	1
52	2	0.0	1	2
53	4	0.0	1	3 1
54	6	0.0	1	3 3
55	3	0.0	1	3
56	1	0.0	1	1
57	1	0.0	1	1
58	1	0.0	1	1
59	2	0.0	1	2
61	2	0.0	1	1 1
62	1	0.0	1	1
63	1	0.0	1	1
65	4	0.0	1	4
66	1	0.0	1	0 1
68	2	0.0	1	2
69	7	0.0	1	6 1
70	2	0.0	1	2
71	3	0.0	1	2 1
72	2	0.0	1	2
73	5	0.0	1	5
74	10	0.0	1	8 2
75	18	0.0	1	11 7
76	52	0.0	1	44 8
77	36	0.0	1	29 7
78	17	0.0	1	14 3
79	10	0.0	1	7 3
80	6	0.0	1	6
81	4	0.0	1	3 1
82	3	0.0	1	2 1
83	1	0.0	1	1
84	1	0.0	1	1
85	1	0.0	1	1
86	2	0.0	1	2
87	2	0.0	1	1 1
88	1	0.0	1	1
89	2	0.0	1	2
91	1	0.0	1	0 1
93	2	0.0	1	2
94	16	0.0	1	15 1
95	4	0.0	1	1 3
96	1	0.0	1	0 1
97	2	0.0	1	2
100	1	0.0	1	1
104	2	0.0	1	2
106	2	0.0	1	2
109	1	0.0	1	1
112	1	0.0	1	1
113	2	0.0	1	1 1
120	1	0.0	1	0 1
122	1	0.0	1	0 1
125	1	0.0	1	0 1
127	2	0.0	1	2
131	1	0.0	1	1
135	1	0.0	1	1
138	2	0.0	1	1 1
139	2	0.0	1	0 2
149	1	0.0	1	1
151	1	0.0	1	0 1
153	1	0.0	1	1
154	1	0.0	1	1
156	1	0.0	1	1
169	1	0.0	1	1
173	1	0.0	1	0 1
176	1	0.0	1	1
177	1	0.0	1	0 1
184	1	0.0	1	0 1
186	1	0.0	1	0 1
190	1	0.0	1	0 1
195	1	0.0	1	1
198	1	0.0	1	1
202	1	0.0	1	0 1
203	1	0.0	1	1
206	1	0.0	1	1
211	1	0.0	1	1
214	1	0.0	1	1
220	1	0.0	1	1
229	1	0.0	1	0 1
250	2	0.0	1	0 2
251	12	0.0	1	0 12

RUN STATISTICS FOR INPUT FILE: E15/host_removal/E15_R1.fastq.gz
=============================================
277056 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E15/adapter_trimmed/E15_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E15/host_removal/E15_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to E15_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E15/host_removal/E15_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E15/host_removal/E15_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 13.733 s (49.567 µs/read; 1.21 M reads/minute).

=== Summary ===

Total reads processed:                 277,056
Reads with adapters:                    93,371 (33.7%)
Reads written (passing filters):       277,056 (100.0%)

Total basepairs processed:    69,541,056 bp
Quality-trimmed:                 850,829 bp (1.2%)
Total written (filtered):     68,551,421 bp (98.6%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 93371 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 43.1%
  C: 17.5%
  G: 9.7%
  T: 29.6%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
1	73640	69264.0	0	73640
2	16780	17316.0	0	16780
3	2074	4329.0	0	2074
4	394	1082.2	0	394
5	11	270.6	0	11
6	4	67.6	0	4
7	42	16.9	0	42
8	2	4.2	0	2
9	2	1.1	0	2
10	3	0.3	1	2 1
11	1	0.1	1	0 1
12	3	0.0	1	3
13	1	0.0	1	1
14	2	0.0	1	2
15	3	0.0	1	2 1
16	1	0.0	1	1
17	1	0.0	1	1
18	1	0.0	1	1
21	1	0.0	1	1
22	2	0.0	1	1 1
23	9	0.0	1	7 2
24	100	0.0	1	97 3
25	4	0.0	1	4
26	5	0.0	1	4 1
27	4	0.0	1	4
28	7	0.0	1	6 1
29	2	0.0	1	1 1
30	7	0.0	1	6 1
32	1	0.0	1	0 1
33	2	0.0	1	2
34	1	0.0	1	1
35	7	0.0	1	6 1
36	12	0.0	1	9 3
37	4	0.0	1	4
38	4	0.0	1	4
39	3	0.0	1	2 1
40	9	0.0	1	8 1
41	8	0.0	1	7 1
42	13	0.0	1	11 2
43	11	0.0	1	10 1
44	18	0.0	1	17 1
45	4	0.0	1	4
46	10	0.0	1	8 2
47	9	0.0	1	8 1
48	5	0.0	1	5
49	2	0.0	1	2
50	4	0.0	1	4
53	3	0.0	1	3
54	4	0.0	1	4
55	1	0.0	1	1
57	10	0.0	1	10
58	7	0.0	1	6 1
60	1	0.0	1	1
62	1	0.0	1	1
69	2	0.0	1	2
74	1	0.0	1	0 1
77	1	0.0	1	0 1
78	4	0.0	1	3 1
79	4	0.0	1	3 1
80	4	0.0	1	2 2
81	9	0.0	1	6 3
82	13	0.0	1	9 4
83	6	0.0	1	3 3
84	6	0.0	1	2 4
85	2	0.0	1	0 2
86	4	0.0	1	1 3
87	4	0.0	1	2 2
88	1	0.0	1	0 1
90	1	0.0	1	0 1
92	1	0.0	1	0 1
94	7	0.0	1	5 2
95	3	0.0	1	2 1
97	2	0.0	1	1 1
102	2	0.0	1	2
108	1	0.0	1	0 1
112	1	0.0	1	0 1
114	1	0.0	1	1
126	1	0.0	1	1
127	1	0.0	1	1
128	1	0.0	1	1
131	1	0.0	1	1
136	1	0.0	1	1
137	1	0.0	1	0 1
152	1	0.0	1	1
155	1	0.0	1	0 1
160	1	0.0	1	0 1
162	1	0.0	1	0 1
163	1	0.0	1	1
167	2	0.0	1	1 1
174	1	0.0	1	1
176	1	0.0	1	1
178	1	0.0	1	0 1
190	1	0.0	1	1
206	1	0.0	1	1
208	1	0.0	1	1
214	1	0.0	1	1
251	11	0.0	1	0 11

RUN STATISTICS FOR INPUT FILE: E15/host_removal/E15_R2.fastq.gz
=============================================
277056 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E15_R1_trimmed.fq.gz and E15_R2_trimmed.fq.gz
file_1: E15_R1_trimmed.fq.gz, file_2: E15_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E15_R1_trimmed.fq.gz and E15_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E15_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E15_R2_val_2.fq.gz

Total number of sequences analysed: 277056

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 391 (0.14%)


  >>> Now running FastQC on the validated data E15_R1_val_1.fq.gz<<<

Started analysis of E15_R1_val_1.fq.gz
Approx 5% complete for E15_R1_val_1.fq.gz
Approx 10% complete for E15_R1_val_1.fq.gz
Approx 15% complete for E15_R1_val_1.fq.gz
Approx 20% complete for E15_R1_val_1.fq.gz
Approx 25% complete for E15_R1_val_1.fq.gz
Approx 30% complete for E15_R1_val_1.fq.gz
Approx 35% complete for E15_R1_val_1.fq.gz
Approx 40% complete for E15_R1_val_1.fq.gz
Approx 45% complete for E15_R1_val_1.fq.gz
Approx 50% complete for E15_R1_val_1.fq.gz
Approx 55% complete for E15_R1_val_1.fq.gz
Approx 60% complete for E15_R1_val_1.fq.gz
Approx 65% complete for E15_R1_val_1.fq.gz
Approx 70% complete for E15_R1_val_1.fq.gz
Approx 75% complete for E15_R1_val_1.fq.gz
Approx 80% complete for E15_R1_val_1.fq.gz
Approx 85% complete for E15_R1_val_1.fq.gz
Approx 90% complete for E15_R1_val_1.fq.gz
Approx 95% complete for E15_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data E15_R2_val_2.fq.gz<<<

Started analysis of E15_R2_val_2.fq.gz
Approx 5% complete for E15_R2_val_2.fq.gz
Approx 10% complete for E15_R2_val_2.fq.gz
Approx 15% complete for E15_R2_val_2.fq.gz
Approx 20% complete for E15_R2_val_2.fq.gz
Approx 25% complete for E15_R2_val_2.fq.gz
Approx 30% complete for E15_R2_val_2.fq.gz
Approx 35% complete for E15_R2_val_2.fq.gz
Approx 40% complete for E15_R2_val_2.fq.gz
Approx 45% complete for E15_R2_val_2.fq.gz
Approx 50% complete for E15_R2_val_2.fq.gz
Approx 55% complete for E15_R2_val_2.fq.gz
Approx 60% complete for E15_R2_val_2.fq.gz
Approx 65% complete for E15_R2_val_2.fq.gz
Approx 70% complete for E15_R2_val_2.fq.gz
Approx 75% complete for E15_R2_val_2.fq.gz
Approx 80% complete for E15_R2_val_2.fq.gz
Approx 85% complete for E15_R2_val_2.fq.gz
Approx 90% complete for E15_R2_val_2.fq.gz
Approx 95% complete for E15_R2_val_2.fq.gz
Deleting both intermediate output files E15_R1_trimmed.fq.gz and E15_R2_trimmed.fq.gz

====================================================================================================

