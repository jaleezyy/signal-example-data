Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E30/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> E30/host_removal/E30_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	1375	AGATCGGAAGAGC	305207	0.45
smallRNA	0	TGGAATTCTCGG	305207	0.00
Nextera	0	CTGTCTCTTATA	305207	0.00
Using Illumina adapter for trimming (count: 1375). Second best hit was smallRNA (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E30/adapter_trimmed/E30_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E30/host_removal/E30_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to E30_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E30/host_removal/E30_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E30/host_removal/E30_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 13.094 s (42.904 µs/read; 1.40 M reads/minute).

=== Summary ===

Total reads processed:                 305,207
Reads with adapters:                   102,702 (33.6%)
Reads written (passing filters):       305,207 (100.0%)

Total basepairs processed:    76,606,957 bp
Quality-trimmed:                 294,629 bp (0.4%)
Total written (filtered):     76,095,347 bp (99.3%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 102702 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 37.1%
  C: 18.5%
  G: 10.2%
  T: 34.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	73060	76301.8	0	73060
2	25524	19075.4	0	25524
3	1551	4768.9	0	1551
4	415	1192.2	0	415
5	38	298.1	0	38
6	50	74.5	0	50
7	468	18.6	0	468
8	12	4.7	0	12
9	20	1.2	0	20
10	11	0.3	1	10 1
11	10	0.1	1	10
12	26	0.0	1	24 2
13	12	0.0	1	10 2
14	4	0.0	1	4
15	10	0.0	1	7 3
16	9	0.0	1	8 1
17	3	0.0	1	2 1
18	8	0.0	1	7 1
19	2	0.0	1	2
20	10	0.0	1	10
21	14	0.0	1	13 1
22	29	0.0	1	28 1
23	22	0.0	1	20 2
24	289	0.0	1	275 14
25	35	0.0	1	31 4
26	12	0.0	1	7 5
27	25	0.0	1	15 10
28	16	0.0	1	13 3
29	7	0.0	1	7
30	13	0.0	1	11 2
31	10	0.0	1	6 4
32	15	0.0	1	12 3
33	9	0.0	1	7 2
34	7	0.0	1	3 4
35	19	0.0	1	13 6
36	15	0.0	1	7 8
37	68	0.0	1	66 2
38	2	0.0	1	2
39	9	0.0	1	9
40	1	0.0	1	1
41	6	0.0	1	5 1
42	4	0.0	1	3 1
43	15	0.0	1	13 2
44	10	0.0	1	8 2
45	18	0.0	1	17 1
46	12	0.0	1	10 2
47	13	0.0	1	9 4
48	4	0.0	1	3 1
49	8	0.0	1	6 2
50	3	0.0	1	3
51	6	0.0	1	5 1
52	8	0.0	1	6 2
53	8	0.0	1	6 2
54	15	0.0	1	10 5
55	9	0.0	1	8 1
56	6	0.0	1	6
57	7	0.0	1	7
58	1	0.0	1	1
59	9	0.0	1	8 1
60	4	0.0	1	3 1
61	5	0.0	1	5
62	6	0.0	1	5 1
63	9	0.0	1	8 1
64	5	0.0	1	4 1
65	4	0.0	1	4
66	4	0.0	1	4
67	7	0.0	1	6 1
68	6	0.0	1	5 1
69	27	0.0	1	22 5
70	9	0.0	1	8 1
71	9	0.0	1	8 1
72	10	0.0	1	9 1
73	18	0.0	1	16 2
74	26	0.0	1	24 2
75	44	0.0	1	41 3
76	151	0.0	1	148 3
77	95	0.0	1	90 5
78	34	0.0	1	31 3
79	19	0.0	1	17 2
80	10	0.0	1	8 2
81	10	0.0	1	8 2
82	7	0.0	1	5 2
83	5	0.0	1	5
84	2	0.0	1	2
85	4	0.0	1	4
86	5	0.0	1	4 1
87	4	0.0	1	1 3
88	4	0.0	1	4
89	5	0.0	1	4 1
90	1	0.0	1	1
91	2	0.0	1	2
92	3	0.0	1	3
93	7	0.0	1	6 1
94	61	0.0	1	60 1
95	4	0.0	1	4
96	1	0.0	1	1
97	2	0.0	1	2
98	3	0.0	1	2 1
100	2	0.0	1	1 1
104	3	0.0	1	1 2
107	2	0.0	1	2
109	1	0.0	1	1
112	1	0.0	1	0 1
114	2	0.0	1	1 1
116	1	0.0	1	1
117	1	0.0	1	1
122	2	0.0	1	2
127	6	0.0	1	6
129	2	0.0	1	2
131	1	0.0	1	1
134	2	0.0	1	2
135	1	0.0	1	0 1
136	2	0.0	1	2
137	1	0.0	1	1
140	1	0.0	1	1
144	1	0.0	1	1
147	1	0.0	1	1
149	2	0.0	1	1 1
155	1	0.0	1	0 1
156	1	0.0	1	0 1
158	1	0.0	1	0 1
161	1	0.0	1	1
206	1	0.0	1	0 1
223	1	0.0	1	0 1
249	1	0.0	1	0 1
251	6	0.0	1	0 6

RUN STATISTICS FOR INPUT FILE: E30/host_removal/E30_R1.fastq.gz
=============================================
305207 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E30/adapter_trimmed/E30_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E30/host_removal/E30_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to E30_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E30/host_removal/E30_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E30/host_removal/E30_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 14.636 s (47.956 µs/read; 1.25 M reads/minute).

=== Summary ===

Total reads processed:                 305,207
Reads with adapters:                   103,377 (33.9%)
Reads written (passing filters):       305,207 (100.0%)

Total basepairs processed:    76,606,957 bp
Quality-trimmed:               1,066,152 bp (1.4%)
Total written (filtered):     75,357,568 bp (98.4%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 103377 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 42.3%
  C: 17.3%
  G: 10.0%
  T: 30.3%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
1	80087	76301.8	0	80087
2	18920	19075.4	0	18920
3	2130	4768.9	0	2130
4	483	1192.2	0	483
5	45	298.1	0	45
6	29	74.5	0	29
7	447	18.6	0	447
8	8	4.7	0	8
9	20	1.2	0	20
10	7	0.3	1	6 1
11	10	0.1	1	8 2
12	23	0.0	1	23
13	4	0.0	1	3 1
14	12	0.0	1	11 1
15	4	0.0	1	4
16	6	0.0	1	6
17	4	0.0	1	4
18	2	0.0	1	0 2
19	11	0.0	1	11
20	4	0.0	1	3 1
21	6	0.0	1	5 1
22	31	0.0	1	28 3
23	24	0.0	1	22 2
24	291	0.0	1	282 9
25	7	0.0	1	7
26	12	0.0	1	11 1
27	13	0.0	1	12 1
28	10	0.0	1	7 3
29	7	0.0	1	5 2
30	19	0.0	1	18 1
31	3	0.0	1	2 1
32	17	0.0	1	16 1
33	7	0.0	1	6 1
34	4	0.0	1	4
35	10	0.0	1	10
36	22	0.0	1	20 2
37	37	0.0	1	33 4
38	6	0.0	1	5 1
39	3	0.0	1	3
40	21	0.0	1	21
41	16	0.0	1	16
42	26	0.0	1	25 1
43	27	0.0	1	27
44	39	0.0	1	36 3
45	37	0.0	1	35 2
46	23	0.0	1	22 1
47	26	0.0	1	26
48	16	0.0	1	15 1
49	11	0.0	1	11
50	8	0.0	1	7 1
51	5	0.0	1	5
52	6	0.0	1	5 1
53	8	0.0	1	8
54	22	0.0	1	21 1
55	6	0.0	1	6
56	12	0.0	1	12
57	41	0.0	1	41
58	24	0.0	1	22 2
59	2	0.0	1	2
60	8	0.0	1	8
61	2	0.0	1	2
62	2	0.0	1	2
63	1	0.0	1	1
64	1	0.0	1	1
65	2	0.0	1	2
67	3	0.0	1	2 1
68	1	0.0	1	1
69	6	0.0	1	4 2
70	1	0.0	1	1
75	5	0.0	1	5
76	7	0.0	1	4 3
77	6	0.0	1	5 1
78	3	0.0	1	1 2
79	13	0.0	1	10 3
80	15	0.0	1	10 5
81	22	0.0	1	16 6
82	14	0.0	1	10 4
83	3	0.0	1	3
84	4	0.0	1	2 2
86	2	0.0	1	2
89	1	0.0	1	1
92	4	0.0	1	4
93	3	0.0	1	3
94	54	0.0	1	54
95	5	0.0	1	5
96	2	0.0	1	2
97	1	0.0	1	1
98	1	0.0	1	1
100	1	0.0	1	1
101	1	0.0	1	0 1
102	1	0.0	1	0 1
108	1	0.0	1	1
126	1	0.0	1	1
127	2	0.0	1	2
133	1	0.0	1	1
134	2	0.0	1	1 1
136	2	0.0	1	2
138	1	0.0	1	1
144	1	0.0	1	1
147	1	0.0	1	1
151	1	0.0	1	0 1
180	1	0.0	1	1
185	1	0.0	1	1
199	1	0.0	1	1
214	1	0.0	1	1
249	1	0.0	1	0 1
251	3	0.0	1	0 3

RUN STATISTICS FOR INPUT FILE: E30/host_removal/E30_R2.fastq.gz
=============================================
305207 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E30_R1_trimmed.fq.gz and E30_R2_trimmed.fq.gz
file_1: E30_R1_trimmed.fq.gz, file_2: E30_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E30_R1_trimmed.fq.gz and E30_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E30_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E30_R2_val_2.fq.gz

Total number of sequences analysed: 305207

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 411 (0.13%)


  >>> Now running FastQC on the validated data E30_R1_val_1.fq.gz<<<

Started analysis of E30_R1_val_1.fq.gz
Approx 5% complete for E30_R1_val_1.fq.gz
Approx 10% complete for E30_R1_val_1.fq.gz
Approx 15% complete for E30_R1_val_1.fq.gz
Approx 20% complete for E30_R1_val_1.fq.gz
Approx 25% complete for E30_R1_val_1.fq.gz
Approx 30% complete for E30_R1_val_1.fq.gz
Approx 35% complete for E30_R1_val_1.fq.gz
Approx 40% complete for E30_R1_val_1.fq.gz
Approx 45% complete for E30_R1_val_1.fq.gz
Approx 50% complete for E30_R1_val_1.fq.gz
Approx 55% complete for E30_R1_val_1.fq.gz
Approx 60% complete for E30_R1_val_1.fq.gz
Approx 65% complete for E30_R1_val_1.fq.gz
Approx 70% complete for E30_R1_val_1.fq.gz
Approx 75% complete for E30_R1_val_1.fq.gz
Approx 80% complete for E30_R1_val_1.fq.gz
Approx 85% complete for E30_R1_val_1.fq.gz
Approx 90% complete for E30_R1_val_1.fq.gz
Approx 95% complete for E30_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data E30_R2_val_2.fq.gz<<<

Started analysis of E30_R2_val_2.fq.gz
Approx 5% complete for E30_R2_val_2.fq.gz
Approx 10% complete for E30_R2_val_2.fq.gz
Approx 15% complete for E30_R2_val_2.fq.gz
Approx 20% complete for E30_R2_val_2.fq.gz
Approx 25% complete for E30_R2_val_2.fq.gz
Approx 30% complete for E30_R2_val_2.fq.gz
Approx 35% complete for E30_R2_val_2.fq.gz
Approx 40% complete for E30_R2_val_2.fq.gz
Approx 45% complete for E30_R2_val_2.fq.gz
Approx 50% complete for E30_R2_val_2.fq.gz
Approx 55% complete for E30_R2_val_2.fq.gz
Approx 60% complete for E30_R2_val_2.fq.gz
Approx 65% complete for E30_R2_val_2.fq.gz
Approx 70% complete for E30_R2_val_2.fq.gz
Approx 75% complete for E30_R2_val_2.fq.gz
Approx 80% complete for E30_R2_val_2.fq.gz
Approx 85% complete for E30_R2_val_2.fq.gz
Approx 90% complete for E30_R2_val_2.fq.gz
Approx 95% complete for E30_R2_val_2.fq.gz
Deleting both intermediate output files E30_R1_trimmed.fq.gz and E30_R2_trimmed.fq.gz

====================================================================================================

