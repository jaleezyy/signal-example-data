Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E35/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> E35/host_removal/E35_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	4208	AGATCGGAAGAGC	328127	1.28
Nextera	0	CTGTCTCTTATA	328127	0.00
smallRNA	0	TGGAATTCTCGG	328127	0.00
Using Illumina adapter for trimming (count: 4208). Second best hit was Nextera (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E35/adapter_trimmed/E35_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E35/host_removal/E35_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to E35_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E35/host_removal/E35_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E35/host_removal/E35_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 11.746 s (35.798 µs/read; 1.68 M reads/minute).

=== Summary ===

Total reads processed:                 328,127
Reads with adapters:                   118,404 (36.1%)
Reads written (passing filters):       328,127 (100.0%)

Total basepairs processed:    82,359,877 bp
Quality-trimmed:                 879,533 bp (1.1%)
Total written (filtered):     81,029,335 bp (98.4%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 118404 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 35.4%
  C: 16.9%
  G: 10.0%
  T: 37.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	78517	82031.8	0	78517
2	30765	20507.9	0	30765
3	1902	5127.0	0	1902
4	359	1281.7	0	359
5	35	320.4	0	35
6	32	80.1	0	32
7	1956	20.0	0	1956
8	60	5.0	0	60
9	50	1.3	0	50
10	50	0.3	1	46 4
11	28	0.1	1	24 4
12	71	0.0	1	63 8
13	36	0.0	1	29 7
14	16	0.0	1	13 3
15	19	0.0	1	11 8
16	17	0.0	1	12 5
17	22	0.0	1	15 7
18	18	0.0	1	12 6
19	8	0.0	1	7 1
20	22	0.0	1	20 2
21	50	0.0	1	43 7
22	214	0.0	1	203 11
23	35	0.0	1	31 4
24	107	0.0	1	97 10
25	41	0.0	1	28 13
26	13	0.0	1	7 6
27	33	0.0	1	27 6
28	36	0.0	1	24 12
29	24	0.0	1	20 4
30	20	0.0	1	15 5
31	18	0.0	1	11 7
32	33	0.0	1	25 8
33	23	0.0	1	16 7
34	115	0.0	1	97 18
35	28	0.0	1	20 8
36	21	0.0	1	16 5
37	427	0.0	1	409 18
38	50	0.0	1	43 7
39	31	0.0	1	25 6
40	23	0.0	1	15 8
41	24	0.0	1	15 9
42	28	0.0	1	24 4
43	33	0.0	1	25 8
44	7	0.0	1	4 3
45	14	0.0	1	11 3
46	15	0.0	1	10 5
47	37	0.0	1	16 21
48	20	0.0	1	15 5
49	23	0.0	1	17 6
50	16	0.0	1	14 2
51	16	0.0	1	14 2
52	25	0.0	1	18 7
53	21	0.0	1	13 8
54	42	0.0	1	25 17
55	27	0.0	1	20 7
56	11	0.0	1	8 3
57	14	0.0	1	12 2
58	8	0.0	1	8
59	10	0.0	1	9 1
60	15	0.0	1	10 5
61	9	0.0	1	7 2
62	12	0.0	1	10 2
63	21	0.0	1	20 1
64	17	0.0	1	16 1
65	56	0.0	1	54 2
66	93	0.0	1	83 10
67	22	0.0	1	16 6
68	24	0.0	1	23 1
69	30	0.0	1	24 6
70	20	0.0	1	17 3
71	26	0.0	1	23 3
72	40	0.0	1	37 3
73	78	0.0	1	69 9
74	85	0.0	1	73 12
75	136	0.0	1	115 21
76	609	0.0	1	597 12
77	410	0.0	1	394 16
78	142	0.0	1	138 4
79	89	0.0	1	87 2
80	46	0.0	1	45 1
81	27	0.0	1	27
82	21	0.0	1	20 1
83	18	0.0	1	18
84	19	0.0	1	19
85	15	0.0	1	13 2
86	15	0.0	1	11 4
87	14	0.0	1	12 2
88	19	0.0	1	18 1
89	10	0.0	1	9 1
90	14	0.0	1	14
91	7	0.0	1	7
92	11	0.0	1	10 1
93	27	0.0	1	26 1
94	210	0.0	1	206 4
95	35	0.0	1	33 2
96	13	0.0	1	13
97	6	0.0	1	6
98	6	0.0	1	6
99	2	0.0	1	1 1
100	2	0.0	1	1 1
101	4	0.0	1	3 1
102	2	0.0	1	2
103	4	0.0	1	4
105	3	0.0	1	3
106	7	0.0	1	7
107	4	0.0	1	4
108	4	0.0	1	2 2
109	13	0.0	1	12 1
111	2	0.0	1	2
112	4	0.0	1	4
113	5	0.0	1	5
114	13	0.0	1	13
115	8	0.0	1	8
116	9	0.0	1	6 3
117	3	0.0	1	3
118	1	0.0	1	1
119	2	0.0	1	1 1
121	1	0.0	1	1
122	2	0.0	1	2
125	3	0.0	1	2 1
126	5	0.0	1	4 1
127	10	0.0	1	8 2
128	2	0.0	1	2
129	4	0.0	1	2 2
130	1	0.0	1	1
131	1	0.0	1	1
133	1	0.0	1	1
134	1	0.0	1	0 1
135	1	0.0	1	1
136	4	0.0	1	4
137	2	0.0	1	2
141	1	0.0	1	0 1
142	2	0.0	1	2
143	1	0.0	1	1
144	1	0.0	1	1
146	1	0.0	1	0 1
147	3	0.0	1	1 2
148	2	0.0	1	2
149	4	0.0	1	4
152	2	0.0	1	2
154	2	0.0	1	0 2
156	1	0.0	1	1
158	2	0.0	1	2
160	1	0.0	1	1
165	1	0.0	1	1
166	1	0.0	1	1
167	2	0.0	1	2
168	5	0.0	1	5
169	2	0.0	1	2
171	2	0.0	1	1 1
173	2	0.0	1	2
174	1	0.0	1	1
179	1	0.0	1	1
182	1	0.0	1	1
184	2	0.0	1	2
186	1	0.0	1	0 1
187	1	0.0	1	1
189	1	0.0	1	1
190	1	0.0	1	1
191	1	0.0	1	1
192	1	0.0	1	1
194	1	0.0	1	1
198	3	0.0	1	3
199	1	0.0	1	1
200	2	0.0	1	2
201	1	0.0	1	1
202	3	0.0	1	2 1
203	2	0.0	1	2
205	3	0.0	1	3
206	2	0.0	1	2
208	1	0.0	1	1
209	4	0.0	1	4
210	3	0.0	1	2 1
211	1	0.0	1	1
212	1	0.0	1	1
213	3	0.0	1	3
214	1	0.0	1	1
215	1	0.0	1	1
229	1	0.0	1	0 1
242	1	0.0	1	1
251	7	0.0	1	0 7

RUN STATISTICS FOR INPUT FILE: E35/host_removal/E35_R1.fastq.gz
=============================================
328127 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E35/adapter_trimmed/E35_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E35/host_removal/E35_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to E35_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E35/host_removal/E35_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E35/host_removal/E35_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 12.683 s (38.653 µs/read; 1.55 M reads/minute).

=== Summary ===

Total reads processed:                 328,127
Reads with adapters:                   120,922 (36.9%)
Reads written (passing filters):       328,127 (100.0%)

Total basepairs processed:    82,359,877 bp
Quality-trimmed:               2,286,343 bp (2.8%)
Total written (filtered):     79,739,398 bp (96.8%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 120922 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 40.8%
  C: 15.7%
  G: 9.7%
  T: 33.7%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
1	89577	82031.8	0	89577
2	22985	20507.9	0	22985
3	2456	5127.0	0	2456
4	509	1281.7	0	509
5	30	320.4	0	30
6	35	80.1	0	35
7	1847	20.0	0	1847
8	27	5.0	0	27
9	54	1.3	0	54
10	44	0.3	1	39 5
11	21	0.1	1	14 7
12	50	0.0	1	48 2
13	13	0.0	1	9 4
14	23	0.0	1	19 4
15	6	0.0	1	5 1
16	12	0.0	1	9 3
17	14	0.0	1	12 2
18	4	0.0	1	3 1
19	18	0.0	1	16 2
20	15	0.0	1	13 2
21	17	0.0	1	15 2
22	202	0.0	1	191 11
23	41	0.0	1	36 5
24	108	0.0	1	99 9
25	9	0.0	1	8 1
26	15	0.0	1	13 2
27	15	0.0	1	13 2
28	41	0.0	1	36 5
29	13	0.0	1	9 4
30	56	0.0	1	51 5
31	11	0.0	1	7 4
32	51	0.0	1	47 4
33	32	0.0	1	32
34	47	0.0	1	45 2
35	35	0.0	1	33 2
36	133	0.0	1	129 4
37	212	0.0	1	203 9
38	32	0.0	1	30 2
39	40	0.0	1	35 5
40	60	0.0	1	56 4
41	42	0.0	1	36 6
42	57	0.0	1	50 7
43	80	0.0	1	74 6
44	121	0.0	1	118 3
45	122	0.0	1	120 2
46	88	0.0	1	83 5
47	99	0.0	1	98 1
48	65	0.0	1	63 2
49	45	0.0	1	42 3
50	23	0.0	1	23
51	31	0.0	1	30 1
52	12	0.0	1	12
53	18	0.0	1	18
54	80	0.0	1	78 2
55	18	0.0	1	18
56	46	0.0	1	44 2
57	140	0.0	1	136 4
58	62	0.0	1	62
59	10	0.0	1	10
60	36	0.0	1	35 1
61	11	0.0	1	11
62	7	0.0	1	7
63	17	0.0	1	17
64	5	0.0	1	5
65	4	0.0	1	4
66	18	0.0	1	18
67	1	0.0	1	1
68	6	0.0	1	5 1
69	2	0.0	1	2
70	3	0.0	1	3
71	2	0.0	1	2
72	1	0.0	1	1
73	4	0.0	1	4
74	5	0.0	1	5
75	10	0.0	1	9 1
76	4	0.0	1	4
77	11	0.0	1	11
78	36	0.0	1	35 1
79	34	0.0	1	26 8
80	71	0.0	1	65 6
81	84	0.0	1	78 6
82	42	0.0	1	37 5
83	25	0.0	1	22 3
84	12	0.0	1	11 1
85	7	0.0	1	6 1
86	7	0.0	1	5 2
87	10	0.0	1	9 1
88	5	0.0	1	5
89	5	0.0	1	5
90	9	0.0	1	8 1
91	4	0.0	1	4
92	5	0.0	1	5
93	8	0.0	1	8
94	170	0.0	1	169 1
95	28	0.0	1	27 1
96	10	0.0	1	8 2
97	5	0.0	1	5
98	4	0.0	1	4
99	2	0.0	1	2
100	1	0.0	1	1
101	1	0.0	1	1
102	1	0.0	1	1
103	2	0.0	1	2
104	1	0.0	1	1
106	1	0.0	1	1
107	5	0.0	1	4 1
108	4	0.0	1	3 1
109	1	0.0	1	1
110	1	0.0	1	0 1
111	3	0.0	1	2 1
112	1	0.0	1	1
113	5	0.0	1	5
114	4	0.0	1	3 1
115	2	0.0	1	2
116	3	0.0	1	3
117	1	0.0	1	1
120	1	0.0	1	0 1
122	1	0.0	1	1
123	1	0.0	1	1
125	1	0.0	1	1
126	1	0.0	1	1
127	12	0.0	1	9 3
129	3	0.0	1	0 3
130	1	0.0	1	1
132	1	0.0	1	1
136	1	0.0	1	1
137	1	0.0	1	1
138	1	0.0	1	0 1
147	4	0.0	1	3 1
149	3	0.0	1	3
153	1	0.0	1	1
155	1	0.0	1	0 1
159	1	0.0	1	1
161	1	0.0	1	1
162	1	0.0	1	1
165	1	0.0	1	1
167	1	0.0	1	1
168	2	0.0	1	2
171	1	0.0	1	1
174	2	0.0	1	1 1
177	2	0.0	1	2
180	1	0.0	1	1
181	1	0.0	1	0 1
182	2	0.0	1	2
183	1	0.0	1	1
184	1	0.0	1	1
190	1	0.0	1	1
191	1	0.0	1	1
193	1	0.0	1	1
195	1	0.0	1	1
197	1	0.0	1	1
198	1	0.0	1	1
199	1	0.0	1	1
200	2	0.0	1	2
201	3	0.0	1	3
203	2	0.0	1	2
204	1	0.0	1	1
205	1	0.0	1	1
207	2	0.0	1	2
210	1	0.0	1	1
212	1	0.0	1	1
213	1	0.0	1	1
214	2	0.0	1	2
215	2	0.0	1	1 1
216	1	0.0	1	1
222	1	0.0	1	0 1
250	1	0.0	1	0 1
251	6	0.0	1	0 6

RUN STATISTICS FOR INPUT FILE: E35/host_removal/E35_R2.fastq.gz
=============================================
328127 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E35_R1_trimmed.fq.gz and E35_R2_trimmed.fq.gz
file_1: E35_R1_trimmed.fq.gz, file_2: E35_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E35_R1_trimmed.fq.gz and E35_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E35_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E35_R2_val_2.fq.gz

Total number of sequences analysed: 328127

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 490 (0.15%)


  >>> Now running FastQC on the validated data E35_R1_val_1.fq.gz<<<

Started analysis of E35_R1_val_1.fq.gz
Approx 5% complete for E35_R1_val_1.fq.gz
Approx 10% complete for E35_R1_val_1.fq.gz
Approx 15% complete for E35_R1_val_1.fq.gz
Approx 20% complete for E35_R1_val_1.fq.gz
Approx 25% complete for E35_R1_val_1.fq.gz
Approx 30% complete for E35_R1_val_1.fq.gz
Approx 35% complete for E35_R1_val_1.fq.gz
Approx 40% complete for E35_R1_val_1.fq.gz
Approx 45% complete for E35_R1_val_1.fq.gz
Approx 50% complete for E35_R1_val_1.fq.gz
Approx 55% complete for E35_R1_val_1.fq.gz
Approx 60% complete for E35_R1_val_1.fq.gz
Approx 65% complete for E35_R1_val_1.fq.gz
Approx 70% complete for E35_R1_val_1.fq.gz
Approx 75% complete for E35_R1_val_1.fq.gz
Approx 80% complete for E35_R1_val_1.fq.gz
Approx 85% complete for E35_R1_val_1.fq.gz
Approx 90% complete for E35_R1_val_1.fq.gz
Approx 95% complete for E35_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data E35_R2_val_2.fq.gz<<<

Started analysis of E35_R2_val_2.fq.gz
Approx 5% complete for E35_R2_val_2.fq.gz
Approx 10% complete for E35_R2_val_2.fq.gz
Approx 15% complete for E35_R2_val_2.fq.gz
Approx 20% complete for E35_R2_val_2.fq.gz
Approx 25% complete for E35_R2_val_2.fq.gz
Approx 30% complete for E35_R2_val_2.fq.gz
Approx 35% complete for E35_R2_val_2.fq.gz
Approx 40% complete for E35_R2_val_2.fq.gz
Approx 45% complete for E35_R2_val_2.fq.gz
Approx 50% complete for E35_R2_val_2.fq.gz
Approx 55% complete for E35_R2_val_2.fq.gz
Approx 60% complete for E35_R2_val_2.fq.gz
Approx 65% complete for E35_R2_val_2.fq.gz
Approx 70% complete for E35_R2_val_2.fq.gz
Approx 75% complete for E35_R2_val_2.fq.gz
Approx 80% complete for E35_R2_val_2.fq.gz
Approx 85% complete for E35_R2_val_2.fq.gz
Approx 90% complete for E35_R2_val_2.fq.gz
Approx 95% complete for E35_R2_val_2.fq.gz
Deleting both intermediate output files E35_R1_trimmed.fq.gz and E35_R2_trimmed.fq.gz

====================================================================================================

