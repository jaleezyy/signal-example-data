Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E11/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> E11/host_removal/E11_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	3602	AGATCGGAAGAGC	515465	0.70
smallRNA	0	TGGAATTCTCGG	515465	0.00
Nextera	0	CTGTCTCTTATA	515465	0.00
Using Illumina adapter for trimming (count: 3602). Second best hit was smallRNA (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E11/adapter_trimmed/E11_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E11/host_removal/E11_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to E11_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E11/host_removal/E11_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E11/host_removal/E11_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 19.232 s (37.311 µs/read; 1.61 M reads/minute).

=== Summary ===

Total reads processed:                 515,465
Reads with adapters:                   186,386 (36.2%)
Reads written (passing filters):       515,465 (100.0%)

Total basepairs processed:   129,381,715 bp
Quality-trimmed:               1,182,401 bp (0.9%)
Total written (filtered):    127,716,207 bp (98.7%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 186386 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 38.0%
  C: 16.6%
  G: 8.9%
  T: 36.4%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
1	131190	128866.2	0	131190
2	47653	32216.6	0	47653
3	2813	8054.1	0	2813
4	328	2013.5	0	328
5	36	503.4	0	36
6	28	125.8	0	28
7	234	31.5	0	234
8	15	7.9	0	15
9	11	2.0	0	11
10	27	0.5	1	21 6
11	7	0.1	1	5 2
12	16	0.0	1	12 4
13	12	0.0	1	8 4
14	4	0.0	1	3 1
15	12	0.0	1	9 3
16	8	0.0	1	4 4
17	19	0.0	1	16 3
18	29	0.0	1	25 4
19	28	0.0	1	24 4
20	32	0.0	1	29 3
21	9	0.0	1	6 3
22	21	0.0	1	15 6
23	10	0.0	1	5 5
24	53	0.0	1	46 7
25	30	0.0	1	16 14
26	18	0.0	1	9 9
27	33	0.0	1	18 15
28	51	0.0	1	37 14
29	32	0.0	1	21 11
30	19	0.0	1	11 8
31	17	0.0	1	12 5
32	24	0.0	1	21 3
33	13	0.0	1	3 10
34	39	0.0	1	26 13
35	50	0.0	1	39 11
36	163	0.0	1	158 5
37	797	0.0	1	782 15
38	96	0.0	1	93 3
39	36	0.0	1	27 9
40	31	0.0	1	23 8
41	32	0.0	1	24 8
42	23	0.0	1	14 9
43	35	0.0	1	30 5
44	17	0.0	1	12 5
45	47	0.0	1	44 3
46	21	0.0	1	13 8
47	31	0.0	1	22 9
48	21	0.0	1	14 7
49	15	0.0	1	8 7
50	19	0.0	1	16 3
51	9	0.0	1	5 4
52	20	0.0	1	15 5
53	16	0.0	1	8 8
54	49	0.0	1	33 16
55	20	0.0	1	14 6
56	15	0.0	1	10 5
57	13	0.0	1	11 2
58	9	0.0	1	5 4
59	8	0.0	1	7 1
60	17	0.0	1	12 5
61	38	0.0	1	38
62	36	0.0	1	30 6
63	18	0.0	1	16 2
64	20	0.0	1	16 4
65	26	0.0	1	24 2
66	47	0.0	1	40 7
67	8	0.0	1	5 3
68	23	0.0	1	16 7
69	33	0.0	1	25 8
70	16	0.0	1	13 3
71	21	0.0	1	21
72	32	0.0	1	29 3
73	60	0.0	1	53 7
74	81	0.0	1	63 18
75	113	0.0	1	95 18
76	343	0.0	1	323 20
77	239	0.0	1	225 14
78	103	0.0	1	95 8
79	73	0.0	1	65 8
80	35	0.0	1	31 4
81	27	0.0	1	24 3
82	18	0.0	1	15 3
83	14	0.0	1	10 4
84	18	0.0	1	14 4
85	8	0.0	1	6 2
86	11	0.0	1	9 2
87	12	0.0	1	11 1
88	12	0.0	1	11 1
89	9	0.0	1	5 4
90	8	0.0	1	7 1
91	9	0.0	1	8 1
92	7	0.0	1	7
93	21	0.0	1	18 3
94	86	0.0	1	83 3
95	12	0.0	1	11 1
96	10	0.0	1	7 3
97	2	0.0	1	1 1
98	10	0.0	1	10
99	4	0.0	1	4
100	1	0.0	1	1
101	1	0.0	1	1
102	1	0.0	1	1
103	7	0.0	1	7
105	1	0.0	1	1
106	8	0.0	1	7 1
107	10	0.0	1	9 1
108	4	0.0	1	4
109	3	0.0	1	2 1
110	2	0.0	1	2
111	1	0.0	1	0 1
112	3	0.0	1	2 1
113	3	0.0	1	3
114	8	0.0	1	5 3
115	4	0.0	1	3 1
116	4	0.0	1	4
117	4	0.0	1	3 1
118	3	0.0	1	3
119	3	0.0	1	2 1
121	1	0.0	1	1
122	1	0.0	1	0 1
123	1	0.0	1	1
124	1	0.0	1	1
125	1	0.0	1	1
126	3	0.0	1	2 1
127	1	0.0	1	1
128	3	0.0	1	3
129	3	0.0	1	3
132	1	0.0	1	0 1
133	1	0.0	1	1
134	5	0.0	1	5
135	1	0.0	1	0 1
136	1	0.0	1	1
137	1	0.0	1	1
138	1	0.0	1	1
139	2	0.0	1	2
140	2	0.0	1	1 1
141	2	0.0	1	1 1
142	1	0.0	1	1
143	2	0.0	1	2
144	2	0.0	1	2
146	1	0.0	1	1
147	4	0.0	1	4
148	2	0.0	1	1 1
149	4	0.0	1	4
151	2	0.0	1	2
153	3	0.0	1	2 1
154	6	0.0	1	6
155	3	0.0	1	2 1
156	3	0.0	1	2 1
158	1	0.0	1	0 1
160	2	0.0	1	1 1
161	2	0.0	1	2
163	1	0.0	1	1
164	3	0.0	1	1 2
165	1	0.0	1	0 1
167	1	0.0	1	1
168	1	0.0	1	1
170	1	0.0	1	1
172	3	0.0	1	3
176	3	0.0	1	3
177	1	0.0	1	1
180	1	0.0	1	0 1
181	1	0.0	1	1
182	1	0.0	1	1
185	2	0.0	1	0 2
187	1	0.0	1	0 1
188	4	0.0	1	2 2
189	2	0.0	1	2
192	1	0.0	1	1
193	3	0.0	1	3
195	4	0.0	1	4
196	1	0.0	1	1
197	1	0.0	1	1
198	2	0.0	1	2
199	2	0.0	1	2
200	2	0.0	1	1 1
201	2	0.0	1	2
202	3	0.0	1	3
203	6	0.0	1	5 1
204	1	0.0	1	1
205	3	0.0	1	2 1
206	3	0.0	1	2 1
208	2	0.0	1	1 1
209	7	0.0	1	7
210	1	0.0	1	1
212	1	0.0	1	1
213	1	0.0	1	0 1
214	1	0.0	1	1
216	1	0.0	1	1
217	1	0.0	1	0 1
231	1	0.0	1	0 1
238	1	0.0	1	1
244	1	0.0	1	0 1
250	3	0.0	1	0 3
251	19	0.0	1	0 19

RUN STATISTICS FOR INPUT FILE: E11/host_removal/E11_R1.fastq.gz
=============================================
515465 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E11/adapter_trimmed/E11_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E11/host_removal/E11_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to E11_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E11/host_removal/E11_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E11/host_removal/E11_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 20.876 s (40.499 µs/read; 1.48 M reads/minute).

=== Summary ===

Total reads processed:                 515,465
Reads with adapters:                   192,351 (37.3%)
Reads written (passing filters):       515,465 (100.0%)

Total basepairs processed:   129,381,715 bp
Quality-trimmed:               3,082,157 bp (2.4%)
Total written (filtered):    125,918,660 bp (97.3%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 192351 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 43.6%
  C: 15.5%
  G: 9.4%
  T: 31.4%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
1	150003	128866.2	0	150003
2	34683	32216.6	0	34683
3	4106	8054.1	0	4106
4	451	2013.5	0	451
5	30	503.4	0	30
6	20	125.8	0	20
7	210	31.5	0	210
8	2	7.9	0	2
9	13	2.0	0	13
10	19	0.5	1	14 5
11	8	0.1	1	4 4
12	20	0.0	1	13 7
13	7	0.0	1	5 2
14	14	0.0	1	13 1
15	2	0.0	1	1 1
16	6	0.0	1	5 1
17	16	0.0	1	13 3
18	6	0.0	1	6
19	27	0.0	1	26 1
20	5	0.0	1	3 2
21	1	0.0	1	1
22	6	0.0	1	6
23	10	0.0	1	7 3
24	49	0.0	1	41 8
25	13	0.0	1	13
26	12	0.0	1	10 2
27	15	0.0	1	13 2
28	45	0.0	1	39 6
29	15	0.0	1	13 2
30	39	0.0	1	34 5
31	4	0.0	1	2 2
32	27	0.0	1	25 2
33	24	0.0	1	21 3
34	55	0.0	1	48 7
35	167	0.0	1	156 11
36	559	0.0	1	547 12
37	167	0.0	1	154 13
38	113	0.0	1	108 5
39	15	0.0	1	13 2
40	46	0.0	1	42 4
41	47	0.0	1	41 6
42	56	0.0	1	54 2
43	110	0.0	1	106 4
44	93	0.0	1	92 1
45	112	0.0	1	111 1
46	54	0.0	1	49 5
47	48	0.0	1	46 2
48	33	0.0	1	33
49	15	0.0	1	14 1
50	11	0.0	1	10 1
51	13	0.0	1	13
52	3	0.0	1	3
53	9	0.0	1	9
54	18	0.0	1	18
55	13	0.0	1	12 1
56	16	0.0	1	14 2
57	36	0.0	1	34 2
58	22	0.0	1	21 1
59	3	0.0	1	3
60	9	0.0	1	7 2
61	5	0.0	1	5
62	3	0.0	1	2 1
63	4	0.0	1	4
65	4	0.0	1	3 1
66	4	0.0	1	4
67	1	0.0	1	1
68	3	0.0	1	3
69	1	0.0	1	1
70	1	0.0	1	1
71	2	0.0	1	0 2
73	1	0.0	1	1
74	4	0.0	1	4
75	3	0.0	1	3
76	1	0.0	1	0 1
77	4	0.0	1	2 2
78	8	0.0	1	8
79	15	0.0	1	8 7
80	23	0.0	1	17 6
81	41	0.0	1	34 7
82	50	0.0	1	38 12
83	48	0.0	1	33 15
84	42	0.0	1	35 7
85	28	0.0	1	23 5
86	15	0.0	1	11 4
87	12	0.0	1	8 4
88	8	0.0	1	4 4
89	6	0.0	1	5 1
90	5	0.0	1	4 1
91	5	0.0	1	4 1
92	8	0.0	1	7 1
93	8	0.0	1	7 1
94	81	0.0	1	75 6
95	6	0.0	1	5 1
96	6	0.0	1	4 2
97	5	0.0	1	3 2
98	2	0.0	1	2
99	2	0.0	1	1 1
101	1	0.0	1	0 1
103	5	0.0	1	5
104	3	0.0	1	1 2
106	2	0.0	1	0 2
107	4	0.0	1	2 2
109	2	0.0	1	1 1
110	2	0.0	1	2
112	1	0.0	1	1
113	1	0.0	1	0 1
114	2	0.0	1	0 2
116	4	0.0	1	1 3
117	1	0.0	1	0 1
118	2	0.0	1	0 2
119	1	0.0	1	1
122	1	0.0	1	1
123	1	0.0	1	0 1
125	1	0.0	1	0 1
126	2	0.0	1	2
127	2	0.0	1	2
128	3	0.0	1	2 1
129	2	0.0	1	2
131	1	0.0	1	0 1
134	1	0.0	1	0 1
136	1	0.0	1	1
137	1	0.0	1	0 1
140	1	0.0	1	0 1
142	2	0.0	1	2
143	1	0.0	1	1
147	6	0.0	1	6
148	2	0.0	1	2
151	1	0.0	1	0 1
153	1	0.0	1	0 1
154	1	0.0	1	1
155	1	0.0	1	1
156	4	0.0	1	3 1
158	1	0.0	1	0 1
160	1	0.0	1	1
161	1	0.0	1	1
163	2	0.0	1	1 1
164	2	0.0	1	2
165	1	0.0	1	0 1
166	1	0.0	1	0 1
167	1	0.0	1	0 1
168	1	0.0	1	1
186	1	0.0	1	1
188	1	0.0	1	1
189	3	0.0	1	3
190	1	0.0	1	1
191	2	0.0	1	2
193	1	0.0	1	1
197	1	0.0	1	1
199	1	0.0	1	1
200	2	0.0	1	2
202	3	0.0	1	3
203	2	0.0	1	2
205	3	0.0	1	3
206	1	0.0	1	1
207	1	0.0	1	1
208	5	0.0	1	3 2
209	3	0.0	1	3
210	2	0.0	1	2
211	1	0.0	1	1
214	1	0.0	1	1
215	2	0.0	1	1 1
217	3	0.0	1	1 2
218	1	0.0	1	1
249	1	0.0	1	0 1
250	1	0.0	1	0 1
251	14	0.0	1	0 14

RUN STATISTICS FOR INPUT FILE: E11/host_removal/E11_R2.fastq.gz
=============================================
515465 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E11_R1_trimmed.fq.gz and E11_R2_trimmed.fq.gz
file_1: E11_R1_trimmed.fq.gz, file_2: E11_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E11_R1_trimmed.fq.gz and E11_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E11_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E11_R2_val_2.fq.gz

Total number of sequences analysed: 515465

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 725 (0.14%)


  >>> Now running FastQC on the validated data E11_R1_val_1.fq.gz<<<

Started analysis of E11_R1_val_1.fq.gz
Approx 5% complete for E11_R1_val_1.fq.gz
Approx 10% complete for E11_R1_val_1.fq.gz
Approx 15% complete for E11_R1_val_1.fq.gz
Approx 20% complete for E11_R1_val_1.fq.gz
Approx 25% complete for E11_R1_val_1.fq.gz
Approx 30% complete for E11_R1_val_1.fq.gz
Approx 35% complete for E11_R1_val_1.fq.gz
Approx 40% complete for E11_R1_val_1.fq.gz
Approx 45% complete for E11_R1_val_1.fq.gz
Approx 50% complete for E11_R1_val_1.fq.gz
Approx 55% complete for E11_R1_val_1.fq.gz
Approx 60% complete for E11_R1_val_1.fq.gz
Approx 65% complete for E11_R1_val_1.fq.gz
Approx 70% complete for E11_R1_val_1.fq.gz
Approx 75% complete for E11_R1_val_1.fq.gz
Approx 80% complete for E11_R1_val_1.fq.gz
Approx 85% complete for E11_R1_val_1.fq.gz
Approx 90% complete for E11_R1_val_1.fq.gz
Approx 95% complete for E11_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data E11_R2_val_2.fq.gz<<<

Started analysis of E11_R2_val_2.fq.gz
Approx 5% complete for E11_R2_val_2.fq.gz
Approx 10% complete for E11_R2_val_2.fq.gz
Approx 15% complete for E11_R2_val_2.fq.gz
Approx 20% complete for E11_R2_val_2.fq.gz
Approx 25% complete for E11_R2_val_2.fq.gz
Approx 30% complete for E11_R2_val_2.fq.gz
Approx 35% complete for E11_R2_val_2.fq.gz
Approx 40% complete for E11_R2_val_2.fq.gz
Approx 45% complete for E11_R2_val_2.fq.gz
Approx 50% complete for E11_R2_val_2.fq.gz
Approx 55% complete for E11_R2_val_2.fq.gz
Approx 60% complete for E11_R2_val_2.fq.gz
Approx 65% complete for E11_R2_val_2.fq.gz
Approx 70% complete for E11_R2_val_2.fq.gz
Approx 75% complete for E11_R2_val_2.fq.gz
Approx 80% complete for E11_R2_val_2.fq.gz
Approx 85% complete for E11_R2_val_2.fq.gz
Approx 90% complete for E11_R2_val_2.fq.gz
Approx 95% complete for E11_R2_val_2.fq.gz
Deleting both intermediate output files E11_R1_trimmed.fq.gz and E11_R2_trimmed.fq.gz

====================================================================================================

