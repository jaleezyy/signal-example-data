Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E9/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> E9/host_removal/E9_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	4988	AGATCGGAAGAGC	525460	0.95
smallRNA	0	TGGAATTCTCGG	525460	0.00
Nextera	0	CTGTCTCTTATA	525460	0.00
Using Illumina adapter for trimming (count: 4988). Second best hit was smallRNA (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E9/adapter_trimmed/E9_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E9/host_removal/E9_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to E9_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E9/host_removal/E9_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E9/host_removal/E9_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 23.938 s (45.557 µs/read; 1.32 M reads/minute).

=== Summary ===

Total reads processed:                 525,460
Reads with adapters:                   180,800 (34.4%)
Reads written (passing filters):       525,460 (100.0%)

Total basepairs processed:   131,890,460 bp
Quality-trimmed:                 818,897 bp (0.6%)
Total written (filtered):    130,522,909 bp (99.0%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 180800 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 35.6%
  C: 17.0%
  G: 11.1%
  T: 36.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	124335	131365.0	0	124335
2	44639	32841.2	0	44639
3	2644	8210.3	0	2644
4	449	2052.6	0	449
5	48	513.1	0	48
6	41	128.3	0	41
7	2950	32.1	0	2950
8	110	8.0	0	110
9	97	2.0	0	97
10	51	0.5	1	46 5
11	20	0.1	1	17 3
12	45	0.0	1	40 5
13	20	0.0	1	14 6
14	19	0.0	1	13 6
15	9	0.0	1	6 3
16	12	0.0	1	11 1
17	12	0.0	1	6 6
18	6	0.0	1	6
19	6	0.0	1	6
20	10	0.0	1	6 4
21	13	0.0	1	11 2
22	44	0.0	1	40 4
23	53	0.0	1	46 7
24	1375	0.0	1	1350 25
25	155	0.0	1	145 10
26	57	0.0	1	46 11
27	63	0.0	1	44 19
28	73	0.0	1	59 14
29	32	0.0	1	23 9
30	33	0.0	1	21 12
31	22	0.0	1	19 3
32	24	0.0	1	19 5
33	16	0.0	1	12 4
34	34	0.0	1	24 10
35	18	0.0	1	11 7
36	20	0.0	1	16 4
37	159	0.0	1	155 4
38	29	0.0	1	25 4
39	76	0.0	1	68 8
40	24	0.0	1	19 5
41	28	0.0	1	20 8
42	18	0.0	1	17 1
43	29	0.0	1	25 4
44	9	0.0	1	5 4
45	10	0.0	1	8 2
46	18	0.0	1	13 5
47	36	0.0	1	20 16
48	16	0.0	1	12 4
49	40	0.0	1	34 6
50	17	0.0	1	12 5
51	22	0.0	1	17 5
52	26	0.0	1	19 7
53	30	0.0	1	25 5
54	57	0.0	1	39 18
55	31	0.0	1	24 7
56	18	0.0	1	11 7
57	20	0.0	1	14 6
58	8	0.0	1	8
59	7	0.0	1	5 2
60	18	0.0	1	16 2
61	11	0.0	1	10 1
62	9	0.0	1	5 4
63	24	0.0	1	18 6
64	11	0.0	1	10 1
65	14	0.0	1	13 1
66	33	0.0	1	23 10
67	11	0.0	1	10 1
68	15	0.0	1	13 2
69	32	0.0	1	24 8
70	27	0.0	1	25 2
71	32	0.0	1	31 1
72	60	0.0	1	58 2
73	79	0.0	1	66 13
74	103	0.0	1	90 13
75	147	0.0	1	136 11
76	551	0.0	1	533 18
77	328	0.0	1	316 12
78	181	0.0	1	176 5
79	91	0.0	1	87 4
80	50	0.0	1	48 2
81	41	0.0	1	40 1
82	24	0.0	1	23 1
83	15	0.0	1	14 1
84	14	0.0	1	14
85	17	0.0	1	15 2
86	16	0.0	1	13 3
87	9	0.0	1	7 2
88	9	0.0	1	9
89	11	0.0	1	10 1
90	3	0.0	1	3
91	3	0.0	1	3
92	12	0.0	1	11 1
93	19	0.0	1	17 2
94	147	0.0	1	144 3
95	14	0.0	1	14
96	16	0.0	1	11 5
97	7	0.0	1	7
98	10	0.0	1	9 1
99	5	0.0	1	3 2
100	2	0.0	1	2
101	3	0.0	1	3
102	3	0.0	1	2 1
103	3	0.0	1	3
104	1	0.0	1	0 1
105	4	0.0	1	3 1
106	5	0.0	1	5
107	10	0.0	1	8 2
108	9	0.0	1	9
109	9	0.0	1	7 2
110	11	0.0	1	7 4
111	37	0.0	1	35 2
112	7	0.0	1	6 1
113	3	0.0	1	0 3
114	9	0.0	1	6 3
115	3	0.0	1	1 2
116	6	0.0	1	5 1
117	4	0.0	1	4
118	3	0.0	1	3
119	2	0.0	1	1 1
121	2	0.0	1	2
122	2	0.0	1	2
123	4	0.0	1	3 1
124	2	0.0	1	2
127	6	0.0	1	6
128	2	0.0	1	2
129	2	0.0	1	2
130	1	0.0	1	1
131	2	0.0	1	2
132	1	0.0	1	1
133	2	0.0	1	2
134	6	0.0	1	6
135	2	0.0	1	1 1
136	3	0.0	1	3
137	1	0.0	1	1
138	3	0.0	1	3
140	1	0.0	1	1
143	1	0.0	1	1
144	3	0.0	1	3
145	1	0.0	1	0 1
146	2	0.0	1	2
147	4	0.0	1	4
148	2	0.0	1	2
149	2	0.0	1	2
150	1	0.0	1	0 1
151	1	0.0	1	0 1
152	1	0.0	1	1
153	1	0.0	1	0 1
156	4	0.0	1	4
158	1	0.0	1	1
161	3	0.0	1	2 1
162	2	0.0	1	1 1
164	1	0.0	1	1
167	2	0.0	1	2
168	1	0.0	1	1
169	1	0.0	1	1
171	1	0.0	1	1
172	1	0.0	1	1
173	1	0.0	1	1
175	1	0.0	1	1
176	1	0.0	1	0 1
177	1	0.0	1	1
179	1	0.0	1	1
181	1	0.0	1	0 1
182	1	0.0	1	1
187	2	0.0	1	2
189	5	0.0	1	5
190	1	0.0	1	1
191	6	0.0	1	6
192	2	0.0	1	2
193	2	0.0	1	2
196	2	0.0	1	2
197	2	0.0	1	2
198	1	0.0	1	1
199	2	0.0	1	1 1
200	3	0.0	1	3
201	2	0.0	1	2
202	1	0.0	1	1
203	6	0.0	1	6
204	3	0.0	1	3
205	4	0.0	1	4
206	5	0.0	1	5
207	3	0.0	1	3
208	6	0.0	1	6
210	2	0.0	1	2
211	1	0.0	1	1
213	2	0.0	1	2
214	1	0.0	1	1
217	1	0.0	1	1
245	1	0.0	1	1
248	1	0.0	1	0 1
249	2	0.0	1	1 1
250	1	0.0	1	0 1
251	9	0.0	1	0 9

RUN STATISTICS FOR INPUT FILE: E9/host_removal/E9_R1.fastq.gz
=============================================
525460 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E9/adapter_trimmed/E9_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E9/host_removal/E9_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to E9_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E9/host_removal/E9_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E9/host_removal/E9_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 25.319 s (48.185 µs/read; 1.25 M reads/minute).

=== Summary ===

Total reads processed:                 525,460
Reads with adapters:                   185,409 (35.3%)
Reads written (passing filters):       525,460 (100.0%)

Total basepairs processed:   131,890,460 bp
Quality-trimmed:               2,393,748 bp (1.8%)
Total written (filtered):    129,065,443 bp (97.9%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 185409 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 41.1%
  C: 16.2%
  G: 10.4%
  T: 32.2%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
1	139987	131365.0	0	139987
2	33885	32841.2	0	33885
3	3725	8210.3	0	3725
4	558	2052.6	0	558
5	58	513.1	0	58
6	61	128.3	0	61
7	2797	32.1	0	2797
8	33	8.0	0	33
9	83	2.0	0	83
10	57	0.5	1	49 8
11	20	0.1	1	18 2
12	33	0.0	1	30 3
13	7	0.0	1	3 4
14	19	0.0	1	17 2
15	6	0.0	1	5 1
16	13	0.0	1	11 2
17	9	0.0	1	8 1
18	7	0.0	1	3 4
19	7	0.0	1	2 5
20	4	0.0	1	4
21	4	0.0	1	3 1
22	44	0.0	1	42 2
23	52	0.0	1	41 11
24	1448	0.0	1	1396 52
25	17	0.0	1	16 1
26	55	0.0	1	49 6
27	54	0.0	1	51 3
28	50	0.0	1	46 4
29	12	0.0	1	11 1
30	39	0.0	1	37 2
31	8	0.0	1	6 2
32	15	0.0	1	13 2
33	16	0.0	1	13 3
34	22	0.0	1	19 3
35	31	0.0	1	27 4
36	132	0.0	1	121 11
37	47	0.0	1	42 5
38	65	0.0	1	62 3
39	32	0.0	1	28 4
40	30	0.0	1	28 2
41	35	0.0	1	30 5
42	91	0.0	1	85 6
43	132	0.0	1	128 4
44	139	0.0	1	136 3
45	176	0.0	1	172 4
46	77	0.0	1	75 2
47	85	0.0	1	83 2
48	69	0.0	1	69
49	29	0.0	1	28 1
50	17	0.0	1	15 2
51	18	0.0	1	18
52	22	0.0	1	22
53	20	0.0	1	19 1
54	37	0.0	1	37
55	8	0.0	1	8
56	29	0.0	1	29
57	69	0.0	1	65 4
58	34	0.0	1	33 1
59	4	0.0	1	3 1
60	14	0.0	1	14
61	4	0.0	1	4
62	3	0.0	1	3
63	2	0.0	1	2
65	3	0.0	1	3
66	1	0.0	1	1
67	2	0.0	1	1 1
68	2	0.0	1	1 1
70	2	0.0	1	2
71	1	0.0	1	1
72	1	0.0	1	1
73	5	0.0	1	5
74	4	0.0	1	3 1
75	4	0.0	1	3 1
76	2	0.0	1	1 1
77	5	0.0	1	5
78	11	0.0	1	9 2
79	14	0.0	1	11 3
80	40	0.0	1	36 4
81	49	0.0	1	47 2
82	66	0.0	1	59 7
83	48	0.0	1	46 2
84	46	0.0	1	42 4
85	27	0.0	1	27
86	26	0.0	1	23 3
87	15	0.0	1	14 1
88	7	0.0	1	5 2
89	14	0.0	1	14
90	9	0.0	1	7 2
91	3	0.0	1	3
92	3	0.0	1	3
93	11	0.0	1	10 1
94	105	0.0	1	103 2
95	11	0.0	1	9 2
96	4	0.0	1	4
97	6	0.0	1	6
98	9	0.0	1	9
99	2	0.0	1	2
101	1	0.0	1	1
102	1	0.0	1	1
104	1	0.0	1	1
105	4	0.0	1	3 1
106	1	0.0	1	0 1
107	1	0.0	1	1
108	3	0.0	1	3
109	2	0.0	1	1 1
110	3	0.0	1	3
111	47	0.0	1	42 5
112	7	0.0	1	6 1
113	5	0.0	1	3 2
114	5	0.0	1	4 1
116	5	0.0	1	3 2
117	6	0.0	1	3 3
118	2	0.0	1	1 1
120	2	0.0	1	2
121	1	0.0	1	1
122	1	0.0	1	1
125	3	0.0	1	2 1
127	4	0.0	1	4
128	2	0.0	1	2
129	2	0.0	1	2
130	3	0.0	1	3
131	1	0.0	1	1
134	2	0.0	1	2
135	4	0.0	1	3 1
136	2	0.0	1	1 1
138	1	0.0	1	1
144	2	0.0	1	2
145	1	0.0	1	1
147	2	0.0	1	2
149	3	0.0	1	3
156	1	0.0	1	1
158	1	0.0	1	1
162	1	0.0	1	0 1
164	1	0.0	1	1
166	1	0.0	1	0 1
167	2	0.0	1	1 1
168	1	0.0	1	0 1
169	1	0.0	1	1
170	2	0.0	1	2
171	1	0.0	1	1
176	1	0.0	1	1
180	1	0.0	1	1
181	1	0.0	1	1
185	1	0.0	1	1
189	4	0.0	1	4
190	2	0.0	1	2
191	1	0.0	1	1
192	1	0.0	1	1
193	1	0.0	1	1
197	1	0.0	1	1
198	1	0.0	1	1
199	1	0.0	1	1
200	4	0.0	1	4
201	1	0.0	1	1
202	2	0.0	1	2
203	2	0.0	1	2
205	2	0.0	1	2
206	3	0.0	1	3
207	3	0.0	1	3
208	3	0.0	1	3
209	2	0.0	1	2
211	1	0.0	1	1
213	2	0.0	1	2
215	4	0.0	1	1 3
217	1	0.0	1	1
245	1	0.0	1	1
250	1	0.0	1	0 1
251	5	0.0	1	0 5

RUN STATISTICS FOR INPUT FILE: E9/host_removal/E9_R2.fastq.gz
=============================================
525460 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E9_R1_trimmed.fq.gz and E9_R2_trimmed.fq.gz
file_1: E9_R1_trimmed.fq.gz, file_2: E9_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E9_R1_trimmed.fq.gz and E9_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E9_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E9_R2_val_2.fq.gz

Total number of sequences analysed: 525460

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 681 (0.13%)


  >>> Now running FastQC on the validated data E9_R1_val_1.fq.gz<<<

Started analysis of E9_R1_val_1.fq.gz
Approx 5% complete for E9_R1_val_1.fq.gz
Approx 10% complete for E9_R1_val_1.fq.gz
Approx 15% complete for E9_R1_val_1.fq.gz
Approx 20% complete for E9_R1_val_1.fq.gz
Approx 25% complete for E9_R1_val_1.fq.gz
Approx 30% complete for E9_R1_val_1.fq.gz
Approx 35% complete for E9_R1_val_1.fq.gz
Approx 40% complete for E9_R1_val_1.fq.gz
Approx 45% complete for E9_R1_val_1.fq.gz
Approx 50% complete for E9_R1_val_1.fq.gz
Approx 55% complete for E9_R1_val_1.fq.gz
Approx 60% complete for E9_R1_val_1.fq.gz
Approx 65% complete for E9_R1_val_1.fq.gz
Approx 70% complete for E9_R1_val_1.fq.gz
Approx 75% complete for E9_R1_val_1.fq.gz
Approx 80% complete for E9_R1_val_1.fq.gz
Approx 85% complete for E9_R1_val_1.fq.gz
Approx 90% complete for E9_R1_val_1.fq.gz
Approx 95% complete for E9_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data E9_R2_val_2.fq.gz<<<

Started analysis of E9_R2_val_2.fq.gz
Approx 5% complete for E9_R2_val_2.fq.gz
Approx 10% complete for E9_R2_val_2.fq.gz
Approx 15% complete for E9_R2_val_2.fq.gz
Approx 20% complete for E9_R2_val_2.fq.gz
Approx 25% complete for E9_R2_val_2.fq.gz
Approx 30% complete for E9_R2_val_2.fq.gz
Approx 35% complete for E9_R2_val_2.fq.gz
Approx 40% complete for E9_R2_val_2.fq.gz
Approx 45% complete for E9_R2_val_2.fq.gz
Approx 50% complete for E9_R2_val_2.fq.gz
Approx 55% complete for E9_R2_val_2.fq.gz
Approx 60% complete for E9_R2_val_2.fq.gz
Approx 65% complete for E9_R2_val_2.fq.gz
Approx 70% complete for E9_R2_val_2.fq.gz
Approx 75% complete for E9_R2_val_2.fq.gz
Approx 80% complete for E9_R2_val_2.fq.gz
Approx 85% complete for E9_R2_val_2.fq.gz
Approx 90% complete for E9_R2_val_2.fq.gz
Approx 95% complete for E9_R2_val_2.fq.gz
Deleting both intermediate output files E9_R1_trimmed.fq.gz and E9_R2_trimmed.fq.gz

====================================================================================================

