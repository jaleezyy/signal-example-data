Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E10/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> E10/host_removal/E10_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	2596	AGATCGGAAGAGC	582337	0.45
smallRNA	0	TGGAATTCTCGG	582337	0.00
Nextera	0	CTGTCTCTTATA	582337	0.00
Using Illumina adapter for trimming (count: 2596). Second best hit was smallRNA (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E10/adapter_trimmed/E10_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E10/host_removal/E10_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to E10_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E10/host_removal/E10_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E10/host_removal/E10_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 26.119 s (44.853 µs/read; 1.34 M reads/minute).

=== Summary ===

Total reads processed:                 582,337
Reads with adapters:                   201,145 (34.5%)
Reads written (passing filters):       582,337 (100.0%)

Total basepairs processed:   146,166,587 bp
Quality-trimmed:                 455,960 bp (0.3%)
Total written (filtered):    145,285,326 bp (99.4%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 201145 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 36.1%
  C: 18.6%
  G: 11.0%
  T: 34.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	143536	145584.2	0	143536
2	50120	36396.1	0	50120
3	2843	9099.0	0	2843
4	955	2274.8	0	955
5	35	568.7	0	35
6	41	142.2	0	41
7	732	35.5	0	732
8	29	8.9	0	29
9	32	2.2	0	32
10	35	0.6	1	34 1
11	18	0.1	1	16 2
12	31	0.0	1	31
13	14	0.0	1	13 1
14	10	0.0	1	10
15	9	0.0	1	8 1
16	8	0.0	1	6 2
17	13	0.0	1	13
18	19	0.0	1	19
19	15	0.0	1	11 4
20	19	0.0	1	16 3
21	7	0.0	1	6 1
22	24	0.0	1	22 2
23	22	0.0	1	19 3
24	276	0.0	1	272 4
25	51	0.0	1	49 2
26	13	0.0	1	12 1
27	120	0.0	1	113 7
28	32	0.0	1	28 4
29	9	0.0	1	8 1
30	9	0.0	1	5 4
31	12	0.0	1	10 2
32	19	0.0	1	15 4
33	17	0.0	1	16 1
34	11	0.0	1	7 4
35	30	0.0	1	22 8
36	76	0.0	1	71 5
37	200	0.0	1	194 6
38	23	0.0	1	22 1
39	23	0.0	1	19 4
40	24	0.0	1	22 2
41	19	0.0	1	15 4
42	8	0.0	1	8
43	34	0.0	1	30 4
44	11	0.0	1	10 1
45	22	0.0	1	22
46	33	0.0	1	28 5
47	21	0.0	1	14 7
48	11	0.0	1	5 6
49	19	0.0	1	17 2
50	6	0.0	1	3 3
51	9	0.0	1	9
52	6	0.0	1	6
53	18	0.0	1	13 5
54	31	0.0	1	26 5
55	21	0.0	1	19 2
56	7	0.0	1	6 1
57	6	0.0	1	6
58	7	0.0	1	5 2
59	9	0.0	1	9
60	8	0.0	1	8
61	13	0.0	1	11 2
62	5	0.0	1	4 1
63	10	0.0	1	10
64	5	0.0	1	5
65	4	0.0	1	4
66	14	0.0	1	12 2
67	4	0.0	1	3 1
68	17	0.0	1	14 3
69	22	0.0	1	19 3
70	17	0.0	1	15 2
71	17	0.0	1	15 2
72	19	0.0	1	17 2
73	26	0.0	1	24 2
74	59	0.0	1	52 7
75	74	0.0	1	65 9
76	301	0.0	1	294 7
77	157	0.0	1	153 4
78	76	0.0	1	73 3
79	45	0.0	1	44 1
80	35	0.0	1	35
81	27	0.0	1	25 2
82	22	0.0	1	22
83	11	0.0	1	11
84	6	0.0	1	5 1
85	7	0.0	1	7
86	3	0.0	1	3
87	8	0.0	1	8
88	10	0.0	1	10
89	11	0.0	1	11
90	5	0.0	1	5
91	5	0.0	1	4 1
92	8	0.0	1	8
93	9	0.0	1	8 1
94	75	0.0	1	75
95	12	0.0	1	11 1
96	8	0.0	1	7 1
97	1	0.0	1	1
98	2	0.0	1	2
99	4	0.0	1	3 1
100	2	0.0	1	2
101	7	0.0	1	7
102	1	0.0	1	1
103	2	0.0	1	2
105	3	0.0	1	3
106	2	0.0	1	2
107	5	0.0	1	5
108	6	0.0	1	5 1
109	2	0.0	1	2
110	1	0.0	1	1
111	4	0.0	1	4
112	2	0.0	1	2
113	5	0.0	1	5
114	1	0.0	1	0 1
115	2	0.0	1	1 1
116	4	0.0	1	4
117	2	0.0	1	2
118	1	0.0	1	1
120	2	0.0	1	2
121	2	0.0	1	2
123	1	0.0	1	1
125	1	0.0	1	1
126	2	0.0	1	1 1
127	7	0.0	1	7
128	1	0.0	1	1
129	3	0.0	1	3
130	1	0.0	1	1
131	1	0.0	1	1
132	1	0.0	1	1
133	3	0.0	1	3
134	4	0.0	1	3 1
136	1	0.0	1	1
137	1	0.0	1	1
140	1	0.0	1	1
141	3	0.0	1	2 1
143	1	0.0	1	1
145	1	0.0	1	1
147	3	0.0	1	3
149	2	0.0	1	1 1
150	1	0.0	1	1
151	1	0.0	1	1
152	3	0.0	1	2 1
153	1	0.0	1	1
154	1	0.0	1	1
155	1	0.0	1	1
156	5	0.0	1	5
158	2	0.0	1	2
159	2	0.0	1	2
161	1	0.0	1	0 1
162	1	0.0	1	1
163	1	0.0	1	1
164	2	0.0	1	2
165	4	0.0	1	4
166	5	0.0	1	5
167	4	0.0	1	3 1
169	2	0.0	1	2
170	1	0.0	1	0 1
172	2	0.0	1	2
173	2	0.0	1	2
174	1	0.0	1	1
175	2	0.0	1	2
177	2	0.0	1	2
178	1	0.0	1	1
180	4	0.0	1	4
181	1	0.0	1	1
182	1	0.0	1	1
183	1	0.0	1	1
185	1	0.0	1	1
188	1	0.0	1	1
189	1	0.0	1	1
192	1	0.0	1	0 1
194	1	0.0	1	1
196	1	0.0	1	1
197	1	0.0	1	1
198	1	0.0	1	1
201	1	0.0	1	1
202	1	0.0	1	1
203	1	0.0	1	1
205	1	0.0	1	0 1
206	1	0.0	1	1
208	1	0.0	1	1
209	1	0.0	1	1
210	1	0.0	1	1
212	1	0.0	1	1
248	2	0.0	1	0 2
251	5	0.0	1	0 5

RUN STATISTICS FOR INPUT FILE: E10/host_removal/E10_R1.fastq.gz
=============================================
582337 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E10/adapter_trimmed/E10_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E10/host_removal/E10_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to E10_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E10/host_removal/E10_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E10/host_removal/E10_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 45.284 s (77.763 µs/read; 0.77 M reads/minute).

=== Summary ===

Total reads processed:                 582,337
Reads with adapters:                   197,723 (34.0%)
Reads written (passing filters):       582,337 (100.0%)

Total basepairs processed:   146,166,587 bp
Quality-trimmed:               1,777,541 bp (1.2%)
Total written (filtered):    144,031,936 bp (98.5%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 197723 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 41.7%
  C: 17.5%
  G: 10.2%
  T: 30.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	151931	145584.2	0	151931
2	37940	36396.1	0	37940
3	3865	9099.0	0	3865
4	924	2274.8	0	924
5	50	568.7	0	50
6	35	142.2	0	35
7	703	35.5	0	703
8	16	8.9	0	16
9	25	2.2	0	25
10	33	0.6	1	28 5
11	17	0.1	1	15 2
12	29	0.0	1	24 5
13	6	0.0	1	4 2
14	18	0.0	1	16 2
15	3	0.0	1	2 1
16	15	0.0	1	13 2
17	14	0.0	1	13 1
18	2	0.0	1	1 1
19	20	0.0	1	20
20	10	0.0	1	10
21	1	0.0	1	1
22	13	0.0	1	13
23	29	0.0	1	24 5
24	309	0.0	1	296 13
25	4	0.0	1	4
26	25	0.0	1	22 3
27	107	0.0	1	101 6
28	27	0.0	1	25 2
29	6	0.0	1	3 3
30	24	0.0	1	22 2
31	2	0.0	1	1 1
32	18	0.0	1	18
33	16	0.0	1	15 1
34	16	0.0	1	13 3
35	43	0.0	1	39 4
36	181	0.0	1	176 5
37	46	0.0	1	42 4
38	36	0.0	1	35 1
39	16	0.0	1	16
40	22	0.0	1	21 1
41	32	0.0	1	30 2
42	70	0.0	1	68 2
43	86	0.0	1	82 4
44	71	0.0	1	68 3
45	94	0.0	1	93 1
46	47	0.0	1	46 1
47	41	0.0	1	40 1
48	24	0.0	1	23 1
49	22	0.0	1	20 2
50	10	0.0	1	10
51	7	0.0	1	6 1
52	4	0.0	1	4
53	12	0.0	1	12
54	25	0.0	1	24 1
55	5	0.0	1	5
56	22	0.0	1	22
57	36	0.0	1	35 1
58	27	0.0	1	26 1
59	4	0.0	1	4
60	7	0.0	1	7
61	2	0.0	1	2
62	1	0.0	1	1
63	3	0.0	1	3
64	1	0.0	1	1
65	1	0.0	1	1
66	3	0.0	1	3
67	1	0.0	1	1
68	2	0.0	1	2
69	2	0.0	1	1 1
70	3	0.0	1	2 1
72	2	0.0	1	2
73	4	0.0	1	4
74	5	0.0	1	5
75	5	0.0	1	5
76	5	0.0	1	5
77	3	0.0	1	3
78	11	0.0	1	10 1
79	10	0.0	1	9 1
80	31	0.0	1	30 1
81	51	0.0	1	48 3
82	42	0.0	1	39 3
83	32	0.0	1	31 1
84	30	0.0	1	27 3
85	18	0.0	1	16 2
86	6	0.0	1	5 1
87	5	0.0	1	3 2
88	9	0.0	1	7 2
89	7	0.0	1	7
90	1	0.0	1	0 1
91	2	0.0	1	2
92	4	0.0	1	4
93	6	0.0	1	4 2
94	49	0.0	1	48 1
95	6	0.0	1	5 1
96	8	0.0	1	7 1
97	4	0.0	1	3 1
98	2	0.0	1	2
100	2	0.0	1	2
101	1	0.0	1	1
104	1	0.0	1	1
105	2	0.0	1	2
108	3	0.0	1	3
110	1	0.0	1	0 1
111	1	0.0	1	0 1
114	2	0.0	1	2
115	2	0.0	1	0 2
116	2	0.0	1	0 2
117	4	0.0	1	4
118	2	0.0	1	2
120	1	0.0	1	1
121	1	0.0	1	1
126	2	0.0	1	2
127	6	0.0	1	6
128	1	0.0	1	0 1
129	1	0.0	1	1
131	1	0.0	1	1
134	1	0.0	1	0 1
137	1	0.0	1	1
141	1	0.0	1	1
143	2	0.0	1	1 1
147	2	0.0	1	2
148	1	0.0	1	1
154	2	0.0	1	2
155	1	0.0	1	0 1
156	5	0.0	1	5
157	2	0.0	1	2
158	1	0.0	1	1
159	2	0.0	1	2
160	1	0.0	1	1
164	1	0.0	1	1
165	1	0.0	1	1
166	4	0.0	1	4
168	1	0.0	1	1
169	3	0.0	1	3
172	4	0.0	1	3 1
173	1	0.0	1	1
175	3	0.0	1	3
176	1	0.0	1	1
178	1	0.0	1	1
180	1	0.0	1	1
182	1	0.0	1	1
183	1	0.0	1	1
185	1	0.0	1	1
186	1	0.0	1	1
188	1	0.0	1	1
189	1	0.0	1	1
191	1	0.0	1	1
192	3	0.0	1	3
193	1	0.0	1	1
195	1	0.0	1	1
197	1	0.0	1	1
198	1	0.0	1	1
203	1	0.0	1	1
207	2	0.0	1	2
208	2	0.0	1	2
210	1	0.0	1	1
214	1	0.0	1	1
217	1	0.0	1	0 1
251	2	0.0	1	0 2

RUN STATISTICS FOR INPUT FILE: E10/host_removal/E10_R2.fastq.gz
=============================================
582337 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E10_R1_trimmed.fq.gz and E10_R2_trimmed.fq.gz
file_1: E10_R1_trimmed.fq.gz, file_2: E10_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E10_R1_trimmed.fq.gz and E10_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E10_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E10_R2_val_2.fq.gz

Total number of sequences analysed: 582337

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 745 (0.13%)


  >>> Now running FastQC on the validated data E10_R1_val_1.fq.gz<<<

Started analysis of E10_R1_val_1.fq.gz
Approx 5% complete for E10_R1_val_1.fq.gz
Approx 10% complete for E10_R1_val_1.fq.gz
Approx 15% complete for E10_R1_val_1.fq.gz
Approx 20% complete for E10_R1_val_1.fq.gz
Approx 25% complete for E10_R1_val_1.fq.gz
Approx 30% complete for E10_R1_val_1.fq.gz
Approx 35% complete for E10_R1_val_1.fq.gz
Approx 40% complete for E10_R1_val_1.fq.gz
Approx 45% complete for E10_R1_val_1.fq.gz
Approx 50% complete for E10_R1_val_1.fq.gz
Approx 55% complete for E10_R1_val_1.fq.gz
Approx 60% complete for E10_R1_val_1.fq.gz
Approx 65% complete for E10_R1_val_1.fq.gz
Approx 70% complete for E10_R1_val_1.fq.gz
Approx 75% complete for E10_R1_val_1.fq.gz
Approx 80% complete for E10_R1_val_1.fq.gz
Approx 85% complete for E10_R1_val_1.fq.gz
Approx 90% complete for E10_R1_val_1.fq.gz
Approx 95% complete for E10_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data E10_R2_val_2.fq.gz<<<

Started analysis of E10_R2_val_2.fq.gz
Approx 5% complete for E10_R2_val_2.fq.gz
Approx 10% complete for E10_R2_val_2.fq.gz
Approx 15% complete for E10_R2_val_2.fq.gz
Approx 20% complete for E10_R2_val_2.fq.gz
Approx 25% complete for E10_R2_val_2.fq.gz
Approx 30% complete for E10_R2_val_2.fq.gz
Approx 35% complete for E10_R2_val_2.fq.gz
Approx 40% complete for E10_R2_val_2.fq.gz
Approx 45% complete for E10_R2_val_2.fq.gz
Approx 50% complete for E10_R2_val_2.fq.gz
Approx 55% complete for E10_R2_val_2.fq.gz
Approx 60% complete for E10_R2_val_2.fq.gz
Approx 65% complete for E10_R2_val_2.fq.gz
Approx 70% complete for E10_R2_val_2.fq.gz
Approx 75% complete for E10_R2_val_2.fq.gz
Approx 80% complete for E10_R2_val_2.fq.gz
Approx 85% complete for E10_R2_val_2.fq.gz
Approx 90% complete for E10_R2_val_2.fq.gz
Approx 95% complete for E10_R2_val_2.fq.gz
Deleting both intermediate output files E10_R1_trimmed.fq.gz and E10_R2_trimmed.fq.gz

====================================================================================================

