Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.8
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E60/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> E60/host_removal/E60_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	12758	AGATCGGAAGAGC	610386	2.09
Nextera	0	CTGTCTCTTATA	610386	0.00
smallRNA	0	TGGAATTCTCGG	610386	0.00
Using Illumina adapter for trimming (count: 12758). Second best hit was Nextera (count: 0)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E60/adapter_trimmed/E60_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E60/host_removal/E60_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j 2
Writing final adapter and quality trimmed output to E60_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E60/host_removal/E60_R1.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E60/host_removal/E60_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 22.138 s (36.269 µs/read; 1.65 M reads/minute).

=== Summary ===

Total reads processed:                 610,386
Reads with adapters:                   253,035 (41.5%)
Reads written (passing filters):       610,386 (100.0%)

Total basepairs processed:   153,206,886 bp
Quality-trimmed:               2,494,770 bp (1.6%)
Total written (filtered):    149,467,471 bp (97.6%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 253035 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 33.5%
  C: 14.3%
  G: 10.0%
  T: 42.2%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	153246	152596.5	0	153246
2	67296	38149.1	0	67296
3	3386	9537.3	0	3386
4	902	2384.3	0	902
5	565	596.1	0	565
6	421	149.0	0	421
7	12218	37.3	0	12218
8	274	9.3	0	274
9	362	2.3	0	360 2
10	392	0.6	1	371 21
11	137	0.1	1	110 27
12	144	0.0	1	127 17
13	163	0.0	1	152 11
14	128	0.0	1	104 24
15	64	0.0	1	49 15
16	29	0.0	1	22 7
17	54	0.0	1	42 12
18	162	0.0	1	147 15
19	140	0.0	1	130 10
20	57	0.0	1	45 12
21	66	0.0	1	54 12
22	122	0.0	1	109 13
23	47	0.0	1	39 8
24	154	0.0	1	132 22
25	208	0.0	1	157 51
26	54	0.0	1	37 17
27	106	0.0	1	75 31
28	99	0.0	1	61 38
29	92	0.0	1	65 27
30	128	0.0	1	113 15
31	72	0.0	1	46 26
32	79	0.0	1	59 20
33	70	0.0	1	48 22
34	135	0.0	1	93 42
35	106	0.0	1	93 13
36	1140	0.0	1	1087 53
37	666	0.0	1	634 32
38	212	0.0	1	188 24
39	63	0.0	1	51 12
40	66	0.0	1	50 16
41	126	0.0	1	99 27
42	75	0.0	1	65 10
43	270	0.0	1	240 30
44	70	0.0	1	65 5
45	129	0.0	1	110 19
46	398	0.0	1	372 26
47	154	0.0	1	123 31
48	82	0.0	1	63 19
49	130	0.0	1	115 15
50	52	0.0	1	44 8
51	50	0.0	1	39 11
52	87	0.0	1	66 21
53	71	0.0	1	52 19
54	121	0.0	1	81 40
55	96	0.0	1	78 18
56	48	0.0	1	35 13
57	42	0.0	1	31 11
58	29	0.0	1	23 6
59	37	0.0	1	32 5
60	40	0.0	1	37 3
61	30	0.0	1	25 5
62	44	0.0	1	37 7
63	56	0.0	1	50 6
64	47	0.0	1	43 4
65	83	0.0	1	73 10
66	91	0.0	1	77 14
67	40	0.0	1	31 9
68	78	0.0	1	65 13
69	93	0.0	1	75 18
70	64	0.0	1	50 14
71	75	0.0	1	67 8
72	118	0.0	1	106 12
73	215	0.0	1	187 28
74	279	0.0	1	250 29
75	428	0.0	1	385 43
76	1546	0.0	1	1511 35
77	1046	0.0	1	1015 31
78	437	0.0	1	427 10
79	235	0.0	1	230 5
80	140	0.0	1	137 3
81	97	0.0	1	94 3
82	78	0.0	1	76 2
83	47	0.0	1	46 1
84	50	0.0	1	47 3
85	59	0.0	1	55 4
86	45	0.0	1	41 4
87	65	0.0	1	60 5
88	47	0.0	1	36 11
89	43	0.0	1	32 11
90	22	0.0	1	22
91	28	0.0	1	28
92	39	0.0	1	38 1
93	52	0.0	1	48 4
94	377	0.0	1	370 7
95	52	0.0	1	47 5
96	51	0.0	1	50 1
97	15	0.0	1	13 2
98	12	0.0	1	12
99	6	0.0	1	6
100	9	0.0	1	8 1
101	8	0.0	1	5 3
102	9	0.0	1	8 1
103	7	0.0	1	6 1
104	7	0.0	1	5 2
105	6	0.0	1	4 2
106	17	0.0	1	16 1
107	25	0.0	1	20 5
108	19	0.0	1	17 2
109	19	0.0	1	15 4
110	6	0.0	1	6
111	10	0.0	1	10
112	12	0.0	1	12
113	12	0.0	1	9 3
114	23	0.0	1	23
115	14	0.0	1	13 1
116	11	0.0	1	9 2
117	6	0.0	1	6
118	1	0.0	1	1
119	5	0.0	1	5
120	5	0.0	1	3 2
121	3	0.0	1	3
122	2	0.0	1	2
123	7	0.0	1	6 1
124	20	0.0	1	19 1
125	6	0.0	1	6
126	9	0.0	1	9
127	57	0.0	1	57
128	15	0.0	1	13 2
129	12	0.0	1	12
130	8	0.0	1	7 1
131	6	0.0	1	6
132	7	0.0	1	6 1
133	5	0.0	1	4 1
134	19	0.0	1	18 1
135	9	0.0	1	7 2
136	8	0.0	1	8
137	5	0.0	1	5
138	5	0.0	1	5
139	6	0.0	1	6
140	4	0.0	1	4
141	4	0.0	1	4
142	2	0.0	1	2
143	5	0.0	1	5
144	6	0.0	1	6
145	4	0.0	1	3 1
146	4	0.0	1	4
147	12	0.0	1	11 1
148	8	0.0	1	8
149	10	0.0	1	10
150	5	0.0	1	3 2
151	1	0.0	1	1
152	4	0.0	1	3 1
153	1	0.0	1	1
154	6	0.0	1	6
155	6	0.0	1	5 1
156	22	0.0	1	22
157	1	0.0	1	1
158	2	0.0	1	2
159	8	0.0	1	8
160	4	0.0	1	4
161	1	0.0	1	1
162	1	0.0	1	1
163	2	0.0	1	2
165	3	0.0	1	3
166	4	0.0	1	4
167	8	0.0	1	8
168	5	0.0	1	4 1
169	9	0.0	1	8 1
170	2	0.0	1	2
171	5	0.0	1	5
173	3	0.0	1	3
174	4	0.0	1	4
175	7	0.0	1	7
176	5	0.0	1	3 2
177	1	0.0	1	1
178	3	0.0	1	3
179	1	0.0	1	1
180	2	0.0	1	2
181	5	0.0	1	5
182	3	0.0	1	3
183	1	0.0	1	1
184	1	0.0	1	1
185	1	0.0	1	1
186	2	0.0	1	2
187	2	0.0	1	1 1
188	2	0.0	1	1 1
189	3	0.0	1	3
190	2	0.0	1	2
191	5	0.0	1	4 1
192	2	0.0	1	1 1
193	6	0.0	1	5 1
194	3	0.0	1	3
195	4	0.0	1	4
196	3	0.0	1	2 1
197	5	0.0	1	5
198	3	0.0	1	2 1
199	2	0.0	1	2
200	2	0.0	1	2
201	1	0.0	1	1
202	3	0.0	1	3
203	4	0.0	1	4
204	2	0.0	1	2
205	6	0.0	1	5 1
206	2	0.0	1	2
207	3	0.0	1	2 1
208	10	0.0	1	9 1
209	7	0.0	1	7
210	14	0.0	1	14
211	6	0.0	1	6
212	5	0.0	1	4 1
213	4	0.0	1	4
214	1	0.0	1	1
215	9	0.0	1	9
216	2	0.0	1	2
217	4	0.0	1	4
220	1	0.0	1	1
225	1	0.0	1	1
234	1	0.0	1	1
238	2	0.0	1	2
241	1	0.0	1	1
251	2	0.0	1	0 2

RUN STATISTICS FOR INPUT FILE: E60/host_removal/E60_R1.fastq.gz
=============================================
610386 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/lab/mcarthurlab/nasirja/covid-19-signal/benchmark_output/PRJNA689621_subset-input_results_dir/E60/adapter_trimmed/E60_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: E60/host_removal/E60_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.8
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.8). Setting -j -j 2
Writing final adapter and quality trimmed output to E60_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file E60/host_removal/E60_R2.fastq.gz <<< 
This is cutadapt 4.8 with Python 3.12.3
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC E60/host_removal/E60_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 23.840 s (39.057 µs/read; 1.54 M reads/minute).

=== Summary ===

Total reads processed:                 610,386
Reads with adapters:                   253,995 (41.6%)
Reads written (passing filters):       610,386 (100.0%)

Total basepairs processed:   153,206,886 bp
Quality-trimmed:               6,508,100 bp (4.2%)
Total written (filtered):    145,834,906 bp (95.2%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 253995 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 39.2%
  C: 14.2%
  G: 9.8%
  T: 36.7%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	176312	152596.5	0	176312
2	49946	38149.1	0	49946
3	4470	9537.3	0	4470
4	893	2384.3	0	893
5	568	596.1	0	568
6	404	149.0	0	404
7	11103	37.3	0	11103
8	141	9.3	0	141
9	331	2.3	0	331
10	298	0.6	1	275 23
11	61	0.1	1	55 6
12	122	0.0	1	111 11
13	48	0.0	1	37 11
14	200	0.0	1	187 13
15	39	0.0	1	27 12
16	33	0.0	1	23 10
17	65	0.0	1	58 7
18	58	0.0	1	51 7
19	154	0.0	1	141 13
20	32	0.0	1	25 7
21	14	0.0	1	9 5
22	90	0.0	1	82 8
23	60	0.0	1	46 14
24	218	0.0	1	194 24
25	39	0.0	1	33 6
26	83	0.0	1	72 11
27	74	0.0	1	65 9
28	114	0.0	1	97 17
29	49	0.0	1	39 10
30	220	0.0	1	197 23
31	59	0.0	1	49 10
32	156	0.0	1	143 13
33	87	0.0	1	78 9
34	414	0.0	1	395 19
35	116	0.0	1	104 12
36	635	0.0	1	616 19
37	491	0.0	1	458 33
38	266	0.0	1	246 20
39	114	0.0	1	94 20
40	124	0.0	1	122 2
41	109	0.0	1	101 8
42	281	0.0	1	274 7
43	430	0.0	1	419 11
44	448	0.0	1	434 14
45	448	0.0	1	436 12
46	272	0.0	1	261 11
47	253	0.0	1	244 9
48	155	0.0	1	151 4
49	84	0.0	1	81 3
50	56	0.0	1	55 1
51	41	0.0	1	38 3
52	36	0.0	1	30 6
53	58	0.0	1	58
54	133	0.0	1	130 3
55	45	0.0	1	41 4
56	77	0.0	1	74 3
57	232	0.0	1	224 8
58	93	0.0	1	90 3
59	21	0.0	1	16 5
60	56	0.0	1	54 2
61	17	0.0	1	15 2
62	14	0.0	1	14
63	21	0.0	1	21
64	10	0.0	1	9 1
65	14	0.0	1	10 4
66	3	0.0	1	2 1
67	7	0.0	1	6 1
68	3	0.0	1	2 1
69	2	0.0	1	2
70	3	0.0	1	3
71	4	0.0	1	4
72	6	0.0	1	6
73	10	0.0	1	10
74	16	0.0	1	13 3
75	8	0.0	1	7 1
76	20	0.0	1	18 2
77	52	0.0	1	51 1
78	79	0.0	1	77 2
79	62	0.0	1	61 1
80	127	0.0	1	122 5
81	127	0.0	1	120 7
82	113	0.0	1	108 5
83	80	0.0	1	76 4
84	61	0.0	1	56 5
85	59	0.0	1	58 1
86	42	0.0	1	39 3
87	44	0.0	1	40 4
88	27	0.0	1	23 4
89	28	0.0	1	25 3
90	10	0.0	1	8 2
91	21	0.0	1	16 5
92	15	0.0	1	14 1
93	28	0.0	1	25 3
94	300	0.0	1	290 10
95	26	0.0	1	22 4
96	22	0.0	1	22
97	10	0.0	1	10
98	4	0.0	1	4
99	10	0.0	1	10
100	3	0.0	1	3
101	4	0.0	1	3 1
102	3	0.0	1	3
103	1	0.0	1	1
104	4	0.0	1	3 1
105	1	0.0	1	1
106	9	0.0	1	5 4
107	7	0.0	1	4 3
108	4	0.0	1	2 2
109	4	0.0	1	4
110	1	0.0	1	1
111	1	0.0	1	1
112	6	0.0	1	6
113	10	0.0	1	5 5
114	18	0.0	1	12 6
115	7	0.0	1	3 4
116	8	0.0	1	4 4
117	3	0.0	1	3
118	2	0.0	1	1 1
119	2	0.0	1	2
120	1	0.0	1	1
121	1	0.0	1	1
122	2	0.0	1	2
123	3	0.0	1	0 3
124	10	0.0	1	9 1
125	1	0.0	1	1
126	6	0.0	1	5 1
127	48	0.0	1	42 6
128	8	0.0	1	7 1
129	6	0.0	1	6
130	4	0.0	1	3 1
131	3	0.0	1	1 2
132	3	0.0	1	2 1
133	2	0.0	1	2
134	10	0.0	1	8 2
135	5	0.0	1	4 1
136	9	0.0	1	6 3
137	3	0.0	1	1 2
138	2	0.0	1	2
139	1	0.0	1	1
142	1	0.0	1	0 1
143	4	0.0	1	3 1
144	1	0.0	1	1
145	1	0.0	1	0 1
146	2	0.0	1	2
147	8	0.0	1	8
148	4	0.0	1	3 1
149	7	0.0	1	6 1
150	6	0.0	1	3 3
151	1	0.0	1	1
154	7	0.0	1	7
155	2	0.0	1	2
156	9	0.0	1	9
157	2	0.0	1	2
158	2	0.0	1	1 1
159	3	0.0	1	3
160	5	0.0	1	5
161	4	0.0	1	4
165	1	0.0	1	1
166	5	0.0	1	5
167	6	0.0	1	5 1
168	4	0.0	1	3 1
169	6	0.0	1	6
170	2	0.0	1	2
171	2	0.0	1	2
173	5	0.0	1	4 1
174	3	0.0	1	3
175	4	0.0	1	4
176	6	0.0	1	4 2
177	1	0.0	1	1
178	1	0.0	1	1
181	2	0.0	1	2
183	1	0.0	1	1
184	1	0.0	1	1
185	1	0.0	1	1
186	3	0.0	1	3
187	3	0.0	1	3
189	3	0.0	1	2 1
190	3	0.0	1	3
191	1	0.0	1	1
192	4	0.0	1	3 1
193	1	0.0	1	1
194	2	0.0	1	2
195	1	0.0	1	1
196	1	0.0	1	1
197	1	0.0	1	1
198	5	0.0	1	5
199	3	0.0	1	3
200	2	0.0	1	2
201	3	0.0	1	3
202	2	0.0	1	2
203	1	0.0	1	0 1
204	4	0.0	1	4
205	3	0.0	1	3
206	5	0.0	1	5
208	12	0.0	1	11 1
209	4	0.0	1	4
210	7	0.0	1	7
211	4	0.0	1	3 1
212	1	0.0	1	1
213	2	0.0	1	1 1
214	1	0.0	1	1
215	15	0.0	1	13 2
216	2	0.0	1	2
217	7	0.0	1	4 3
218	1	0.0	1	0 1
222	1	0.0	1	1
223	1	0.0	1	1
233	1	0.0	1	1
241	1	0.0	1	1
251	4	0.0	1	0 4

RUN STATISTICS FOR INPUT FILE: E60/host_removal/E60_R2.fastq.gz
=============================================
610386 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files E60_R1_trimmed.fq.gz and E60_R2_trimmed.fq.gz
file_1: E60_R1_trimmed.fq.gz, file_2: E60_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: E60_R1_trimmed.fq.gz and E60_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to E60_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to E60_R2_val_2.fq.gz

Total number of sequences analysed: 610386

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 743 (0.12%)


  >>> Now running FastQC on the validated data E60_R1_val_1.fq.gz<<<

Started analysis of E60_R1_val_1.fq.gz
Approx 5% complete for E60_R1_val_1.fq.gz
Approx 10% complete for E60_R1_val_1.fq.gz
Approx 15% complete for E60_R1_val_1.fq.gz
Approx 20% complete for E60_R1_val_1.fq.gz
Approx 25% complete for E60_R1_val_1.fq.gz
Approx 30% complete for E60_R1_val_1.fq.gz
Approx 35% complete for E60_R1_val_1.fq.gz
Approx 40% complete for E60_R1_val_1.fq.gz
Approx 45% complete for E60_R1_val_1.fq.gz
Approx 50% complete for E60_R1_val_1.fq.gz
Approx 55% complete for E60_R1_val_1.fq.gz
Approx 60% complete for E60_R1_val_1.fq.gz
Approx 65% complete for E60_R1_val_1.fq.gz
Approx 70% complete for E60_R1_val_1.fq.gz
Approx 75% complete for E60_R1_val_1.fq.gz
Approx 80% complete for E60_R1_val_1.fq.gz
Approx 85% complete for E60_R1_val_1.fq.gz
Approx 90% complete for E60_R1_val_1.fq.gz
Approx 95% complete for E60_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data E60_R2_val_2.fq.gz<<<

Started analysis of E60_R2_val_2.fq.gz
Approx 5% complete for E60_R2_val_2.fq.gz
Approx 10% complete for E60_R2_val_2.fq.gz
Approx 15% complete for E60_R2_val_2.fq.gz
Approx 20% complete for E60_R2_val_2.fq.gz
Approx 25% complete for E60_R2_val_2.fq.gz
Approx 30% complete for E60_R2_val_2.fq.gz
Approx 35% complete for E60_R2_val_2.fq.gz
Approx 40% complete for E60_R2_val_2.fq.gz
Approx 45% complete for E60_R2_val_2.fq.gz
Approx 50% complete for E60_R2_val_2.fq.gz
Approx 55% complete for E60_R2_val_2.fq.gz
Approx 60% complete for E60_R2_val_2.fq.gz
Approx 65% complete for E60_R2_val_2.fq.gz
Approx 70% complete for E60_R2_val_2.fq.gz
Approx 75% complete for E60_R2_val_2.fq.gz
Approx 80% complete for E60_R2_val_2.fq.gz
Approx 85% complete for E60_R2_val_2.fq.gz
Approx 90% complete for E60_R2_val_2.fq.gz
Approx 95% complete for E60_R2_val_2.fq.gz
Deleting both intermediate output files E60_R1_trimmed.fq.gz and E60_R2_trimmed.fq.gz

====================================================================================================

