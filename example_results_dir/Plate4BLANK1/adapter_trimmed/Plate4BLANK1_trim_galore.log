Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.1
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/home/nasirja/covid-19-signal/subset_viral_7_results_dir/Plate4BLANK1/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> Plate4BLANK1/host_removal/Plate4BLANK1_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	6706	AGATCGGAAGAGC	24097	27.83
Nextera	0	CTGTCTCTTATA	24097	0.00
smallRNA	0	TGGAATTCTCGG	24097	0.00
Using Illumina adapter for trimming (count: 6706). Second best hit was Nextera (count: 0)

Writing report to '/workspace/home/nasirja/covid-19-signal/subset_viral_7_results_dir/Plate4BLANK1/adapter_trimmed/Plate4BLANK1_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: Plate4BLANK1/host_removal/Plate4BLANK1_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.1
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.1). Setting -j 2
Writing final adapter and quality trimmed output to Plate4BLANK1_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file Plate4BLANK1/host_removal/Plate4BLANK1_R1.fastq.gz <<< 
This is cutadapt 4.1 with Python 3.9.13
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC Plate4BLANK1/host_removal/Plate4BLANK1_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 0.49 s (20 µs/read; 2.95 M reads/minute).

=== Summary ===

Total reads processed:                  24,097
Reads with adapters:                    13,172 (54.7%)
Reads written (passing filters):        24,097 (100.0%)

Total basepairs processed:     6,048,347 bp
Quality-trimmed:               1,482,095 bp (24.5%)
Total written (filtered):      3,946,773 bp (65.3%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 13172 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 14.6%
  C: 32.0%
  G: 21.7%
  T: 30.8%
  none/other: 0.9%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3749	6024.2	0	3749
2	987	1506.1	0	987
3	408	376.5	0	408
4	102	94.1	0	102
5	29	23.5	0	29
6	25	5.9	0	25
7	48	1.5	0	48
8	9	0.4	0	9
9	22	0.1	0	22
10	33	0.0	1	22 11
11	28	0.0	1	17 11
12	27	0.0	1	16 11
13	19	0.0	1	13 6
14	10	0.0	1	6 4
15	31	0.0	1	14 17
16	13	0.0	1	8 5
17	22	0.0	1	12 10
18	16	0.0	1	9 7
19	18	0.0	1	10 8
20	29	0.0	1	22 7
21	17	0.0	1	10 7
22	32	0.0	1	19 13
23	27	0.0	1	15 12
24	32	0.0	1	19 13
25	50	0.0	1	32 18
26	36	0.0	1	16 20
27	63	0.0	1	31 32
28	51	0.0	1	24 27
29	69	0.0	1	39 30
30	33	0.0	1	15 18
31	24	0.0	1	13 11
32	41	0.0	1	27 14
33	38	0.0	1	21 17
34	60	0.0	1	39 21
35	30	0.0	1	14 16
36	59	0.0	1	29 30
37	99	0.0	1	73 26
38	54	0.0	1	36 18
39	79	0.0	1	57 22
40	60	0.0	1	42 18
41	27	0.0	1	21 6
42	39	0.0	1	29 10
43	61	0.0	1	40 21
44	23	0.0	1	15 8
45	30	0.0	1	19 11
46	34	0.0	1	13 21
47	93	0.0	1	57 36
48	38	0.0	1	19 19
49	35	0.0	1	22 13
50	46	0.0	1	36 10
51	42	0.0	1	27 15
52	92	0.0	1	66 26
53	70	0.0	1	47 23
54	143	0.0	1	85 58
55	78	0.0	1	56 22
56	35	0.0	1	24 11
57	57	0.0	1	45 12
58	22	0.0	1	20 2
59	29	0.0	1	26 3
60	50	0.0	1	41 9
61	33	0.0	1	27 6
62	37	0.0	1	32 5
63	49	0.0	1	42 7
64	28	0.0	1	20 8
65	51	0.0	1	46 5
66	109	0.0	1	76 33
67	44	0.0	1	32 12
68	94	0.0	1	66 28
69	95	0.0	1	78 17
70	72	0.0	1	63 9
71	97	0.0	1	84 13
72	141	0.0	1	118 23
73	242	0.0	1	201 41
74	299	0.0	1	253 46
75	395	0.0	1	348 47
76	682	0.0	1	630 52
77	437	0.0	1	423 14
78	272	0.0	1	260 12
79	173	0.0	1	168 5
80	120	0.0	1	115 5
81	84	0.0	1	81 3
82	56	0.0	1	55 1
83	42	0.0	1	40 2
84	45	0.0	1	42 3
85	53	0.0	1	46 7
86	68	0.0	1	53 15
87	64	0.0	1	57 7
88	45	0.0	1	42 3
89	42	0.0	1	31 11
90	31	0.0	1	28 3
91	21	0.0	1	21
92	25	0.0	1	23 2
93	35	0.0	1	28 7
94	53	0.0	1	38 15
95	41	0.0	1	36 5
96	52	0.0	1	41 11
97	12	0.0	1	11 1
98	18	0.0	1	15 3
99	14	0.0	1	10 4
100	15	0.0	1	15
101	12	0.0	1	10 2
102	10	0.0	1	10
103	12	0.0	1	11 1
104	17	0.0	1	15 2
105	14	0.0	1	13 1
106	29	0.0	1	26 3
107	34	0.0	1	29 5
108	37	0.0	1	27 10
109	29	0.0	1	25 4
110	7	0.0	1	7
111	5	0.0	1	5
112	13	0.0	1	11 2
113	27	0.0	1	22 5
114	28	0.0	1	27 1
115	29	0.0	1	25 4
116	30	0.0	1	26 4
117	13	0.0	1	12 1
118	7	0.0	1	6 1
119	10	0.0	1	9 1
120	13	0.0	1	13
121	11	0.0	1	11
122	5	0.0	1	5
123	8	0.0	1	8
124	8	0.0	1	8
125	8	0.0	1	8
126	17	0.0	1	15 2
127	16	0.0	1	14 2
128	15	0.0	1	14 1
129	27	0.0	1	25 2
130	14	0.0	1	13 1
131	8	0.0	1	4 4
132	9	0.0	1	9
133	19	0.0	1	15 4
134	34	0.0	1	30 4
135	11	0.0	1	11
136	21	0.0	1	20 1
137	5	0.0	1	5
138	2	0.0	1	2
139	10	0.0	1	4 6
140	4	0.0	1	3 1
142	2	0.0	1	2
144	5	0.0	1	5
145	3	0.0	1	3
146	5	0.0	1	4 1
147	30	0.0	1	28 2
148	9	0.0	1	8 1
149	20	0.0	1	20
150	5	0.0	1	5
151	4	0.0	1	3 1
152	3	0.0	1	3
153	4	0.0	1	3 1
154	15	0.0	1	14 1
155	8	0.0	1	7 1
156	17	0.0	1	15 2
157	2	0.0	1	2
158	2	0.0	1	2
159	2	0.0	1	2
160	2	0.0	1	2
161	2	0.0	1	2
162	2	0.0	1	2
163	1	0.0	1	0 1
164	5	0.0	1	5
165	3	0.0	1	2 1
166	5	0.0	1	5
167	12	0.0	1	10 2
168	6	0.0	1	4 2
169	5	0.0	1	5
170	7	0.0	1	7
171	4	0.0	1	4
173	5	0.0	1	5
174	12	0.0	1	12
175	4	0.0	1	4
176	6	0.0	1	6
178	1	0.0	1	1
179	3	0.0	1	2 1
180	2	0.0	1	2
181	2	0.0	1	2
182	1	0.0	1	0 1
183	2	0.0	1	2
184	6	0.0	1	6
185	2	0.0	1	2
186	7	0.0	1	7
187	11	0.0	1	11
188	10	0.0	1	9 1
189	13	0.0	1	12 1
190	18	0.0	1	17 1
191	10	0.0	1	7 3
192	10	0.0	1	10
193	4	0.0	1	4
194	4	0.0	1	4
195	7	0.0	1	6 1
196	6	0.0	1	6
197	11	0.0	1	10 1
198	11	0.0	1	11
199	6	0.0	1	6
200	9	0.0	1	9
201	9	0.0	1	9
202	13	0.0	1	13
203	18	0.0	1	18
204	7	0.0	1	6 1
205	13	0.0	1	13
206	15	0.0	1	15
207	15	0.0	1	15
208	32	0.0	1	30 2
209	27	0.0	1	26 1
210	23	0.0	1	23
211	11	0.0	1	11
212	11	0.0	1	11
213	7	0.0	1	7
214	3	0.0	1	3
215	13	0.0	1	12 1
216	1	0.0	1	1
217	3	0.0	1	3
219	2	0.0	1	2
220	1	0.0	1	1
221	1	0.0	1	1
248	1	0.0	1	0 1
251	36	0.0	1	0 36

RUN STATISTICS FOR INPUT FILE: Plate4BLANK1/host_removal/Plate4BLANK1_R1.fastq.gz
=============================================
24097 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/home/nasirja/covid-19-signal/subset_viral_7_results_dir/Plate4BLANK1/adapter_trimmed/Plate4BLANK1_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: Plate4BLANK1/host_removal/Plate4BLANK1_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.1
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.1). Setting -j -j 2
Writing final adapter and quality trimmed output to Plate4BLANK1_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file Plate4BLANK1/host_removal/Plate4BLANK1_R2.fastq.gz <<< 
This is cutadapt 4.1 with Python 3.9.13
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC Plate4BLANK1/host_removal/Plate4BLANK1_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 0.45 s (19 µs/read; 3.21 M reads/minute).

=== Summary ===

Total reads processed:                  24,097
Reads with adapters:                    10,583 (43.9%)
Reads written (passing filters):        24,097 (100.0%)

Total basepairs processed:     6,048,347 bp
Quality-trimmed:               2,994,359 bp (49.5%)
Total written (filtered):      2,763,912 bp (45.7%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 10583 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 18.7%
  C: 36.2%
  G: 26.6%
  T: 17.2%
  none/other: 1.3%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4942	6024.2	0	4942
2	1713	1506.1	0	1713
3	390	376.5	0	390
4	164	94.1	0	164
5	13	23.5	0	13
6	6	5.9	0	6
7	17	1.5	0	17
8	8	0.4	0	8
9	9	0.1	0	9
10	16	0.0	1	9 7
11	16	0.0	1	9 7
12	18	0.0	1	10 8
13	7	0.0	1	4 3
14	9	0.0	1	8 1
15	6	0.0	1	4 2
16	5	0.0	1	2 3
17	16	0.0	1	7 9
18	6	0.0	1	3 3
19	4	0.0	1	2 2
20	8	0.0	1	2 6
21	4	0.0	1	3 1
22	5	0.0	1	5
23	11	0.0	1	5 6
24	19	0.0	1	12 7
25	7	0.0	1	4 3
26	17	0.0	1	14 3
27	14	0.0	1	9 5
28	25	0.0	1	16 9
29	12	0.0	1	6 6
30	27	0.0	1	20 7
31	5	0.0	1	2 3
32	9	0.0	1	7 2
33	13	0.0	1	7 6
34	18	0.0	1	12 6
35	41	0.0	1	20 21
36	65	0.0	1	37 28
37	30	0.0	1	17 13
38	15	0.0	1	9 6
39	11	0.0	1	6 5
40	22	0.0	1	13 9
41	12	0.0	1	9 3
42	35	0.0	1	29 6
43	29	0.0	1	17 12
44	26	0.0	1	20 6
45	49	0.0	1	31 18
46	47	0.0	1	40 7
47	44	0.0	1	33 11
48	30	0.0	1	25 5
49	25	0.0	1	21 4
50	18	0.0	1	13 5
51	12	0.0	1	9 3
52	12	0.0	1	8 4
53	20	0.0	1	20
54	30	0.0	1	27 3
55	13	0.0	1	11 2
56	19	0.0	1	19
57	41	0.0	1	36 5
58	21	0.0	1	20 1
59	9	0.0	1	7 2
60	22	0.0	1	19 3
61	14	0.0	1	11 3
62	14	0.0	1	10 4
63	12	0.0	1	11 1
64	13	0.0	1	12 1
65	3	0.0	1	2 1
66	8	0.0	1	7 1
67	6	0.0	1	6
68	1	0.0	1	1
69	8	0.0	1	6 2
70	8	0.0	1	8
71	7	0.0	1	6 1
72	4	0.0	1	3 1
73	11	0.0	1	10 1
74	22	0.0	1	17 5
75	31	0.0	1	25 6
76	42	0.0	1	39 3
77	82	0.0	1	69 13
78	105	0.0	1	94 11
79	186	0.0	1	158 28
80	304	0.0	1	286 18
81	240	0.0	1	226 14
82	160	0.0	1	157 3
83	83	0.0	1	78 5
84	50	0.0	1	44 6
85	53	0.0	1	50 3
86	27	0.0	1	22 5
87	24	0.0	1	23 1
88	21	0.0	1	16 5
89	12	0.0	1	9 3
90	18	0.0	1	16 2
91	12	0.0	1	11 1
92	20	0.0	1	18 2
93	22	0.0	1	21 1
94	17	0.0	1	15 2
95	10	0.0	1	7 3
96	7	0.0	1	6 1
97	14	0.0	1	13 1
98	4	0.0	1	2 2
99	13	0.0	1	12 1
100	6	0.0	1	5 1
101	9	0.0	1	9
102	11	0.0	1	10 1
103	5	0.0	1	4 1
104	8	0.0	1	6 2
105	5	0.0	1	5
106	6	0.0	1	6
107	8	0.0	1	4 4
108	6	0.0	1	5 1
109	15	0.0	1	10 5
110	7	0.0	1	4 3
111	3	0.0	1	3
112	4	0.0	1	4
113	12	0.0	1	4 8
114	17	0.0	1	10 7
115	7	0.0	1	5 2
116	12	0.0	1	9 3
117	7	0.0	1	6 1
118	3	0.0	1	3
119	3	0.0	1	2 1
120	5	0.0	1	4 1
121	5	0.0	1	3 2
122	2	0.0	1	2
123	3	0.0	1	3
125	3	0.0	1	2 1
126	5	0.0	1	5
127	12	0.0	1	8 4
128	4	0.0	1	3 1
129	10	0.0	1	7 3
130	1	0.0	1	1
132	2	0.0	1	1 1
133	9	0.0	1	3 6
134	13	0.0	1	9 4
135	6	0.0	1	6
136	3	0.0	1	3
137	3	0.0	1	2 1
138	3	0.0	1	1 2
139	3	0.0	1	2 1
140	2	0.0	1	2
141	2	0.0	1	0 2
143	1	0.0	1	1
145	2	0.0	1	1 1
146	3	0.0	1	2 1
147	11	0.0	1	8 3
148	4	0.0	1	3 1
149	13	0.0	1	10 3
150	2	0.0	1	0 2
151	1	0.0	1	1
152	2	0.0	1	2
154	6	0.0	1	3 3
155	3	0.0	1	2 1
156	7	0.0	1	7
157	3	0.0	1	3
158	1	0.0	1	1
161	1	0.0	1	1
162	1	0.0	1	1
163	2	0.0	1	2
164	3	0.0	1	2 1
165	4	0.0	1	3 1
166	2	0.0	1	2
167	9	0.0	1	8 1
168	2	0.0	1	2
169	7	0.0	1	6 1
170	2	0.0	1	2
171	3	0.0	1	3
172	1	0.0	1	0 1
174	9	0.0	1	8 1
175	2	0.0	1	2
176	3	0.0	1	2 1
178	2	0.0	1	2
179	4	0.0	1	4
180	3	0.0	1	2 1
183	2	0.0	1	2
184	2	0.0	1	2
185	1	0.0	1	1
187	6	0.0	1	6
188	8	0.0	1	8
189	11	0.0	1	9 2
190	8	0.0	1	7 1
191	9	0.0	1	9
192	2	0.0	1	2
193	6	0.0	1	6
194	5	0.0	1	5
195	6	0.0	1	5 1
196	1	0.0	1	0 1
197	8	0.0	1	8
198	10	0.0	1	10
199	1	0.0	1	1
200	5	0.0	1	5
201	9	0.0	1	9
202	2	0.0	1	2
203	11	0.0	1	11
204	3	0.0	1	3
205	10	0.0	1	10
206	14	0.0	1	14
207	5	0.0	1	5
208	14	0.0	1	13 1
209	18	0.0	1	16 2
210	16	0.0	1	16
211	12	0.0	1	11 1
212	9	0.0	1	9
213	7	0.0	1	7
214	3	0.0	1	3
215	8	0.0	1	8
216	2	0.0	1	2
217	6	0.0	1	6
219	1	0.0	1	0 1
251	28	0.0	1	0 28

RUN STATISTICS FOR INPUT FILE: Plate4BLANK1/host_removal/Plate4BLANK1_R2.fastq.gz
=============================================
24097 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files Plate4BLANK1_R1_trimmed.fq.gz and Plate4BLANK1_R2_trimmed.fq.gz
file_1: Plate4BLANK1_R1_trimmed.fq.gz, file_2: Plate4BLANK1_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: Plate4BLANK1_R1_trimmed.fq.gz and Plate4BLANK1_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to Plate4BLANK1_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to Plate4BLANK1_R2_val_2.fq.gz

Total number of sequences analysed: 24097

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 247 (1.03%)


  >>> Now running FastQC on the validated data Plate4BLANK1_R1_val_1.fq.gz<<<

Started analysis of Plate4BLANK1_R1_val_1.fq.gz
Approx 5% complete for Plate4BLANK1_R1_val_1.fq.gz
Approx 10% complete for Plate4BLANK1_R1_val_1.fq.gz
Approx 15% complete for Plate4BLANK1_R1_val_1.fq.gz
Approx 20% complete for Plate4BLANK1_R1_val_1.fq.gz
Approx 25% complete for Plate4BLANK1_R1_val_1.fq.gz
Approx 30% complete for Plate4BLANK1_R1_val_1.fq.gz
Approx 35% complete for Plate4BLANK1_R1_val_1.fq.gz
Approx 40% complete for Plate4BLANK1_R1_val_1.fq.gz
Approx 45% complete for Plate4BLANK1_R1_val_1.fq.gz
Approx 50% complete for Plate4BLANK1_R1_val_1.fq.gz
Approx 55% complete for Plate4BLANK1_R1_val_1.fq.gz
Approx 60% complete for Plate4BLANK1_R1_val_1.fq.gz
Approx 65% complete for Plate4BLANK1_R1_val_1.fq.gz
Approx 70% complete for Plate4BLANK1_R1_val_1.fq.gz
Approx 75% complete for Plate4BLANK1_R1_val_1.fq.gz
Approx 80% complete for Plate4BLANK1_R1_val_1.fq.gz
Approx 85% complete for Plate4BLANK1_R1_val_1.fq.gz
Approx 90% complete for Plate4BLANK1_R1_val_1.fq.gz
Approx 95% complete for Plate4BLANK1_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data Plate4BLANK1_R2_val_2.fq.gz<<<

Started analysis of Plate4BLANK1_R2_val_2.fq.gz
Approx 5% complete for Plate4BLANK1_R2_val_2.fq.gz
Approx 10% complete for Plate4BLANK1_R2_val_2.fq.gz
Approx 15% complete for Plate4BLANK1_R2_val_2.fq.gz
Approx 20% complete for Plate4BLANK1_R2_val_2.fq.gz
Approx 25% complete for Plate4BLANK1_R2_val_2.fq.gz
Approx 30% complete for Plate4BLANK1_R2_val_2.fq.gz
Approx 35% complete for Plate4BLANK1_R2_val_2.fq.gz
Approx 40% complete for Plate4BLANK1_R2_val_2.fq.gz
Approx 45% complete for Plate4BLANK1_R2_val_2.fq.gz
Approx 50% complete for Plate4BLANK1_R2_val_2.fq.gz
Approx 55% complete for Plate4BLANK1_R2_val_2.fq.gz
Approx 60% complete for Plate4BLANK1_R2_val_2.fq.gz
Approx 65% complete for Plate4BLANK1_R2_val_2.fq.gz
Approx 70% complete for Plate4BLANK1_R2_val_2.fq.gz
Approx 75% complete for Plate4BLANK1_R2_val_2.fq.gz
Approx 80% complete for Plate4BLANK1_R2_val_2.fq.gz
Approx 85% complete for Plate4BLANK1_R2_val_2.fq.gz
Approx 90% complete for Plate4BLANK1_R2_val_2.fq.gz
Approx 95% complete for Plate4BLANK1_R2_val_2.fq.gz
Deleting both intermediate output files Plate4BLANK1_R1_trimmed.fq.gz and Plate4BLANK1_R2_trimmed.fq.gz

====================================================================================================

