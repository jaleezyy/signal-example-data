Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.1
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/home/nasirja/covid-19-signal/subset_viral_7_results_dir/Plate4BLANK4/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> Plate4BLANK4/host_removal/Plate4BLANK4_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	8326	AGATCGGAAGAGC	48151	17.29
Nextera	0	CTGTCTCTTATA	48151	0.00
smallRNA	0	TGGAATTCTCGG	48151	0.00
Using Illumina adapter for trimming (count: 8326). Second best hit was Nextera (count: 0)

Writing report to '/workspace/home/nasirja/covid-19-signal/subset_viral_7_results_dir/Plate4BLANK4/adapter_trimmed/Plate4BLANK4_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: Plate4BLANK4/host_removal/Plate4BLANK4_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.1
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.1). Setting -j 2
Writing final adapter and quality trimmed output to Plate4BLANK4_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file Plate4BLANK4/host_removal/Plate4BLANK4_R1.fastq.gz <<< 
This is cutadapt 4.1 with Python 3.9.13
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC Plate4BLANK4/host_removal/Plate4BLANK4_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 0.76 s (16 µs/read; 3.78 M reads/minute).

=== Summary ===

Total reads processed:                  48,151
Reads with adapters:                    22,384 (46.5%)
Reads written (passing filters):        48,151 (100.0%)

Total basepairs processed:    12,085,901 bp
Quality-trimmed:               3,204,070 bp (26.5%)
Total written (filtered):      8,160,521 bp (67.5%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 22384 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 14.5%
  C: 36.4%
  G: 25.1%
  T: 23.5%
  none/other: 0.4%

Overview of removed sequences
length	count	expect	max.err	error counts
1	8938	12037.8	0	8938
2	2260	3009.4	0	2260
3	867	752.4	0	867
4	250	188.1	0	250
5	66	47.0	0	66
6	38	11.8	0	38
7	59	2.9	0	59
8	23	0.7	0	23
9	36	0.2	0	36
10	48	0.0	1	32 16
11	46	0.0	1	28 18
12	35	0.0	1	22 13
13	29	0.0	1	15 14
14	29	0.0	1	15 14
15	31	0.0	1	17 14
16	20	0.0	1	9 11
17	48	0.0	1	29 19
18	37	0.0	1	24 13
19	27	0.0	1	13 14
20	34	0.0	1	15 19
21	29	0.0	1	11 18
22	34	0.0	1	15 19
23	26	0.0	1	11 15
24	65	0.0	1	37 28
25	91	0.0	1	55 36
26	71	0.0	1	34 37
27	94	0.0	1	46 48
28	134	0.0	1	71 63
29	93	0.0	1	46 47
30	62	0.0	1	36 26
31	40	0.0	1	19 21
32	65	0.0	1	35 30
33	49	0.0	1	25 24
34	105	0.0	1	60 45
35	48	0.0	1	22 26
36	78	0.0	1	37 41
37	132	0.0	1	81 51
38	69	0.0	1	45 24
39	120	0.0	1	81 39
40	81	0.0	1	53 28
41	45	0.0	1	28 17
42	56	0.0	1	39 17
43	96	0.0	1	69 27
44	32	0.0	1	12 20
45	47	0.0	1	24 23
46	44	0.0	1	23 21
47	151	0.0	1	91 60
48	47	0.0	1	28 19
49	65	0.0	1	40 25
50	66	0.0	1	49 17
51	65	0.0	1	47 18
52	95	0.0	1	62 33
53	126	0.0	1	93 33
54	215	0.0	1	149 66
55	113	0.0	1	92 21
56	64	0.0	1	54 10
57	93	0.0	1	73 20
58	49	0.0	1	41 8
59	44	0.0	1	32 12
60	67	0.0	1	49 18
61	46	0.0	1	38 8
62	55	0.0	1	42 13
63	87	0.0	1	72 15
64	56	0.0	1	42 14
65	76	0.0	1	53 23
66	156	0.0	1	120 36
67	83	0.0	1	52 31
68	126	0.0	1	86 40
69	113	0.0	1	88 25
70	99	0.0	1	87 12
71	126	0.0	1	103 23
72	205	0.0	1	162 43
73	337	0.0	1	278 59
74	411	0.0	1	354 57
75	557	0.0	1	483 74
76	840	0.0	1	780 60
77	467	0.0	1	444 23
78	263	0.0	1	246 17
79	146	0.0	1	139 7
80	103	0.0	1	100 3
81	84	0.0	1	82 2
82	60	0.0	1	56 4
83	56	0.0	1	51 5
84	51	0.0	1	46 5
85	39	0.0	1	34 5
86	72	0.0	1	59 13
87	71	0.0	1	56 15
88	46	0.0	1	35 11
89	45	0.0	1	38 7
90	21	0.0	1	18 3
91	19	0.0	1	17 2
92	31	0.0	1	26 5
93	61	0.0	1	48 13
94	60	0.0	1	48 12
95	44	0.0	1	37 7
96	38	0.0	1	29 9
97	14	0.0	1	8 6
98	9	0.0	1	8 1
99	12	0.0	1	11 1
100	19	0.0	1	16 3
101	13	0.0	1	10 3
102	16	0.0	1	15 1
103	12	0.0	1	12
104	17	0.0	1	17
105	14	0.0	1	14
106	32	0.0	1	28 4
107	42	0.0	1	36 6
108	34	0.0	1	29 5
109	34	0.0	1	29 5
110	9	0.0	1	8 1
111	7	0.0	1	5 2
112	9	0.0	1	8 1
113	40	0.0	1	38 2
114	42	0.0	1	36 6
115	33	0.0	1	26 7
116	19	0.0	1	18 1
117	10	0.0	1	9 1
118	6	0.0	1	6
119	5	0.0	1	3 2
120	11	0.0	1	11
121	5	0.0	1	5
122	12	0.0	1	11 1
123	4	0.0	1	2 2
124	11	0.0	1	9 2
125	12	0.0	1	9 3
126	18	0.0	1	16 2
127	24	0.0	1	22 2
128	12	0.0	1	12
129	21	0.0	1	19 2
130	9	0.0	1	7 2
131	12	0.0	1	11 1
132	6	0.0	1	4 2
133	16	0.0	1	15 1
134	19	0.0	1	19
135	22	0.0	1	17 5
136	19	0.0	1	18 1
137	11	0.0	1	7 4
138	9	0.0	1	9
139	6	0.0	1	6
140	7	0.0	1	7
141	1	0.0	1	1
142	8	0.0	1	6 2
143	3	0.0	1	2 1
144	3	0.0	1	3
145	9	0.0	1	8 1
146	9	0.0	1	8 1
147	29	0.0	1	25 4
148	16	0.0	1	15 1
149	17	0.0	1	13 4
150	5	0.0	1	5
151	3	0.0	1	3
152	3	0.0	1	2 1
153	7	0.0	1	6 1
154	18	0.0	1	18
155	11	0.0	1	9 2
156	21	0.0	1	18 3
157	6	0.0	1	4 2
158	3	0.0	1	3
159	4	0.0	1	3 1
160	1	0.0	1	0 1
162	2	0.0	1	2
163	1	0.0	1	1
164	3	0.0	1	3
165	2	0.0	1	2
166	4	0.0	1	4
167	11	0.0	1	11
168	14	0.0	1	12 2
169	16	0.0	1	16
170	6	0.0	1	6
171	3	0.0	1	3
172	2	0.0	1	2
173	3	0.0	1	3
174	13	0.0	1	11 2
175	13	0.0	1	12 1
176	13	0.0	1	13
177	6	0.0	1	5 1
178	4	0.0	1	4
179	2	0.0	1	2
180	2	0.0	1	2
181	1	0.0	1	1
183	1	0.0	1	1
184	2	0.0	1	2
185	3	0.0	1	3
186	1	0.0	1	1
187	4	0.0	1	4
188	12	0.0	1	11 1
189	8	0.0	1	8
190	7	0.0	1	7
191	9	0.0	1	9
192	3	0.0	1	3
193	3	0.0	1	3
194	6	0.0	1	6
195	8	0.0	1	7 1
196	2	0.0	1	2
197	10	0.0	1	9 1
198	5	0.0	1	5
199	2	0.0	1	2
200	1	0.0	1	1
201	1	0.0	1	1
202	4	0.0	1	4
203	6	0.0	1	6
204	3	0.0	1	2 1
205	3	0.0	1	3
206	3	0.0	1	2 1
207	6	0.0	1	6
208	21	0.0	1	21
209	6	0.0	1	5 1
210	22	0.0	1	22
211	4	0.0	1	4
212	4	0.0	1	4
213	2	0.0	1	2
214	3	0.0	1	3
215	14	0.0	1	13 1
216	5	0.0	1	5
217	9	0.0	1	8 1
218	2	0.0	1	2
220	1	0.0	1	0 1
226	1	0.0	1	1
227	1	0.0	1	1
229	1	0.0	1	1
232	1	0.0	1	1
237	1	0.0	1	1
250	2	0.0	1	0 2
251	22	0.0	1	0 22

RUN STATISTICS FOR INPUT FILE: Plate4BLANK4/host_removal/Plate4BLANK4_R1.fastq.gz
=============================================
48151 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/home/nasirja/covid-19-signal/subset_viral_7_results_dir/Plate4BLANK4/adapter_trimmed/Plate4BLANK4_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: Plate4BLANK4/host_removal/Plate4BLANK4_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.1
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.1). Setting -j -j 2
Writing final adapter and quality trimmed output to Plate4BLANK4_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file Plate4BLANK4/host_removal/Plate4BLANK4_R2.fastq.gz <<< 
This is cutadapt 4.1 with Python 3.9.13
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC Plate4BLANK4/host_removal/Plate4BLANK4_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 0.68 s (14 µs/read; 4.27 M reads/minute).

=== Summary ===

Total reads processed:                  48,151
Reads with adapters:                    19,807 (41.1%)
Reads written (passing filters):        48,151 (100.0%)

Total basepairs processed:    12,085,901 bp
Quality-trimmed:               6,317,781 bp (52.3%)
Total written (filtered):      5,514,507 bp (45.6%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 19807 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 18.0%
  C: 39.9%
  G: 30.9%
  T: 10.7%
  none/other: 0.5%

Overview of removed sequences
length	count	expect	max.err	error counts
1	11068	12037.8	0	11068
2	4150	3009.4	0	4150
3	1159	752.4	0	1159
4	173	188.1	0	173
5	30	47.0	0	30
6	11	11.8	0	11
7	26	2.9	0	26
8	7	0.7	0	7
9	16	0.2	0	16
10	25	0.0	1	12 13
11	17	0.0	1	9 8
12	34	0.0	1	14 20
13	15	0.0	1	7 8
14	21	0.0	1	10 11
15	9	0.0	1	3 6
16	16	0.0	1	4 12
17	20	0.0	1	12 8
18	14	0.0	1	9 5
19	16	0.0	1	7 9
20	5	0.0	1	4 1
21	6	0.0	1	2 4
22	6	0.0	1	2 4
23	17	0.0	1	5 12
24	48	0.0	1	18 30
25	17	0.0	1	8 9
26	20	0.0	1	11 9
27	26	0.0	1	12 14
28	27	0.0	1	18 9
29	22	0.0	1	13 9
30	42	0.0	1	26 16
31	20	0.0	1	14 6
32	58	0.0	1	38 20
33	22	0.0	1	17 5
34	15	0.0	1	7 8
35	20	0.0	1	13 7
36	33	0.0	1	28 5
37	58	0.0	1	39 19
38	25	0.0	1	20 5
39	52	0.0	1	43 9
40	60	0.0	1	48 12
41	50	0.0	1	39 11
42	70	0.0	1	55 15
43	86	0.0	1	74 12
44	115	0.0	1	97 18
45	107	0.0	1	90 17
46	55	0.0	1	51 4
47	68	0.0	1	55 13
48	52	0.0	1	47 5
49	27	0.0	1	21 6
50	18	0.0	1	14 4
51	19	0.0	1	19
52	17	0.0	1	14 3
53	15	0.0	1	12 3
54	31	0.0	1	22 9
55	18	0.0	1	12 6
56	29	0.0	1	25 4
57	63	0.0	1	61 2
58	26	0.0	1	26
59	17	0.0	1	13 4
60	19	0.0	1	19
61	3	0.0	1	2 1
62	7	0.0	1	7
63	14	0.0	1	14
64	1	0.0	1	1
65	2	0.0	1	1 1
66	3	0.0	1	2 1
67	6	0.0	1	4 2
68	2	0.0	1	0 2
69	2	0.0	1	0 2
71	4	0.0	1	4
72	6	0.0	1	1 5
73	4	0.0	1	4
74	8	0.0	1	4 4
75	7	0.0	1	6 1
76	19	0.0	1	17 2
77	23	0.0	1	21 2
78	50	0.0	1	46 4
79	75	0.0	1	65 10
80	143	0.0	1	121 22
81	140	0.0	1	131 9
82	104	0.0	1	95 9
83	79	0.0	1	68 11
84	37	0.0	1	35 2
85	25	0.0	1	23 2
86	18	0.0	1	14 4
87	18	0.0	1	16 2
88	15	0.0	1	11 4
89	19	0.0	1	17 2
90	9	0.0	1	9
91	8	0.0	1	7 1
92	8	0.0	1	6 2
93	11	0.0	1	5 6
94	12	0.0	1	7 5
95	10	0.0	1	6 4
96	7	0.0	1	6 1
97	7	0.0	1	4 3
98	9	0.0	1	8 1
99	3	0.0	1	3
100	4	0.0	1	3 1
101	6	0.0	1	4 2
103	4	0.0	1	1 3
104	3	0.0	1	3
105	7	0.0	1	5 2
106	6	0.0	1	2 4
107	14	0.0	1	2 12
108	9	0.0	1	6 3
109	10	0.0	1	8 2
110	3	0.0	1	0 3
111	4	0.0	1	2 2
112	4	0.0	1	3 1
113	3	0.0	1	3
114	17	0.0	1	12 5
115	9	0.0	1	5 4
116	6	0.0	1	4 2
117	5	0.0	1	2 3
118	3	0.0	1	3
119	2	0.0	1	1 1
120	3	0.0	1	2 1
122	3	0.0	1	2 1
124	2	0.0	1	2
125	2	0.0	1	2
126	13	0.0	1	9 4
127	15	0.0	1	10 5
128	7	0.0	1	2 5
129	15	0.0	1	12 3
130	3	0.0	1	3
131	3	0.0	1	2 1
133	8	0.0	1	5 3
134	11	0.0	1	6 5
135	8	0.0	1	6 2
136	7	0.0	1	3 4
137	2	0.0	1	2
138	2	0.0	1	2
139	1	0.0	1	1
140	1	0.0	1	0 1
141	2	0.0	1	1 1
144	3	0.0	1	2 1
145	1	0.0	1	1
146	1	0.0	1	1
147	13	0.0	1	12 1
148	8	0.0	1	8
149	12	0.0	1	11 1
150	3	0.0	1	2 1
151	3	0.0	1	2 1
153	3	0.0	1	3
154	9	0.0	1	7 2
155	6	0.0	1	4 2
156	12	0.0	1	10 2
157	2	0.0	1	2
158	3	0.0	1	2 1
159	1	0.0	1	1
161	1	0.0	1	1
164	1	0.0	1	1
165	2	0.0	1	2
166	3	0.0	1	3
167	7	0.0	1	7
168	8	0.0	1	8
169	13	0.0	1	11 2
170	6	0.0	1	6
171	1	0.0	1	1
172	1	0.0	1	1
173	1	0.0	1	1
174	13	0.0	1	11 2
175	5	0.0	1	5
176	9	0.0	1	9
177	2	0.0	1	2
178	2	0.0	1	2
179	1	0.0	1	0 1
180	1	0.0	1	1
182	1	0.0	1	1
183	1	0.0	1	1
184	2	0.0	1	2
186	2	0.0	1	2
187	2	0.0	1	2
188	6	0.0	1	6
189	2	0.0	1	2
190	8	0.0	1	8
191	3	0.0	1	3
192	2	0.0	1	1 1
193	2	0.0	1	2
194	3	0.0	1	3
195	7	0.0	1	7
196	2	0.0	1	2
197	3	0.0	1	3
199	1	0.0	1	1
200	2	0.0	1	2
201	2	0.0	1	2
202	2	0.0	1	2
203	5	0.0	1	5
204	1	0.0	1	1
205	11	0.0	1	11
206	8	0.0	1	7 1
207	4	0.0	1	4
208	14	0.0	1	12 2
209	5	0.0	1	5
210	14	0.0	1	13 1
211	6	0.0	1	6
212	1	0.0	1	1
214	3	0.0	1	3
215	13	0.0	1	13
216	2	0.0	1	2
217	11	0.0	1	10 1
218	2	0.0	1	1 1
219	1	0.0	1	1
223	2	0.0	1	2
226	1	0.0	1	1
227	1	0.0	1	1
229	1	0.0	1	1
249	1	0.0	1	0 1
251	17	0.0	1	0 17

RUN STATISTICS FOR INPUT FILE: Plate4BLANK4/host_removal/Plate4BLANK4_R2.fastq.gz
=============================================
48151 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files Plate4BLANK4_R1_trimmed.fq.gz and Plate4BLANK4_R2_trimmed.fq.gz
file_1: Plate4BLANK4_R1_trimmed.fq.gz, file_2: Plate4BLANK4_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: Plate4BLANK4_R1_trimmed.fq.gz and Plate4BLANK4_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to Plate4BLANK4_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to Plate4BLANK4_R2_val_2.fq.gz

Total number of sequences analysed: 48151

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 254 (0.53%)


  >>> Now running FastQC on the validated data Plate4BLANK4_R1_val_1.fq.gz<<<

Started analysis of Plate4BLANK4_R1_val_1.fq.gz
Approx 5% complete for Plate4BLANK4_R1_val_1.fq.gz
Approx 10% complete for Plate4BLANK4_R1_val_1.fq.gz
Approx 15% complete for Plate4BLANK4_R1_val_1.fq.gz
Approx 20% complete for Plate4BLANK4_R1_val_1.fq.gz
Approx 25% complete for Plate4BLANK4_R1_val_1.fq.gz
Approx 30% complete for Plate4BLANK4_R1_val_1.fq.gz
Approx 35% complete for Plate4BLANK4_R1_val_1.fq.gz
Approx 40% complete for Plate4BLANK4_R1_val_1.fq.gz
Approx 45% complete for Plate4BLANK4_R1_val_1.fq.gz
Approx 50% complete for Plate4BLANK4_R1_val_1.fq.gz
Approx 55% complete for Plate4BLANK4_R1_val_1.fq.gz
Approx 60% complete for Plate4BLANK4_R1_val_1.fq.gz
Approx 65% complete for Plate4BLANK4_R1_val_1.fq.gz
Approx 70% complete for Plate4BLANK4_R1_val_1.fq.gz
Approx 75% complete for Plate4BLANK4_R1_val_1.fq.gz
Approx 80% complete for Plate4BLANK4_R1_val_1.fq.gz
Approx 85% complete for Plate4BLANK4_R1_val_1.fq.gz
Approx 90% complete for Plate4BLANK4_R1_val_1.fq.gz
Approx 95% complete for Plate4BLANK4_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data Plate4BLANK4_R2_val_2.fq.gz<<<

Started analysis of Plate4BLANK4_R2_val_2.fq.gz
Approx 5% complete for Plate4BLANK4_R2_val_2.fq.gz
Approx 10% complete for Plate4BLANK4_R2_val_2.fq.gz
Approx 15% complete for Plate4BLANK4_R2_val_2.fq.gz
Approx 20% complete for Plate4BLANK4_R2_val_2.fq.gz
Approx 25% complete for Plate4BLANK4_R2_val_2.fq.gz
Approx 30% complete for Plate4BLANK4_R2_val_2.fq.gz
Approx 35% complete for Plate4BLANK4_R2_val_2.fq.gz
Approx 40% complete for Plate4BLANK4_R2_val_2.fq.gz
Approx 45% complete for Plate4BLANK4_R2_val_2.fq.gz
Approx 50% complete for Plate4BLANK4_R2_val_2.fq.gz
Approx 55% complete for Plate4BLANK4_R2_val_2.fq.gz
Approx 60% complete for Plate4BLANK4_R2_val_2.fq.gz
Approx 65% complete for Plate4BLANK4_R2_val_2.fq.gz
Approx 70% complete for Plate4BLANK4_R2_val_2.fq.gz
Approx 75% complete for Plate4BLANK4_R2_val_2.fq.gz
Approx 80% complete for Plate4BLANK4_R2_val_2.fq.gz
Approx 85% complete for Plate4BLANK4_R2_val_2.fq.gz
Approx 90% complete for Plate4BLANK4_R2_val_2.fq.gz
Approx 95% complete for Plate4BLANK4_R2_val_2.fq.gz
Deleting both intermediate output files Plate4BLANK4_R1_trimmed.fq.gz and Plate4BLANK4_R2_trimmed.fq.gz

====================================================================================================

