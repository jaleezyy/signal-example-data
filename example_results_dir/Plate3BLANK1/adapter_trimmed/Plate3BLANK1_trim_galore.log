Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.1
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/home/nasirja/covid-19-signal/subset_viral_7_results_dir/Plate3BLANK1/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> Plate3BLANK1/host_removal/Plate3BLANK1_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	4	AGATCGGAAGAGC	83	4.82
smallRNA	0	TGGAATTCTCGG	83	0.00
Nextera	0	CTGTCTCTTATA	83	0.00
Using Illumina adapter for trimming (count: 4). Second best hit was smallRNA (count: 0)

Writing report to '/workspace/home/nasirja/covid-19-signal/subset_viral_7_results_dir/Plate3BLANK1/adapter_trimmed/Plate3BLANK1_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: Plate3BLANK1/host_removal/Plate3BLANK1_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.1
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.1). Setting -j 2
Writing final adapter and quality trimmed output to Plate3BLANK1_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file Plate3BLANK1/host_removal/Plate3BLANK1_R1.fastq.gz <<< 
This is cutadapt 4.1 with Python 3.9.13
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC Plate3BLANK1/host_removal/Plate3BLANK1_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 0.02 s (295 µs/read; 0.20 M reads/minute).

=== Summary ===

Total reads processed:                      83
Reads with adapters:                        31 (37.3%)
Reads written (passing filters):            83 (100.0%)

Total basepairs processed:        20,833 bp
Quality-trimmed:                     556 bp (2.7%)
Total written (filtered):         19,467 bp (93.4%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 31 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 45.2%
  C: 16.1%
  G: 6.5%
  T: 29.0%
  none/other: 3.2%

Overview of removed sequences
length	count	expect	max.err	error counts
1	20	20.8	0	20
2	3	5.2	0	3
3	2	1.3	0	2
4	1	0.3	0	1
59	1	0.0	1	1
122	1	0.0	1	1
172	1	0.0	1	1
185	1	0.0	1	0 1
236	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: Plate3BLANK1/host_removal/Plate3BLANK1_R1.fastq.gz
=============================================
83 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/home/nasirja/covid-19-signal/subset_viral_7_results_dir/Plate3BLANK1/adapter_trimmed/Plate3BLANK1_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: Plate3BLANK1/host_removal/Plate3BLANK1_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.1
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.1). Setting -j -j 2
Writing final adapter and quality trimmed output to Plate3BLANK1_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file Plate3BLANK1/host_removal/Plate3BLANK1_R2.fastq.gz <<< 
This is cutadapt 4.1 with Python 3.9.13
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC Plate3BLANK1/host_removal/Plate3BLANK1_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 0.02 s (293 µs/read; 0.21 M reads/minute).

=== Summary ===

Total reads processed:                      83
Reads with adapters:                        33 (39.8%)
Reads written (passing filters):            83 (100.0%)

Total basepairs processed:        20,833 bp
Quality-trimmed:                   2,389 bp (11.5%)
Total written (filtered):         18,122 bp (87.0%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 33 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 45.5%
  C: 15.2%
  G: 6.1%
  T: 30.3%
  none/other: 3.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	17	20.8	0	17
2	9	5.2	0	9
3	3	1.3	0	3
7	1	0.0	0	1
44	1	0.0	1	1
110	1	0.0	1	1
117	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: Plate3BLANK1/host_removal/Plate3BLANK1_R2.fastq.gz
=============================================
83 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files Plate3BLANK1_R1_trimmed.fq.gz and Plate3BLANK1_R2_trimmed.fq.gz
file_1: Plate3BLANK1_R1_trimmed.fq.gz, file_2: Plate3BLANK1_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: Plate3BLANK1_R1_trimmed.fq.gz and Plate3BLANK1_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to Plate3BLANK1_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to Plate3BLANK1_R2_val_2.fq.gz

Total number of sequences analysed: 83

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 6 (7.23%)


  >>> Now running FastQC on the validated data Plate3BLANK1_R1_val_1.fq.gz<<<

Started analysis of Plate3BLANK1_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data Plate3BLANK1_R2_val_2.fq.gz<<<

Started analysis of Plate3BLANK1_R2_val_2.fq.gz
Deleting both intermediate output files Plate3BLANK1_R1_trimmed.fq.gz and Plate3BLANK1_R2_trimmed.fq.gz

====================================================================================================

