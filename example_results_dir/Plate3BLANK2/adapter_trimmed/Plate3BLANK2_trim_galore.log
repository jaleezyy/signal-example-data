Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.1
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 2 cores

No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Output will be written into the directory: /workspace/home/nasirja/covid-19-signal/subset_viral_7_results_dir/Plate3BLANK2/adapter_trimmed/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> Plate3BLANK2/host_removal/Plate3BLANK2_R1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	6221	AGATCGGAAGAGC	41951	14.83
smallRNA	0	TGGAATTCTCGG	41951	0.00
Nextera	0	CTGTCTCTTATA	41951	0.00
Using Illumina adapter for trimming (count: 6221). Second best hit was smallRNA (count: 0)

Writing report to '/workspace/home/nasirja/covid-19-signal/subset_viral_7_results_dir/Plate3BLANK2/adapter_trimmed/Plate3BLANK2_R1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: Plate3BLANK2/host_removal/Plate3BLANK2_R1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.1
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.1). Setting -j 2
Writing final adapter and quality trimmed output to Plate3BLANK2_R1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file Plate3BLANK2/host_removal/Plate3BLANK2_R1.fastq.gz <<< 
This is cutadapt 4.1 with Python 3.9.13
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC Plate3BLANK2/host_removal/Plate3BLANK2_R1.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 0.70 s (17 µs/read; 3.58 M reads/minute).

=== Summary ===

Total reads processed:                  41,951
Reads with adapters:                    19,408 (46.3%)
Reads written (passing filters):        41,951 (100.0%)

Total basepairs processed:    10,529,701 bp
Quality-trimmed:               2,805,649 bp (26.6%)
Total written (filtered):      7,179,957 bp (68.2%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 19408 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 18.8%
  C: 37.6%
  G: 23.8%
  T: 19.4%
  none/other: 0.4%

Overview of removed sequences
length	count	expect	max.err	error counts
1	9061	10487.8	0	9061
2	1894	2621.9	0	1894
3	890	655.5	0	890
4	165	163.9	0	165
5	49	41.0	0	49
6	24	10.2	0	24
7	39	2.6	0	39
8	26	0.6	0	26
9	53	0.2	0	53
10	39	0.0	1	21 18
11	45	0.0	1	29 16
12	32	0.0	1	23 9
13	26	0.0	1	16 10
14	25	0.0	1	10 15
15	30	0.0	1	18 12
16	21	0.0	1	11 10
17	46	0.0	1	21 25
18	36	0.0	1	22 14
19	27	0.0	1	16 11
20	28	0.0	1	19 9
21	16	0.0	1	7 9
22	41	0.0	1	19 22
23	33	0.0	1	13 20
24	62	0.0	1	43 19
25	59	0.0	1	24 35
26	42	0.0	1	24 18
27	83	0.0	1	51 32
28	80	0.0	1	43 37
29	71	0.0	1	37 34
30	43	0.0	1	30 13
31	52	0.0	1	28 24
32	46	0.0	1	24 22
33	46	0.0	1	27 19
34	86	0.0	1	51 35
35	52	0.0	1	33 19
36	63	0.0	1	35 28
37	29	0.0	1	19 10
38	44	0.0	1	31 13
39	38	0.0	1	25 13
40	42	0.0	1	28 14
41	56	0.0	1	46 10
42	46	0.0	1	33 13
43	114	0.0	1	75 39
44	38	0.0	1	24 14
45	24	0.0	1	18 6
46	44	0.0	1	20 24
47	91	0.0	1	50 41
48	38	0.0	1	23 15
49	53	0.0	1	38 15
50	55	0.0	1	39 16
51	46	0.0	1	31 15
52	71	0.0	1	49 22
53	65	0.0	1	49 16
54	119	0.0	1	82 37
55	65	0.0	1	50 15
56	35	0.0	1	22 13
57	50	0.0	1	38 12
58	36	0.0	1	25 11
59	27	0.0	1	24 3
60	36	0.0	1	31 5
61	20	0.0	1	19 1
62	53	0.0	1	43 10
63	62	0.0	1	52 10
64	45	0.0	1	32 13
65	52	0.0	1	38 14
66	87	0.0	1	73 14
67	57	0.0	1	38 19
68	79	0.0	1	56 23
69	100	0.0	1	82 18
70	68	0.0	1	52 16
71	83	0.0	1	70 13
72	141	0.0	1	122 19
73	228	0.0	1	186 42
74	287	0.0	1	242 45
75	354	0.0	1	328 26
76	556	0.0	1	519 37
77	354	0.0	1	338 16
78	232	0.0	1	222 10
79	117	0.0	1	113 4
80	93	0.0	1	89 4
81	71	0.0	1	69 2
82	57	0.0	1	50 7
83	48	0.0	1	42 6
84	40	0.0	1	36 4
85	35	0.0	1	35
86	40	0.0	1	32 8
87	55	0.0	1	44 11
88	38	0.0	1	27 11
89	49	0.0	1	37 12
90	21	0.0	1	19 2
91	22	0.0	1	19 3
92	22	0.0	1	18 4
93	43	0.0	1	40 3
94	39	0.0	1	30 9
95	29	0.0	1	21 8
96	26	0.0	1	23 3
97	11	0.0	1	9 2
98	7	0.0	1	4 3
99	11	0.0	1	10 1
100	9	0.0	1	6 3
101	10	0.0	1	9 1
102	7	0.0	1	7
103	10	0.0	1	8 2
104	7	0.0	1	7
105	12	0.0	1	7 5
106	26	0.0	1	24 2
107	27	0.0	1	24 3
108	24	0.0	1	20 4
109	41	0.0	1	34 7
110	10	0.0	1	9 1
111	9	0.0	1	9
112	14	0.0	1	13 1
113	13	0.0	1	13
114	25	0.0	1	20 5
115	18	0.0	1	17 1
116	18	0.0	1	18
117	8	0.0	1	7 1
118	10	0.0	1	9 1
119	8	0.0	1	7 1
120	8	0.0	1	8
121	3	0.0	1	3
122	5	0.0	1	5
123	6	0.0	1	6
124	3	0.0	1	3
125	5	0.0	1	5
126	15	0.0	1	14 1
127	22	0.0	1	22
128	6	0.0	1	5 1
129	17	0.0	1	17
130	6	0.0	1	5 1
131	14	0.0	1	11 3
132	5	0.0	1	5
133	16	0.0	1	14 2
134	16	0.0	1	13 3
135	7	0.0	1	7
136	15	0.0	1	14 1
137	8	0.0	1	7 1
138	2	0.0	1	2
139	6	0.0	1	5 1
140	6	0.0	1	5 1
141	1	0.0	1	1
142	2	0.0	1	2
143	1	0.0	1	1
144	1	0.0	1	1
145	5	0.0	1	5
146	7	0.0	1	7
147	24	0.0	1	23 1
148	5	0.0	1	4 1
149	22	0.0	1	21 1
150	4	0.0	1	4
151	4	0.0	1	3 1
152	2	0.0	1	2
153	3	0.0	1	3
154	9	0.0	1	9
155	5	0.0	1	5
156	9	0.0	1	8 1
158	1	0.0	1	1
159	2	0.0	1	1 1
160	2	0.0	1	2
162	3	0.0	1	2 1
163	6	0.0	1	5 1
164	2	0.0	1	2
165	4	0.0	1	3 1
166	6	0.0	1	5 1
167	9	0.0	1	8 1
168	5	0.0	1	5
169	4	0.0	1	4
170	1	0.0	1	1
171	3	0.0	1	3
172	4	0.0	1	3 1
173	2	0.0	1	2
174	9	0.0	1	7 2
175	4	0.0	1	3 1
176	4	0.0	1	3 1
177	3	0.0	1	3
178	2	0.0	1	2
179	1	0.0	1	0 1
180	2	0.0	1	2
182	4	0.0	1	4
183	3	0.0	1	3
184	4	0.0	1	4
185	4	0.0	1	4
186	4	0.0	1	4
187	7	0.0	1	7
188	3	0.0	1	2 1
189	11	0.0	1	10 1
190	5	0.0	1	5
191	10	0.0	1	10
192	6	0.0	1	6
193	5	0.0	1	5
194	7	0.0	1	7
195	4	0.0	1	4
196	3	0.0	1	2 1
197	6	0.0	1	5 1
198	8	0.0	1	8
199	5	0.0	1	5
200	9	0.0	1	8 1
201	6	0.0	1	5 1
202	6	0.0	1	6
203	10	0.0	1	9 1
204	3	0.0	1	3
205	14	0.0	1	14
206	18	0.0	1	18
207	18	0.0	1	18
208	16	0.0	1	14 2
209	11	0.0	1	11
210	9	0.0	1	8 1
211	12	0.0	1	11 1
212	8	0.0	1	8
213	5	0.0	1	5
214	9	0.0	1	8 1
215	5	0.0	1	5
216	2	0.0	1	1 1
217	9	0.0	1	9
220	1	0.0	1	1
221	1	0.0	1	1
222	1	0.0	1	1
236	1	0.0	1	1
238	1	0.0	1	0 1
249	1	0.0	1	0 1
250	2	0.0	1	0 2
251	26	0.0	1	0 26

RUN STATISTICS FOR INPUT FILE: Plate3BLANK2/host_removal/Plate3BLANK2_R1.fastq.gz
=============================================
41951 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/workspace/home/nasirja/covid-19-signal/subset_viral_7_results_dir/Plate3BLANK2/adapter_trimmed/Plate3BLANK2_R2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: Plate3BLANK2/host_removal/Plate3BLANK2_R2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.4_dev
Cutadapt version: 4.1
Python version: could not detect
Number of cores used for trimming: 2
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.1). Setting -j -j 2
Writing final adapter and quality trimmed output to Plate3BLANK2_R2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file Plate3BLANK2/host_removal/Plate3BLANK2_R2.fastq.gz <<< 
This is cutadapt 4.1 with Python 3.9.13
Command line parameters: -j 2 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC Plate3BLANK2/host_removal/Plate3BLANK2_R2.fastq.gz
Processing single-end reads on 2 cores ...
Finished in 0.64 s (15 µs/read; 3.94 M reads/minute).

=== Summary ===

Total reads processed:                  41,951
Reads with adapters:                    17,255 (41.1%)
Reads written (passing filters):        41,951 (100.0%)

Total basepairs processed:    10,529,701 bp
Quality-trimmed:               5,370,388 bp (51.0%)
Total written (filtered):      4,923,087 bp (46.8%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 17255 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 20.0%
  C: 40.6%
  G: 28.7%
  T: 10.1%
  none/other: 0.6%

Overview of removed sequences
length	count	expect	max.err	error counts
1	9555	10487.8	0	9555
2	3743	2621.9	0	3743
3	892	655.5	0	892
4	127	163.9	0	127
5	21	41.0	0	21
6	7	10.2	0	7
7	13	2.6	0	13
8	4	0.6	0	4
9	8	0.2	0	8
10	17	0.0	1	10 7
11	9	0.0	1	2 7
12	10	0.0	1	5 5
13	8	0.0	1	3 5
14	16	0.0	1	8 8
15	9	0.0	1	5 4
16	2	0.0	1	1 1
17	20	0.0	1	8 12
18	6	0.0	1	2 4
19	3	0.0	1	2 1
20	3	0.0	1	2 1
21	2	0.0	1	2
22	7	0.0	1	4 3
23	9	0.0	1	3 6
24	37	0.0	1	17 20
25	14	0.0	1	8 6
26	14	0.0	1	7 7
27	19	0.0	1	13 6
28	40	0.0	1	20 20
29	19	0.0	1	13 6
30	29	0.0	1	13 16
31	14	0.0	1	10 4
32	49	0.0	1	26 23
33	13	0.0	1	6 7
34	66	0.0	1	48 18
35	32	0.0	1	22 10
36	27	0.0	1	14 13
37	37	0.0	1	24 13
38	66	0.0	1	43 23
39	32	0.0	1	24 8
40	41	0.0	1	32 9
41	36	0.0	1	31 5
42	96	0.0	1	79 17
43	132	0.0	1	115 17
44	106	0.0	1	87 19
45	86	0.0	1	77 9
46	45	0.0	1	39 6
47	53	0.0	1	46 7
48	36	0.0	1	32 4
49	12	0.0	1	9 3
50	19	0.0	1	18 1
51	18	0.0	1	17 1
52	15	0.0	1	11 4
53	18	0.0	1	16 2
54	22	0.0	1	19 3
55	14	0.0	1	10 4
56	22	0.0	1	19 3
57	37	0.0	1	36 1
58	12	0.0	1	11 1
59	10	0.0	1	9 1
60	16	0.0	1	12 4
61	4	0.0	1	4
63	9	0.0	1	8 1
64	6	0.0	1	5 1
65	4	0.0	1	3 1
66	2	0.0	1	2
67	2	0.0	1	1 1
68	3	0.0	1	0 3
69	2	0.0	1	2
70	3	0.0	1	3
71	6	0.0	1	3 3
72	4	0.0	1	2 2
73	2	0.0	1	0 2
74	4	0.0	1	3 1
75	2	0.0	1	2
76	5	0.0	1	2 3
77	10	0.0	1	7 3
78	13	0.0	1	9 4
79	29	0.0	1	25 4
80	79	0.0	1	72 7
81	98	0.0	1	90 8
82	106	0.0	1	96 10
83	107	0.0	1	97 10
84	68	0.0	1	63 5
85	60	0.0	1	50 10
86	40	0.0	1	35 5
87	44	0.0	1	37 7
88	21	0.0	1	19 2
89	23	0.0	1	19 4
90	20	0.0	1	18 2
91	20	0.0	1	16 4
92	16	0.0	1	14 2
93	20	0.0	1	12 8
94	12	0.0	1	7 5
95	20	0.0	1	15 5
96	11	0.0	1	9 2
97	10	0.0	1	5 5
98	3	0.0	1	3
99	6	0.0	1	6
100	7	0.0	1	5 2
101	6	0.0	1	6
102	6	0.0	1	5 1
103	4	0.0	1	1 3
104	7	0.0	1	7
105	3	0.0	1	2 1
106	10	0.0	1	5 5
107	20	0.0	1	11 9
108	8	0.0	1	4 4
109	7	0.0	1	2 5
110	1	0.0	1	0 1
111	5	0.0	1	4 1
112	2	0.0	1	1 1
113	4	0.0	1	4
114	6	0.0	1	3 3
115	10	0.0	1	7 3
116	9	0.0	1	4 5
117	4	0.0	1	3 1
118	1	0.0	1	0 1
119	1	0.0	1	1
120	3	0.0	1	3
121	1	0.0	1	1
123	2	0.0	1	2
124	2	0.0	1	2
125	5	0.0	1	4 1
126	3	0.0	1	2 1
127	10	0.0	1	6 4
128	2	0.0	1	2
129	7	0.0	1	5 2
130	4	0.0	1	3 1
131	4	0.0	1	3 1
132	2	0.0	1	1 1
133	5	0.0	1	4 1
134	13	0.0	1	13
135	4	0.0	1	4
136	11	0.0	1	11
137	2	0.0	1	1 1
138	2	0.0	1	2
140	1	0.0	1	1
141	3	0.0	1	3
143	1	0.0	1	0 1
144	2	0.0	1	1 1
145	3	0.0	1	3
146	1	0.0	1	1
147	15	0.0	1	13 2
148	2	0.0	1	2
149	12	0.0	1	12
150	3	0.0	1	2 1
152	1	0.0	1	1
154	11	0.0	1	8 3
155	4	0.0	1	2 2
156	10	0.0	1	7 3
157	1	0.0	1	1
159	2	0.0	1	2
160	1	0.0	1	1
161	1	0.0	1	1
162	1	0.0	1	1
164	3	0.0	1	3
165	3	0.0	1	3
166	1	0.0	1	1
167	2	0.0	1	1 1
168	3	0.0	1	3
169	4	0.0	1	3 1
170	1	0.0	1	1
171	1	0.0	1	1
172	6	0.0	1	6
173	1	0.0	1	1
174	4	0.0	1	3 1
176	3	0.0	1	3
177	2	0.0	1	2
182	2	0.0	1	2
183	1	0.0	1	1
184	1	0.0	1	1
186	1	0.0	1	1
187	6	0.0	1	6
188	1	0.0	1	1
189	8	0.0	1	8
190	6	0.0	1	6
191	3	0.0	1	3
192	5	0.0	1	5
193	7	0.0	1	7
195	3	0.0	1	3
196	1	0.0	1	1
197	3	0.0	1	3
198	5	0.0	1	5
199	5	0.0	1	5
200	8	0.0	1	8
201	2	0.0	1	2
202	3	0.0	1	3
203	14	0.0	1	13 1
204	9	0.0	1	9
205	5	0.0	1	5
206	10	0.0	1	9 1
207	8	0.0	1	7 1
208	16	0.0	1	15 1
209	9	0.0	1	9
210	7	0.0	1	7
211	10	0.0	1	10
212	6	0.0	1	6
213	3	0.0	1	3
214	2	0.0	1	2
215	4	0.0	1	4
217	9	0.0	1	9
218	1	0.0	1	1
220	1	0.0	1	1
221	1	0.0	1	1
223	1	0.0	1	0 1
236	1	0.0	1	1
251	16	0.0	1	0 16

RUN STATISTICS FOR INPUT FILE: Plate3BLANK2/host_removal/Plate3BLANK2_R2.fastq.gz
=============================================
41951 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files Plate3BLANK2_R1_trimmed.fq.gz and Plate3BLANK2_R2_trimmed.fq.gz
file_1: Plate3BLANK2_R1_trimmed.fq.gz, file_2: Plate3BLANK2_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: Plate3BLANK2_R1_trimmed.fq.gz and Plate3BLANK2_R2_trimmed.fq.gz <<<<<
Writing validated paired-end Read 1 reads to Plate3BLANK2_R1_val_1.fq.gz
Writing validated paired-end Read 2 reads to Plate3BLANK2_R2_val_2.fq.gz

Total number of sequences analysed: 41951

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 224 (0.53%)


  >>> Now running FastQC on the validated data Plate3BLANK2_R1_val_1.fq.gz<<<

Started analysis of Plate3BLANK2_R1_val_1.fq.gz
Approx 5% complete for Plate3BLANK2_R1_val_1.fq.gz
Approx 10% complete for Plate3BLANK2_R1_val_1.fq.gz
Approx 15% complete for Plate3BLANK2_R1_val_1.fq.gz
Approx 20% complete for Plate3BLANK2_R1_val_1.fq.gz
Approx 25% complete for Plate3BLANK2_R1_val_1.fq.gz
Approx 30% complete for Plate3BLANK2_R1_val_1.fq.gz
Approx 35% complete for Plate3BLANK2_R1_val_1.fq.gz
Approx 40% complete for Plate3BLANK2_R1_val_1.fq.gz
Approx 45% complete for Plate3BLANK2_R1_val_1.fq.gz
Approx 50% complete for Plate3BLANK2_R1_val_1.fq.gz
Approx 55% complete for Plate3BLANK2_R1_val_1.fq.gz
Approx 60% complete for Plate3BLANK2_R1_val_1.fq.gz
Approx 65% complete for Plate3BLANK2_R1_val_1.fq.gz
Approx 70% complete for Plate3BLANK2_R1_val_1.fq.gz
Approx 75% complete for Plate3BLANK2_R1_val_1.fq.gz
Approx 80% complete for Plate3BLANK2_R1_val_1.fq.gz
Approx 85% complete for Plate3BLANK2_R1_val_1.fq.gz
Approx 90% complete for Plate3BLANK2_R1_val_1.fq.gz
Approx 95% complete for Plate3BLANK2_R1_val_1.fq.gz

  >>> Now running FastQC on the validated data Plate3BLANK2_R2_val_2.fq.gz<<<

Started analysis of Plate3BLANK2_R2_val_2.fq.gz
Approx 5% complete for Plate3BLANK2_R2_val_2.fq.gz
Approx 10% complete for Plate3BLANK2_R2_val_2.fq.gz
Approx 15% complete for Plate3BLANK2_R2_val_2.fq.gz
Approx 20% complete for Plate3BLANK2_R2_val_2.fq.gz
Approx 25% complete for Plate3BLANK2_R2_val_2.fq.gz
Approx 30% complete for Plate3BLANK2_R2_val_2.fq.gz
Approx 35% complete for Plate3BLANK2_R2_val_2.fq.gz
Approx 40% complete for Plate3BLANK2_R2_val_2.fq.gz
Approx 45% complete for Plate3BLANK2_R2_val_2.fq.gz
Approx 50% complete for Plate3BLANK2_R2_val_2.fq.gz
Approx 55% complete for Plate3BLANK2_R2_val_2.fq.gz
Approx 60% complete for Plate3BLANK2_R2_val_2.fq.gz
Approx 65% complete for Plate3BLANK2_R2_val_2.fq.gz
Approx 70% complete for Plate3BLANK2_R2_val_2.fq.gz
Approx 75% complete for Plate3BLANK2_R2_val_2.fq.gz
Approx 80% complete for Plate3BLANK2_R2_val_2.fq.gz
Approx 85% complete for Plate3BLANK2_R2_val_2.fq.gz
Approx 90% complete for Plate3BLANK2_R2_val_2.fq.gz
Approx 95% complete for Plate3BLANK2_R2_val_2.fq.gz
Deleting both intermediate output files Plate3BLANK2_R1_trimmed.fq.gz and Plate3BLANK2_R2_trimmed.fq.gz

====================================================================================================

